{"version":3,"sources":["i18n.ts","my_util/Util.tsx","pages/MyBanner.tsx","pages/IndexPage.tsx","pages/IPDownload.tsx","pages/IPPage.tsx","pages/TestAnimation.tsx","pages/wiki/WikiHeading.tsx","pages/wiki/WikiContent.tsx","pages/wiki/WikiSidebar.tsx","pages/wiki/WikiPage.tsx","AnimatedPages.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","react","MyButton","props","Button","style","textTransform","variant","onClick","href","children","useEndPoint","url","useState","data","complete","pending","error","res","setRes","useEffect","Axios","then","catch","notEmpty","value","undefined","gfm","require","myMarkdownRenderers","image","a","src","className","alt","heading","level","Typography","fontSize","MyMarkdown","plugins","renderers","MyRemoteMarkdown","resultData","getIsVerticalMobile","window","innerHeight","innerWidth","getPublicResourcePath","path","process","getStringBetween","str","before","after","i","indexOf","j","length","substr","MyBanner","location","useLocation","history","useHistory","currLanguage","i18next","language","getCurrentLanguage","hyphenIndex","document","title","text","getElementById","pageIconPath","AppBar","position","sticky","backgroundColor","color","margin","padding","top","Toolbar","currPath","pathname","lastIndexOf","push","IndexPage","useTranslation","t","cardStyle","marginLeft","marginTop","Card","maxWidth","square","elevation","CardActionArea","display","flexDirection","justifyContent","background","width","getModVersionFromModJarName","modJarName","DownloadTerm","expandIcon","id","downloadUrl","isPreRelease","modVersion","AccordionDetails","alignItems","upgradeInfo","open","publishTime","downloadCount","IPDownload","releaseInfo","toDisplay","map","modJarAssets","assets","filter","asset","name","publishDate","published_at","mcVersion","browser_download_url","body","prerelease","download_count","groupedByMcVersion","_","groupBy","r","toPairsIn","pair","termList","firstRelease","findIndex","term","splice","IPFeatures","IPPage","downloadSectionRef","useRef","spacing","flexWrap","minHeight","marginBottom","flexGrow","marginRight","alignSelf","flexBasis","minWidth","current","scrollIntoView","behavior","to","textDecoration","ref","transitionStyles","entering","clipPath","entered","exiting","exited","TestAnimated","defaultStyle","transition","duration","Transition","in","shown","timeout","state","getHeadingColor","WikiHeading","myRef","headingHash","node","myHeadingHash","hash","getHeadingFontSize","flexShrink","IconButton","Object","keys","defaultRenderers","isHeading","type","isHeadingWithContent","obj","myType","toRemoveFromHash","produceHeadingHash","headingNode","joined","n","join","toLowerCase","replace","HeadingHierarchyParser","c","currIndex","headingDiscriminatorNumbers","this","Map","headingIndex","findIndexFrom","result","slice","minDepth","base","parseNonHeadingContents","isEnded","currHeading","currDepth","depth","remaining","parseHierarchy","originalHeadingHash","number","get","discriminatedHeadingHash","set","headingElement","contents","myParseMarkdownAsync","source","processor","unified","parse","run","tree","wrapTableRows","addListMetadata","naiveHtml","WikiSection","item","index","childIndex","start","line","Fragment","astToReact","renderOptions","RightBarSection","opened","setOpened","selected","setSelected","hasContent","w","domRef","cond","outerSelectedHash","setOuterSelected","s","headingColor","ListItem","button","paddingLeft","layer","onTitleClick","ExpandLess","Collapse","List","dense","getHeadingRefs","hierarchy","forEach","element","console","useWikiContent","contentUrl","scrollDomRef","reactMarkdownProps","setTree","errorLoading","setErrorLoading","markdownResult","renderer","parsedMarkdown","doIt","rendererProps","xtend","definitions","getDefinitions","getRendererProps","viewingSectionHash","setViewingSectionHash","wikiContents","enableSectionUpdate","timerRef","clearTimeout","headingRefs","updateScrollMemoed","useCallback","active","scrollTop","scrollHeight","screenHeight","documentElement","clientHeight","scrollPosition","offsetTop","titles","v","setTimeout","wikiContentComponent","rightBarComponent","updateScrollFunc","WikiToSideBarContext","React","createContext","setTitle","onTermClicked","getLocalWikiUrlFromGithubWikiUrl","githubWikiUrl","MySidebarLink","localUrl","context","useContext","e","sidebarMarkdownRenderers","link","paragraph","MyLinkInWiki","targetLink","localWikiUrlFromGithubWikiUrl","wikiMarkdownRenderers","table","Table","tableHead","TableHead","tableRow","TableRow","tableBody","TableBody","tableCell","TableCell","IPWikiPage","sidebarUrl","sideBarData","wikiContentUrl","head","innerPath","b","getStringAfter","getMdUrlFromWikiUrl","wikiTitle","setWikiTitle","isDrawerOpen","setIsDrawerOpen","leftBarComponent","Provider","Divider","component","leftBarOnMobile","Drawer","anchor","onClose","leftBarOnPC","realScrollCallback","debouncedFunc","throttle","cancel","isVerticalMobile","overflowY","onScroll","AnimatedPages","TransitionGroup","CSSTransition","classNames","exact","fallback","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f5367cf0.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport {initReactI18next} from \"react-i18next\";\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\n\r\ni18n\r\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n    // learn more: https://github.com/i18next/i18next-http-backend\r\n    .use(Backend)\r\n\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector)\r\n\r\n    .use(initReactI18next)\r\n\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        // detection: detectorOptions,\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n\r\n        react: {\r\n            // useSuspense: false\r\n        }\r\n    });\r\n\r\n// // catch the event and make changes accordingly\r\n// i18n.on('languageChanged', function(lng) {\r\n//\r\n// });\r\n\r\nexport default i18n;","import { Button } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport i18next from \"i18next\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport throttle from 'lodash/throttle';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nexport function MyButton(props: { children: any, style?: React.CSSProperties, onClick?: any, href?: any }) {\r\n    return <Button style={{\r\n        textTransform: 'none', ...props.style\r\n    }} variant={\"contained\"} onClick={props.onClick} href={props.href}>{props.children}</Button>;\r\n}\r\n\r\n\r\nexport function useEndPoint(url: string) {\r\n    const [res, setRes] = useState({\r\n        data: null,\r\n        complete: false,\r\n        pending: false,\r\n        error: false\r\n    });\r\n    useEffect(\r\n        () => {\r\n            setRes({\r\n                data: null,\r\n                pending: true,\r\n                error: false,\r\n                complete: false\r\n            });\r\n            Axios({ url: url })\r\n                .then(res =>\r\n                    setRes({\r\n                        data: res.data,\r\n                        pending: false,\r\n                        error: false,\r\n                        complete: true\r\n                    }),\r\n                )\r\n                .catch(() =>\r\n                    setRes({\r\n                        data: null,\r\n                        pending: false,\r\n                        error: true,\r\n                        complete: true\r\n                    }),\r\n                );\r\n        },\r\n        [url]\r\n    );\r\n    return res;\r\n}\r\n\r\nexport function getCurrentLanguage() {\r\n    var currLanguage = i18next.language;\r\n\r\n    if (currLanguage === undefined) {\r\n        currLanguage = 'en';\r\n    }\r\n    return currLanguage;\r\n}\r\n\r\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\r\n    return value !== null && value !== undefined;\r\n}\r\n\r\nexport function swapInArray<TValue>(array: TValue[], i1: number, i2: number) {\r\n    var temp = array[i1];\r\n    array[i1] = array[i2];\r\n    array[i2] = temp;\r\n}\r\n\r\nconst gfm = require('remark-gfm')\r\n\r\nexport const myMarkdownRenderers = {\r\n    image: (a: any) => {\r\n        return <img src={a.src} className='MD-Image' alt={a.alt} />\r\n    },\r\n    heading: (a: any) => {\r\n        // console.log(a)\r\n        const level: any = a.level;\r\n\r\n        return <Typography style={{ fontSize: 40 - level * 5 }}>{a.children}</Typography>\r\n    }\r\n}\r\n\r\nexport function MyMarkdown(props: { children: any }) {\r\n    return <ReactMarkdown className='My-MD' plugins={[gfm]} renderers={myMarkdownRenderers}>\r\n        {props.children}\r\n    </ReactMarkdown>\r\n}\r\n\r\nexport function MyRemoteMarkdown(props: { url: string }) {\r\n    const { data: resultData, complete: resultComplete } = useEndPoint(props.url);\r\n\r\n    return resultComplete ? (<MyMarkdown children={resultData || 'error loading ' + props.url} />)\r\n        : (<CircularProgress />)\r\n}\r\n\r\nexport function getStringAfter(a: string, b: string) {\r\n    var i = a.lastIndexOf(b);\r\n    if (i === -1) {\r\n        return a;\r\n    }\r\n    return a.substr(i + b.length);\r\n}\r\n\r\nexport function getIsVerticalMobile() {\r\n    // return true\r\n    return window.innerHeight > window.innerWidth;\r\n}\r\n\r\nconst noop = () => {\r\n};\r\n\r\n//from MaterialUI\r\nexport function useThrottledOnScroll(callback: any, delay: number | undefined) {\r\n    const throttledCallback = React.useMemo(\r\n        () => (callback ? throttle(callback, delay) : noop),\r\n        [callback, delay,]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        if (throttledCallback === noop) {\r\n            return undefined;\r\n        }\r\n\r\n        window.addEventListener('scroll', throttledCallback);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', throttledCallback);\r\n            // @ts-ignore\r\n            throttledCallback.cancel();\r\n        };\r\n    }, [throttledCallback]);\r\n}\r\n\r\nexport function BannerHideOnScroll(props: {\r\n    window?: () => Window;\r\n    children: React.ReactElement;\r\n}) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n\r\nexport function getPublicResourcePath(path: string) {\r\n    return process.env.PUBLIC_URL + path;\r\n}\r\n\r\nexport function getStringBetween(str:string,before:string,after:string){\r\n    let i = str.indexOf(before);\r\n\r\n    if (i === -1) {\r\n        return ''\r\n    }\r\n    \r\n    let j = str.indexOf(after, i+before.length);\r\n\r\n    if (j === -1) {\r\n        return '';\r\n    }\r\n\r\n    return str.substr(i + before.length, j-i-before.length);\r\n}","import {MenuItem, Select} from \"@material-ui/core\";\r\nimport React, {useEffect} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport i18next from \"i18next\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport {getCurrentLanguage, getStringAfter} from \"../my_util/Util\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport function MyBanner(props: {\r\n    text: string, color: string, children?: any,\r\n    sticky?: boolean, pageIconPath: string\r\n}) {\r\n    const location = useLocation();\r\n    \r\n    let history = useHistory();\r\n    var currLanguage = getCurrentLanguage();\r\n    \r\n    var hyphenIndex = currLanguage.indexOf('-');\r\n    if (hyphenIndex !== -1) {\r\n        currLanguage = currLanguage.substr(0, hyphenIndex);\r\n    }\r\n    \r\n    // console.log(currLanguage)\r\n    \r\n    useEffect(() => {\r\n        document.title = props.text;\r\n        // @ts-ignore\r\n        document.getElementById('page_icon').href = props.pageIconPath;\r\n    }, []);\r\n    \r\n    return <AppBar style={{\r\n        position: props.sticky ? 'sticky' : 'relative', backgroundColor: props.color,\r\n        margin: 0, padding: 0,\r\n        top: props.sticky ? 0 : undefined\r\n    }}>\r\n        <Toolbar>\r\n            {props.children}\r\n            <Button onClick={() => {\r\n                const currPath = location.pathname;\r\n                const i = currPath.lastIndexOf('/');\r\n                if (i !== -1) {\r\n                    history.push(currPath.substr(0, i));\r\n                }\r\n            }} style={{textTransform: 'none'}}>\r\n                <Typography variant='h6' style={{color: 'white'}}>{props.text}</Typography>\r\n            </Button>\r\n            \r\n            {/*<TranslateIcon style={{marginLeft: 'auto', marginRight: '1vw'}}/>*/}\r\n            \r\n            {/*<Select id='language-select' style={{*/}\r\n            {/*    color: 'white'*/}\r\n            {/*}} value={currLanguage} onChange={(a) => {*/}\r\n            {/*    var languageStr = a.target.value;*/}\r\n            {/*    i18next.changeLanguage(languageStr as string)*/}\r\n            {/*}}>*/}\r\n            {/*    <MenuItem value={'zh'}>简体中文</MenuItem>*/}\r\n            {/*    <MenuItem value={'en'}>English</MenuItem>*/}\r\n            {/*</Select>*/}\r\n        </Toolbar>\r\n    \r\n    \r\n    </AppBar>;\r\n}","import React, {Component, CSSProperties, useState} from \"react\";\r\nimport {createStyles, Grid, Theme} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {getIsVerticalMobile, getPublicResourcePath, MyButton} from \"../my_util/Util\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport {TestAnimated} from \"./TestAnimation\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {MyBanner} from \"./MyBanner\";\r\n\r\nimport {useTranslation} from 'react-i18next';\r\nimport {TFunction} from \"i18next\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\n\r\nexport function IndexPage(props: {}) {\r\n    \r\n    let history = useHistory();\r\n    \r\n    \r\n    let {t, i18n} = useTranslation();\r\n    \r\n    const cardStyle: CSSProperties = getIsVerticalMobile() ? {margin: 20} : {\r\n        margin: 20, marginLeft: 100, marginTop: 50\r\n    };\r\n    \r\n    return <div className=\"My-Page\">\r\n        <MyBanner text='qouteall' color='#ff4569' pageIconPath='/benzene.jpg'/>\r\n        <div className=\"App-header\">\r\n            <div className=\"Mask\"/>\r\n            <div className=\"Right-section\">\r\n                \r\n                <p className=\"Header-text\">\r\n                    qouteall\r\n                </p>\r\n                <p className=\"Sub-Header\">\r\n                    {t('main_desc')}\r\n                </p>\r\n            </div>\r\n            \r\n            <img src={getPublicResourcePath('/headerImage.png')} className=\"Header-image\" alt=\"what\"/>\r\n        \r\n        \r\n        </div>\r\n        \r\n        <div style={cardStyle}>\r\n            <Card style={{maxWidth: '80vh'}} square={false} elevation={10}>\r\n                <CardActionArea style={{\r\n                    display: 'flex', flexDirection: 'row', justifyContent: 'flex-start',\r\n                    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n                }} onClick={() => {\r\n                    history.push('/immptl')\r\n                }}>\r\n                    <img src={getPublicResourcePath('/immptl.png')} alt='i am alt' style={{width: 100}}/>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'flex-start',\r\n                        marginLeft: 20\r\n                    }}>\r\n                        <label style={{\r\n                            textTransform: 'none',\r\n                            color: 'black',\r\n                            fontSize: 'calc(8px + 2vmin)'\r\n                        }}>\r\n                            {t(\"immptl\")}\r\n                        </label>\r\n                        <label style={{\r\n                            textTransform: 'none',\r\n                            color: 'black',\r\n                            fontSize: 'calc(5px + 2vmin)',\r\n                        }}>\r\n                            {t(\"immptl_desc\")}\r\n                        </label>\r\n                    </div>\r\n                </CardActionArea>\r\n            </Card>\r\n        </div>\r\n    </div>;\r\n    \r\n}\r\n","import Accordion from \"@material-ui/core/Accordion/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary/AccordionSummary\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\r\nimport React from \"react\";\r\nimport { getStringBetween, MyButton, notEmpty, useEndPoint } from \"../my_util/Util\";\r\nimport { AccordionDetails, Typography } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport _, { Dictionary } from \"lodash\";\r\n\r\ninterface GAsset {\r\n    browser_download_url: string;\r\n    name: string;//filename\r\n    download_count: number;\r\n}\r\n\r\ninterface GReleaseInfo {\r\n    assets: GAsset[];\r\n    tag_name: string;\r\n    body: string;\r\n    prerelease: boolean;\r\n    published_at: string;\r\n}\r\n\r\n// deprecated because firefox doesn't support it\r\n// var findModVersion = new RegExp('(?<=immersive\\-portals\\-).+?(?=\\-)');\r\n// var findMcVersion = new RegExp('(?<=mc).+?(?=\\-)');\r\n\r\n\r\n\r\nfunction getModVersionFromModJarName(modJarName: string) {\r\n    const front = 'immersive-portals-';\r\n    const after = '-';\r\n    \r\n    return getStringBetween(modJarName,front,after);\r\n\r\n    // var found = findModVersion.exec(modJarName);\r\n    // if (found == null) {\r\n    //     return null;\r\n    // }\r\n    // return found[0];\r\n}\r\n\r\nfunction getMcVersionFromModJarName(modJarName: string) {\r\n    return getStringBetween(modJarName,'mc','-fabric');\r\n    \r\n    // var found = findMcVersion.exec(modJarName);\r\n    // if (found == null) {\r\n    //     return null;\r\n    // }\r\n    // return found[0];\r\n}\r\n\r\ninterface ToDisplay {\r\n    mcVersion: string;\r\n    modVersion: string;\r\n    downloadUrl: string;\r\n    upgradeInfo: string;\r\n    isPreRelease: boolean;\r\n    publishTime: string;\r\n    downloadCount: number;\r\n}\r\n\r\nfunction DownloadTerm(props: { data: ToDisplay }) {\r\n    let { t, i18n } = useTranslation();\r\n\r\n    return <Accordion key={props.data.downloadUrl} style={{ backgroundColor: '#80cbc4', color: 'black' }}>\r\n        <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={props.data.downloadUrl}\r\n        >\r\n            <Typography>{\r\n                (props.data.isPreRelease ? '[Pre-release] ' : '') + props.data.modVersion\r\n            }</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n            <Typography>{props.data.upgradeInfo}</Typography>\r\n            <div style={{ margin: 10 }} />\r\n            <MyButton onClick={() => {\r\n                window.open(props.data.downloadUrl, '_blank')\r\n            }}>{t('Download')}</MyButton>\r\n            <div style={{ margin: 10 }} />\r\n            <Typography variant='caption'>\r\n                {'Published at ' + props.data.publishTime}\r\n            </Typography>\r\n            <Typography variant='caption'>\r\n                {'Download count (GitHub): ' + props.data.downloadCount}\r\n            </Typography>\r\n        </AccordionDetails>\r\n    </Accordion>;\r\n}\r\n\r\nexport function IPDownload(props: {}) {\r\n    let { t, i18n } = useTranslation();\r\n\r\n    const { data: resultData, complete: resultComplete } = useEndPoint(\r\n        \"https://api.github.com/repos/qouteall/immersiveportalsmod/releases\"\r\n    );\r\n\r\n    if (!resultComplete) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    const releaseInfo = resultData as unknown as GReleaseInfo[];\r\n\r\n    // console.log(releaseInfo)\r\n\r\n    if (!releaseInfo) {\r\n        return <p>error</p>\r\n    }\r\n\r\n    const toDisplay: ToDisplay[] = releaseInfo\r\n        .map((releaseInfo: GReleaseInfo) => {\r\n            var modJarAssets = releaseInfo.assets.filter(asset => asset.name.indexOf('fabric') >= 0);\r\n            if (modJarAssets.length === 0) {\r\n                return null;\r\n            }\r\n            var asset = modJarAssets[0];\r\n\r\n            const publishDate = releaseInfo.published_at.substr(\r\n                0, releaseInfo.published_at.indexOf('T')\r\n            );\r\n\r\n            return {\r\n                mcVersion: getMcVersionFromModJarName(asset.name),\r\n                modVersion: getModVersionFromModJarName(asset.name),\r\n                downloadUrl: asset.browser_download_url,\r\n                upgradeInfo: releaseInfo.body,\r\n                isPreRelease: releaseInfo.prerelease,\r\n                publishTime: publishDate,\r\n                downloadCount: asset.download_count\r\n            } as ToDisplay;\r\n        })\r\n        .filter(notEmpty);\r\n\r\n    const groupedByMcVersion: Dictionary<ToDisplay[]> = _.groupBy(\r\n        toDisplay,\r\n        (r: ToDisplay) => r.mcVersion\r\n    );\r\n\r\n\r\n    return <div>\r\n        {_.toPairsIn(groupedByMcVersion).map((pair) => {\r\n            const [mcVersion, termList] = pair;\r\n\r\n            const firstRelease: number = termList.findIndex((term) => !term.isPreRelease);\r\n            if (firstRelease !== -1) {\r\n                //remove the first release and insert into the first\r\n                termList.splice(0, 0, ...(termList.splice(firstRelease, 1)))\r\n            }\r\n\r\n            return <Accordion key={pair[0]} style={{ backgroundColor: '#ffd699', color: 'black' }}>\r\n                <AccordionSummary>\r\n                    {mcVersion}\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails>\r\n                    <div style={{ width: '100%' }}>\r\n                        {termList.map(r => <DownloadTerm data={r} key={r.downloadUrl} />)}\r\n                    </div>\r\n                </AccordionDetails>\r\n            </Accordion>;\r\n        })}\r\n        {/*{toDisplay.map(r => <DownloadTerm data={r}/>)}*/}\r\n    </div>\r\n}","import React, { useRef } from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { MyBanner } from \"./MyBanner\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getIsVerticalMobile, getPublicResourcePath, MyButton, MyRemoteMarkdown } from \"../my_util/Util\";\r\nimport { IPDownload } from \"./IPDownload\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport function IPFeatures(props: {}) {\r\n    let { t, i18n } = useTranslation();\r\n\r\n    const path = t('url_ip_features');\r\n\r\n    return <MyRemoteMarkdown url={path} />\r\n\r\n}\r\n\r\nexport function IPPage(props: {}) {\r\n    let history = useHistory();\r\n\r\n    let { t, i18n } = useTranslation();\r\n\r\n    const path = t('url_ip');\r\n\r\n    // const {data: resultData, complete: resultComplete} = useEndPoint(path);\r\n\r\n    const downloadSectionRef = useRef(null)\r\n\r\n    const executeScroll = () => {\r\n        // @ts-ignore\r\n        downloadSectionRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    const spacing = getIsVerticalMobile() ? 15 : 30;\r\n\r\n    // const background = 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)';\r\n\r\n    const background='#e8eaf6';\r\n    \r\n    return (\r\n        <div className='My-Page'>\r\n            <MyBanner text='Immersive Portals' color='#9500ae' pageIconPath={getPublicResourcePath('/immptl.png')} />\r\n\r\n            <div style={{ margin: spacing, display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\" }}>\r\n                <Card style={{\r\n                    display: 'flex', flexDirection: 'row',\r\n                    justifyContent: 'flex-start', alignItems: 'center',\r\n                    flexWrap: \"wrap\",\r\n                    minHeight: '40vh',\r\n                    background: background,\r\n                    marginBottom: spacing\r\n                }} square={false} elevation={10}>\r\n\r\n                    <img src={getPublicResourcePath('/immptl.png')} alt='i am alt' style={{\r\n                        flexGrow: 0,\r\n                        width: 150,\r\n                        margin: 40,\r\n                        marginRight: 0,\r\n                        marginBottom: getIsVerticalMobile() ? 0 : 40\r\n                    }} />\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'space-between',\r\n                        alignSelf: 'stretch',\r\n                        margin: 40,\r\n                        // marginLeft: 0,\r\n                        marginBottom: 20,\r\n                        flexGrow: 1, flexBasis: 0, minWidth: '50vw'\r\n                    }}>\r\n\r\n                        <MyRemoteMarkdown url={path} />\r\n\r\n                        <div style={{ flexDirection: 'row', justifyContent: 'flex-start' }}>\r\n                            <MyButton style={{ backgroundColor: '#35baf6', margin: 10 }}\r\n                                onClick={executeScroll}\r\n                            >\r\n                                {t('ip_download')}\r\n                            </MyButton>\r\n\r\n                            <Link to='/immptl/wiki' style={{ textDecoration: 'none', color: 'black' }}>\r\n                                <MyButton style={{ backgroundColor: '#35baf6', margin: 10 }}>\r\n                                    {t('ip_wiki')}\r\n                                </MyButton>\r\n                            </Link>\r\n\r\n                            <MyButton style={{ backgroundColor: '#35baf6', margin: 10 }}\r\n                                href='https://github.com/qouteall/ImmersivePortalsMod'\r\n                            >\r\n                                {t('Source')}\r\n                            </MyButton>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Card>\r\n\r\n\r\n                <Card style={{\r\n                    background: background,\r\n                    padding: 20,\r\n                    marginBottom: spacing\r\n                }} elevation={10}>\r\n                    <Typography variant='h6'>{t('Features')}</Typography>\r\n                    <IPFeatures />\r\n                </Card>\r\n\r\n                <Card style={{\r\n                    background: background,\r\n                    padding: 20,\r\n                    marginBottom: spacing\r\n                }} elevation={10} ref={downloadSectionRef}>\r\n                    <Typography variant='h5'>{t('Downloads (Fabric version)')}</Typography>\r\n                    <Typography variant='body1'>{t(\r\n                        'Only the latest minecraft version of this mod is being maintained.'\r\n                    )}</Typography>\r\n                    <IPDownload />\r\n                    <a href='https://www.curseforge.com/minecraft/mc-mods/immersive-portals-mod'>\r\n                        <p>Or Download from CurseForge</p>\r\n                    </a>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}","import React, {CSSProperties} from \"react\";\r\n\r\nimport {Transition} from 'react-transition-group';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst transitionStyles = {\r\n    // entering: {clipPath: 'circle(100%)',},\r\n    // entered: {clipPath: 'circle(100%)',},\r\n    // exiting: {clipPath: 'circle(0%)',},\r\n    // exited: {clipPath: 'circle(0%)',},\r\n    \r\n    entering: {clipPath: 'inset(0%)',},\r\n    entered: {clipPath: '',},\r\n    exiting: {clipPath: 'inset(0% 0% 100% 0%)',},\r\n    exited: {clipPath: 'inset(0% 0% 100% 0%)',},\r\n};\r\n\r\n\r\nexport const TestAnimated = (props: { shown: boolean, children: any,duration:number }) => {\r\n    const defaultStyle = {\r\n        transition: `clip-path ${props.duration}ms ease-in`,\r\n    }\r\n    \r\n    return (\r\n        <Transition in={props.shown} timeout={props.duration}>\r\n            {state => {\r\n                // console.log(state)\r\n                return (\r\n                    <div style={{\r\n                        ...defaultStyle,\r\n                        // @ts-ignore\r\n                        ...transitionStyles[state]\r\n                    }}>\r\n                        {props.children}\r\n                    </div>\r\n                );\r\n            }}\r\n        </Transition>\r\n    );\r\n};","import React, {useEffect, useRef} from \"react\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nexport function getHeadingFontSize(level: number) {\r\n    let fontSize = 55;\r\n    \r\n    switch (level) {\r\n        case 1:\r\n            fontSize = 36\r\n            break\r\n        case 2:\r\n            fontSize = 32\r\n            break\r\n        case 3:\r\n            fontSize = 27\r\n            break\r\n        case 4:\r\n            fontSize = 22\r\n            break\r\n        case 5:\r\n            fontSize = 20\r\n            break\r\n    }\r\n    return fontSize;\r\n}\r\n\r\nexport function getHeadingColor(level: number) {\r\n    let background = \"#ed4b82\";\r\n    switch (level) {\r\n        case 1:\r\n            background = \"#4dabf5\"\r\n            break\r\n        case 2:\r\n            background = \"#00a152\"\r\n            break\r\n        case 3:\r\n            background = \"#ffac33\"\r\n            break\r\n        case 4:\r\n            background = \"#ed4b82\"\r\n            break\r\n        case 5:\r\n            background = \"#4dabf5\"\r\n            break\r\n    }\r\n    return background;\r\n}\r\n\r\nexport function WikiHeading(props: { level: number, children: any, node: any }) {\r\n    const myRef: React.MutableRefObject<any> = useRef()\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    \r\n    const headingHash = props.node.myHeadingHash;\r\n    \r\n    useEffect(() => {\r\n        if (location.hash) {\r\n            // console.log(headingHash)\r\n            if (location.hash === headingHash) {\r\n                myRef.current.scrollIntoView({behavior: 'smooth'});\r\n            }\r\n        }\r\n    }, [headingHash, location.hash])\r\n    \r\n    const level = props.level;\r\n    const fontSize = getHeadingFontSize(level);\r\n    const background = getHeadingColor(level);\r\n    \r\n    return <div id={headingHash} style={{\r\n        display: \"flex\", flexDirection: \"row\", alignItems: \"stretch\"\r\n    }}>\r\n        <div style={{\r\n            display: \"inline-flex\", width: 5, background: background,\r\n            marginTop: 4, marginBottom: 4, marginRight: 10,\r\n            flexShrink: 0\r\n        }}/>\r\n        <Typography ref={myRef} style={{fontSize: fontSize}}>\r\n            {props.children}\r\n            <IconButton onClick={() => {\r\n                history.push(headingHash)\r\n            }}>\r\n                <LinkIcon/>\r\n            </IconButton>\r\n        </Typography>\r\n    </div>;\r\n}","import React, {\r\n    DOMElement,\r\n    MutableRefObject,\r\n    ReactElement,\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState\r\n} from \"react\";\r\nimport ReactMarkdown, {ReactMarkdownProps} from \"react-markdown\";\r\n\r\nimport xtend from \"xtend\";\r\n\r\nimport unified from \"unified\";\r\n\r\nimport parse from \"remark-parse\";\r\n\r\n// @ts-ignore\r\nimport naiveHtml from \"react-markdown/lib/plugins/naive-html\"\r\n\r\n// @ts-ignore\r\nimport addListMetadata from \"mdast-add-list-metadata\";\r\n\r\n// @ts-ignore\r\nimport astToReact from \"react-markdown/lib/ast-to-react\";\r\n\r\n// @ts-ignore\r\nimport wrapTableRows from \"react-markdown/lib/wrap-table-rows\";\r\n\r\n// @ts-ignore\r\nimport getDefinitions from \"react-markdown/lib/get-definitions\";\r\n\r\n// @ts-ignore\r\nimport defaultRenderers from \"react-markdown/lib/renderers\";\r\nimport _ from \"lodash/fp\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {CircularProgress, List} from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\r\nimport {getIsVerticalMobile, useThrottledOnScroll} from \"../../my_util/Util\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Axios, {AxiosResponse} from \"axios\";\r\nimport AnimateHeight from \"react-animate-height\";\r\nimport {TestAnimated} from \"../TestAnimation\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {getHeadingColor} from \"./WikiHeading\";\r\n\r\n// @ts-ignore\r\n\r\nvar allTypes = Object.keys(defaultRenderers);\r\n\r\ntype Content = Array<HeadingWithContent | Array<Content>>\r\n\r\ninterface HeadingWithContent {\r\n    myType: 'heading_with_content',\r\n    headingElement: any | null,//only the root has null heading\r\n    contents: Array<HeadingWithContent | any>\r\n}\r\n\r\nfunction isHeading(node: any) {\r\n    return node.type === 'heading';\r\n}\r\n\r\nfunction isHeadingWithContent(obj: any): obj is HeadingWithContent {\r\n    return obj.myType === 'heading_with_content';\r\n}\r\n\r\nconst toRemoveFromHash: RegExp = /[!\"#$%&'()*+,./:;<=>?@\\^`{|}~]/g\r\n\r\nfunction headingTextToHash(heading: string) {\r\n    return '#' + heading.toLowerCase().replace(/ /g, '-')\r\n        .replace(toRemoveFromHash, '');\r\n}\r\n\r\nfunction produceHeadingHash(headingNode: any): string {\r\n    // @ts-ignore\r\n    const joined = headingNode.children.map(n => n.value).join('');\r\n    return headingTextToHash(joined);\r\n}\r\n\r\nclass HeadingHierarchyParser {\r\n    children: Array<any>;\r\n    currIndex: number;\r\n    headingDiscriminatorNumbers: Map<string, number>;\r\n    \r\n    constructor(c: Array<any>) {\r\n        this.children = c;\r\n        this.currIndex = 0;\r\n        this.headingDiscriminatorNumbers = new Map();\r\n    }\r\n    \r\n    isEnded(): boolean {\r\n        return this.currIndex >= this.children.length;\r\n    }\r\n    \r\n    parseNonHeadingContents(): Array<any> {\r\n        const headingIndex = _.findIndexFrom(isHeading, this.currIndex, this.children);\r\n        if (headingIndex === -1) {\r\n            const result = this.children.slice(this.currIndex);\r\n            this.currIndex = this.children.length;\r\n            return result;\r\n        }\r\n        const result = this.children.slice(this.currIndex, headingIndex);\r\n        this.currIndex = headingIndex;\r\n        return result;\r\n    }\r\n    \r\n    parseHierarchy(minDepth: number): Array<HeadingWithContent | any> {\r\n        const base: Array<HeadingWithContent | any> = this.parseNonHeadingContents();\r\n        \r\n        while (!this.isEnded()) {\r\n            const currHeading = this.children[this.currIndex];\r\n            const currDepth = currHeading.depth;\r\n            if (currDepth < minDepth) {\r\n                return base;\r\n            }\r\n            this.currIndex += 1;//swallow the header\r\n            \r\n            const remaining = this.parseHierarchy(currDepth + 1);\r\n            \r\n            const originalHeadingHash = produceHeadingHash(currHeading);\r\n            const number = this.headingDiscriminatorNumbers.get(originalHeadingHash);\r\n            let discriminatedHeadingHash;\r\n            if (number !== undefined) {\r\n                this.headingDiscriminatorNumbers.set(originalHeadingHash, number + 1);\r\n                discriminatedHeadingHash = originalHeadingHash + '-' + number;\r\n            } else {\r\n                this.headingDiscriminatorNumbers.set(originalHeadingHash, 1);\r\n                discriminatedHeadingHash = originalHeadingHash;\r\n            }\r\n            currHeading.myHeadingHash = discriminatedHeadingHash;\r\n            \r\n            base.push({myType: 'heading_with_content', headingElement: currHeading, contents: remaining});\r\n        }\r\n        \r\n        return base;\r\n    }\r\n    \r\n    parseDocument(): HeadingWithContent {\r\n        const contents = this.parseHierarchy(0);\r\n        \r\n        return {\r\n            myType: 'heading_with_content',\r\n            headingElement: null,//only the root has null heading\r\n            contents: contents\r\n        };\r\n    }\r\n}\r\n\r\nfunction extractHeadingContentGroup(children: Array<any>): Array<HeadingWithContent | any> {\r\n    \r\n    var result = new HeadingHierarchyParser(children).parseHierarchy(0);\r\n    \r\n    \r\n    return result;\r\n}\r\n\r\nfunction getRendererProps(props: ReactMarkdown.ReactMarkdownProps, tree: any): any {\r\n    var renderers = xtend(defaultRenderers, props.renderers);\r\n    \r\n    var renderProps = xtend(props, {\r\n        renderers: renderers,\r\n        definitions: getDefinitions(tree)\r\n    });\r\n    return renderProps;\r\n}\r\n\r\nasync function myParseMarkdownAsync(props: ReactMarkdownProps) {\r\n    var src = props.source || props.children || '';\r\n    \r\n    var processor = unified().use(parse).use(props.plugins || []); // eslint-disable-next-line no-sync\r\n    \r\n    var tree = await processor.run(processor.parse(src));\r\n    \r\n    tree = wrapTableRows(tree);\r\n    \r\n    tree = addListMetadata()(tree);\r\n    \r\n    tree = naiveHtml(tree);\r\n    \r\n    // console.log(tree)\r\n    \r\n    return tree;\r\n}\r\n\r\nfunction WikiSection(props: { index: number, data: Array<any>, renderOptions: any }) {\r\n    // const scrollNotifier = useContext(ScrollNotifierContext);\r\n    const myRef = useRef(null);\r\n    \r\n    return <div ref={myRef}>{\r\n        props.data.map((item: any, index: number) => {\r\n            if (isHeadingWithContent(item)) {\r\n                const childIndex: number = item.headingElement.position.start.line;\r\n                return <React.Fragment key={index}>\r\n                    {astToReact(item.headingElement, props.renderOptions)}\r\n                    <WikiSection index={childIndex} key={childIndex} data={item.contents}\r\n                                 renderOptions={props.renderOptions}/>\r\n                </React.Fragment>\r\n            } else {\r\n                return astToReact(item, props.renderOptions);\r\n            }\r\n        })\r\n    }</div>;\r\n}\r\n\r\nfunction RightBarSection(props: {\r\n    outerSelectedHash: string, item: HeadingWithContent, layer: number,\r\n    setOuterSelected: null | ((cond: boolean) => void),\r\n    onTitleClick: () => void\r\n}) {\r\n    let [opened, setOpened] = useState(false);\r\n    let [selected, setSelected] = useState(false);\r\n    \r\n    const history = useHistory()\r\n    \r\n    const item = props.item;\r\n    \r\n    const headingHash = item.headingElement.myHeadingHash;\r\n    \r\n    // console.log(headingHash);\r\n    \r\n    const hasContent = item.contents.findIndex(w => isHeadingWithContent(w)) !== -1;\r\n    \r\n    const domRef = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        var cond = props.outerSelectedHash === headingHash;\r\n        \r\n        setSelected(cond);\r\n        \r\n        if (props.setOuterSelected) {\r\n            props.setOuterSelected(cond);\r\n        }\r\n        \r\n        // if (cond) {\r\n        //     if (domRef.current) {\r\n        //         // @ts-ignore\r\n        //         domRef.current.scrollIntoView({behavior: 'smooth'});\r\n        //     }\r\n        // }\r\n        \r\n    }, [headingHash, props.outerSelectedHash]);\r\n    \r\n    // @ts-ignore\r\n    let toDisplay: string = item.headingElement.children.map(s => s.value).join(' ');\r\n    \r\n    // cut if too long\r\n    if (toDisplay.length > 60) {\r\n        toDisplay = toDisplay.substr(0, 60) + '...';\r\n    }\r\n    \r\n    var headingColor = getHeadingColor(item.headingElement.depth);\r\n    \r\n    return <React.Fragment key={headingHash}>\r\n        <ListItem ref={domRef} button style={{\r\n            padding: 3, paddingLeft: props.layer * 10 + 10,\r\n            display: \"flex\", flexDirection: \"row\", alignItems: \"stretch\"\r\n        }} selected={\r\n            selected\r\n        } onClick={() => {\r\n            if (!(opened && hasContent)) {\r\n                history.push(headingHash);\r\n                \r\n                props.onTitleClick();\r\n            }\r\n            \r\n            setOpened(!opened);\r\n        }}>\r\n            <div style={{\r\n                display: \"inline-flex\", width: 5, background: headingColor,\r\n                marginTop: 1, marginBottom: 0, marginRight: 5,\r\n                flexShrink: 0\r\n            }}/>\r\n            {toDisplay}\r\n            {hasContent && (opened ? <ExpandMore/> : <ExpandLess/>)}\r\n        </ListItem>\r\n        {hasContent && <Collapse in={opened} timeout={200}>\r\n            <List dense={true} style={{padding:0}}>\r\n                {item.contents.map((w, index) => {\r\n                    if (!isHeadingWithContent(w)) {\r\n                        return undefined;\r\n                    }\r\n                    return <RightBarSection\r\n                        key={index}\r\n                        outerSelectedHash={props.outerSelectedHash}\r\n                        item={w}\r\n                        layer={props.layer + 1}\r\n                        setOuterSelected={(cond) => {\r\n                            setSelected(cond);\r\n                            \r\n                            if (cond) {\r\n                                setOpened(true);\r\n                            }\r\n                            \r\n                            if (props.setOuterSelected) {\r\n                                props.setOuterSelected(cond);\r\n                            }\r\n                        }}\r\n                        onTitleClick={props.onTitleClick}\r\n                    />;\r\n                })}\r\n            </List>\r\n        </Collapse>}\r\n    </React.Fragment>;\r\n}\r\n\r\nconst ScrollNotifierContext = React.createContext({\r\n    setSelectIndex: (selectIndex: number) => {\r\n    },\r\n    currentScrollY: 0\r\n});\r\n\r\ninterface HeadingRef {\r\n    headingHash: string,// has '#'\r\n    element: HTMLElement\r\n}\r\n\r\nfunction getHeadingRefs(result: Array<HeadingRef>, hierarchy: Array<any>) {\r\n    // console.log(hierarchy);\r\n    hierarchy.forEach((item) => {\r\n        if (isHeadingWithContent(item)) {\r\n            const headingHash = item.headingElement.myHeadingHash;\r\n            const element = document.getElementById(headingHash);\r\n            if (element !== null) {\r\n                result.push({\r\n                    headingHash: headingHash,\r\n                    element: element\r\n                });\r\n            } else {\r\n                console.error('cannot find ' + headingHash)\r\n            }\r\n            \r\n            getHeadingRefs(result, item.contents)\r\n        }\r\n    })\r\n}\r\n\r\nexport function useWikiContent(\r\n    contentUrl: string,\r\n    renderers: any, plugins: any,\r\n    scrollDomRef: MutableRefObject<DOMElement<any, any>>\r\n): {\r\n    wikiContentComponent: ReactElement,\r\n    rightBarComponent: ReactElement,\r\n    updateScrollFunc: () => void,\r\n} {\r\n    let reactMarkdownProps: ReactMarkdownProps = {\r\n        renderers: renderers, plugins: plugins,\r\n        children: 'loading markdown'\r\n    };\r\n    \r\n    let [tree, setTree] = useState(null);\r\n    \r\n    const [errorLoading, setErrorLoading] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        async function doIt() {\r\n            let markdownResult: AxiosResponse<any>;\r\n            try {\r\n                markdownResult = await Axios({url: contentUrl});\r\n            } catch (e) {\r\n                setErrorLoading(true);\r\n                return\r\n            }\r\n            \r\n            let parsedMarkdown = await myParseMarkdownAsync({\r\n                // @ts-ignore\r\n                renderer: renderers, plugins: plugins,\r\n                children: markdownResult.data\r\n            });\r\n            \r\n            // @ts-ignore\r\n            setTree(parsedMarkdown);\r\n        }\r\n        \r\n        doIt()\r\n    }, []);\r\n    \r\n    const rendererProps: any = tree === null ? null : getRendererProps(reactMarkdownProps, tree);\r\n    \r\n    // @ts-ignore\r\n    const hierarchy = tree === null ? null : extractHeadingContentGroup(tree.children);\r\n    \r\n    const [viewingSectionHash, setViewingSectionHash] = useState('');\r\n    \r\n    const wikiContents = hierarchy === null ? undefined :\r\n        <WikiSection index={0} key={0} data={hierarchy} renderOptions={rendererProps}/>;\r\n    \r\n    const enableSectionUpdate = useRef(true);\r\n    const timerRef = useRef(null);\r\n    \r\n    \r\n    useEffect(() => () => {\r\n        // @ts-ignore\r\n        clearTimeout(timerRef.current);\r\n    }, []);\r\n    \r\n    const headingRefs = useRef([]);\r\n    \r\n    useEffect(() => {\r\n        if (hierarchy !== null) {\r\n            const result: HeadingRef[] = [];\r\n            getHeadingRefs(result, hierarchy);\r\n            // @ts-ignore\r\n            headingRefs.current = result;\r\n            \r\n            // console.log(result);\r\n        }\r\n    }, [hierarchy]);\r\n    \r\n    \r\n    const doUpdateScroll = () => {\r\n        if (getIsVerticalMobile()) {\r\n            setViewingSectionHash('');\r\n            return;\r\n        }\r\n        \r\n        if (!scrollDomRef.current) {\r\n            return;\r\n        }\r\n        \r\n        if (!enableSectionUpdate.current) {\r\n            return;\r\n        }\r\n        \r\n        let active: HeadingRef | null = null;\r\n        \r\n        // @ts-ignore\r\n        const scrollTop: number = scrollDomRef.current.scrollTop;\r\n        // @ts-ignore\r\n        const scrollHeight: number = scrollDomRef.current.scrollHeight;\r\n        \r\n        var screenHeight = document.documentElement.clientHeight;\r\n        \r\n        const scrollPosition = ((scrollTop / (scrollHeight - screenHeight) * scrollHeight))\r\n        \r\n        // const scrollPosition = scrollTop;\r\n        \r\n        // console.log(scrollPosition);\r\n        \r\n        for (let i = headingRefs.current.length - 1; i >= 0; i -= 1) {\r\n            \r\n            const item: HeadingRef = headingRefs.current[i];\r\n            \r\n            if (\r\n                item.element &&\r\n                item.element.offsetTop <\r\n                scrollPosition + screenHeight / 8\r\n            ) {\r\n                active = item;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if (active !== null && viewingSectionHash !== active.headingHash) {\r\n            setViewingSectionHash(active.headingHash);\r\n        }\r\n    };\r\n    \r\n    const updateScrollMemoed = useCallback(doUpdateScroll, [viewingSectionHash]);\r\n    \r\n    const titles = hierarchy === null ? <></> : <List dense={true} style={{\r\n        fontSize: 16\r\n    }}>\r\n        {hierarchy.map((v, index) => {\r\n            if (!isHeadingWithContent(v)) {\r\n                return undefined;\r\n            }\r\n            \r\n            return <RightBarSection\r\n                outerSelectedHash={viewingSectionHash}\r\n                item={v}\r\n                layer={0}\r\n                key={index}\r\n                setOuterSelected={null}\r\n                onTitleClick={() => {\r\n                    enableSectionUpdate.current = false;\r\n                    // @ts-ignore\r\n                    timerRef.current = setTimeout(() => {\r\n                        enableSectionUpdate.current = true;\r\n                        updateScrollMemoed();\r\n                    }, 2000);\r\n                }}\r\n            />;\r\n        })}\r\n    </List>;\r\n    \r\n    // @ts-ignore\r\n    const duration: number = tree ? tree.children.length * 70 : 1000;\r\n    \r\n    return {\r\n        wikiContentComponent: <div>\r\n            <TestAnimated shown={tree !== null} duration={duration}>\r\n                {wikiContents}\r\n            </TestAnimated>\r\n            {errorLoading && <Typography>\r\n                {'error loading ' + contentUrl}\r\n            </Typography>}\r\n            {(tree === null && !errorLoading) &&\r\n            <CircularProgress/>\r\n            }\r\n        </div>,\r\n        rightBarComponent: titles,\r\n        updateScrollFunc: updateScrollMemoed\r\n    };\r\n}\r\n\r\n","import { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport { MyButton } from \"../../my_util/Util\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const WikiToSideBarContext = React.createContext({\r\n    setTitle: (title: string) => {\r\n    },\r\n    onTermClicked: () => {\r\n    }\r\n});\r\n\r\nfunction processLink(url: string): string {\r\n    return url.substr(url.indexOf('/wiki'))\r\n}\r\n\r\nfunction getLocalWikiUrlFromGithubWikiUrl(githubWikiUrl: string) {\r\n    const processed = processLink(githubWikiUrl);\r\n    return '/immptl' + processed;\r\n}\r\n\r\nfunction MySidebarLink(props: { url: string, children: any }) {\r\n    const history = useHistory();\r\n\r\n    const location = useLocation();\r\n\r\n    var githubWikiUrl = props.url;\r\n    var localUrl = getLocalWikiUrlFromGithubWikiUrl(githubWikiUrl);\r\n\r\n    var context = useContext(WikiToSideBarContext);\r\n\r\n    const selected = location.pathname === localUrl;\r\n\r\n    useEffect(() => {\r\n        if (selected) {\r\n            context.setTitle(props.children[0].props.value)\r\n        }\r\n    });\r\n\r\n    return <Link to={localUrl} style={{ textDecoration: 'none', color: 'black' }}>\r\n        <ListItem selected={selected} button onClick={(e) => {\r\n            context.onTermClicked()\r\n            // history.push(localUrl);\r\n        }}>\r\n            {props.children}\r\n        </ListItem>\r\n    </Link>;\r\n}\r\n\r\nexport const sidebarMarkdownRenderers = {\r\n    link: (a: any) => {\r\n        return <MySidebarLink url={a.href}>{a.children}</MySidebarLink>;\r\n    },\r\n    paragraph: (a: any) => a.children\r\n}\r\n\r\nexport function MyLinkInWiki(props: { targetLink: string, children: any }) {\r\n    let history = useHistory();\r\n\r\n    let { t, i18n } = useTranslation();\r\n\r\n    if (props.targetLink.indexOf('github.com/qouteall/ImmersivePortalsMod/wiki') !== -1) {\r\n        //inner link\r\n\r\n        const localWikiUrlFromGithubWikiUrl = getLocalWikiUrlFromGithubWikiUrl(props.targetLink);\r\n\r\n        return <Link to={localWikiUrlFromGithubWikiUrl}>\r\n            <MyButton style={{\r\n                padding: 0, margin: 0\r\n            }}>\r\n                {props.children}\r\n            </MyButton>\r\n        </Link>\r\n    } else {\r\n        //outer link\r\n        return <a href={props.targetLink}>{props.children}</a>\r\n    }\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { MyBanner } from \"../MyBanner\";\r\nimport { CircularProgress, List } from \"@material-ui/core\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport {\r\n    getIsVerticalMobile,\r\n    getPublicResourcePath,\r\n    getStringAfter,\r\n    myMarkdownRenderers,\r\n    useEndPoint\r\n} from \"../../my_util/Util\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { useWikiContent } from \"./WikiContent\";\r\nimport { MyLinkInWiki, sidebarMarkdownRenderers, WikiToSideBarContext } from \"./WikiSidebar\";\r\nimport { WikiHeading } from \"./WikiHeading\";\r\nimport _ from \"lodash/fp\";\r\n\r\nconst gfm = require('remark-gfm')\r\n\r\n//both github wiki url and this website url\r\nfunction getMdUrlFromWikiUrl(url: string, head: string) {\r\n    var innerPath = getStringAfter(url, '/wiki');\r\n\r\n    if (innerPath.length === 0) {\r\n        return head + '/Home.md';\r\n    }\r\n\r\n    return head + innerPath + '.md';\r\n}\r\n\r\nconst wikiMarkdownRenderers = {\r\n    ...myMarkdownRenderers,\r\n    table: (a: any) => {\r\n        return <Table>{a.children}</Table>\r\n    },\r\n    tableHead: (a: any) => <TableHead>{a.children}</TableHead>,\r\n    tableRow: (a: any) => <TableRow>{a.children}</TableRow>,\r\n    tableBody: (a: any) => <TableBody>{a.children}</TableBody>,\r\n    tableCell: (a: any) => <TableCell>{a.children}</TableCell>,\r\n    link: (a: any) => {\r\n        return <MyLinkInWiki targetLink={a.href}>{a.children}</MyLinkInWiki>\r\n    },\r\n    heading: (a: any) => {\r\n        return <WikiHeading level={a.level} node={a.node}>{a.children}</WikiHeading>\r\n    }\r\n}\r\n\r\nexport function IPWikiPage() {\r\n    let { t, i18n } = useTranslation();\r\n\r\n    let location = useLocation();\r\n\r\n    const sidebarUrl = t('url_wiki_sidebar');\r\n    const { data: sideBarData, complete: complete } = useEndPoint(sidebarUrl);\r\n\r\n    const wikiContentUrl = getMdUrlFromWikiUrl(location.pathname, t('url_wiki_content_prefix'));\r\n\r\n    const [wikiTitle, setWikiTitle] = useState('Loading...');\r\n\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n    const leftBarComponent = <WikiToSideBarContext.Provider value={{\r\n        setTitle: setWikiTitle,\r\n        onTermClicked: () => setIsDrawerOpen(false)\r\n    }}>\r\n        <Typography variant='h5' style={{ margin: 10, marginBottom: 0, marginLeft: 15 }}>\r\n            Pages\r\n        </Typography>\r\n        <Divider style={{ margin: 10 }} />\r\n\r\n        <List component='nav' style={{ maxWidth: '80vw' }}>\r\n            {\r\n                complete ?\r\n                    <ReactMarkdown renderers={sidebarMarkdownRenderers}>\r\n                        {sideBarData || 'error loading ' + sidebarUrl}\r\n                    </ReactMarkdown>\r\n                    : <CircularProgress />\r\n            }\r\n        </List>\r\n    </WikiToSideBarContext.Provider>;\r\n\r\n    const leftBarOnMobile = <>\r\n        <Drawer anchor='left' open={isDrawerOpen} onClose={\r\n            () => setIsDrawerOpen(false)\r\n        } style={{}}>\r\n            {leftBarComponent}\r\n        </Drawer>\r\n\r\n        {/*render to make the effect trigger and set the wiki title.\r\n         It's a workaround and will be refactored*/}\r\n        {!isDrawerOpen && <div style={{ display: \"none\" }}>\r\n            {leftBarComponent}\r\n        </div>}\r\n    </>;\r\n\r\n    const leftBarOnPC = <div style={{\r\n        // position: 'sticky', top: 0,\r\n        minWidth: '20vw', maxWidth: '20vw'\r\n    }} className='My-Sticky'>{leftBarComponent}</div>;\r\n\r\n    const scrollDomRef = useRef(null);\r\n\r\n    var {\r\n        wikiContentComponent: wikiContentComponent,\r\n        rightBarComponent: rightBarComponent,\r\n        updateScrollFunc: updateScrollFunc\r\n    } = useWikiContent(\r\n        // @ts-ignore\r\n        wikiContentUrl, wikiMarkdownRenderers, [gfm], scrollDomRef\r\n    );\r\n\r\n    const realScrollCallback = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const debouncedFunc = _.throttle(166, updateScrollFunc);\r\n\r\n        // @ts-ignore\r\n        realScrollCallback.current = debouncedFunc;\r\n\r\n        return () => {\r\n            debouncedFunc.cancel();\r\n        }\r\n    }, [realScrollCallback]);\r\n\r\n    const isVerticalMobile = getIsVerticalMobile();\r\n    return <div className='My-Page' style={{\r\n        display: 'flex', flexDirection: 'column'\r\n    }}>\r\n        <MyBanner text={'Immersive Portals Wiki'} color='#9500ae'\r\n            pageIconPath={getPublicResourcePath('/immptl.png')}>\r\n            {isVerticalMobile &&\r\n                <IconButton onClick={() => setIsDrawerOpen(!isDrawerOpen)}>\r\n                    <MenuIcon style={{ color: 'white' }} />\r\n                </IconButton>}\r\n        </MyBanner>\r\n\r\n        <div style={{\r\n            display: 'flex', flexDirection: 'row', alignItems: \"flex-start\",\r\n            overflowY: 'auto',\r\n            minHeight: 0, flexBasis: 0, flexGrow: 1\r\n        }} onScroll={() => {\r\n            if (realScrollCallback.current) {\r\n                // @ts-ignore\r\n                realScrollCallback.current();\r\n            }\r\n        }} ref={scrollDomRef}>\r\n            {isVerticalMobile ? leftBarOnMobile : leftBarOnPC}\r\n\r\n            <div style={{\r\n                margin: 0, padding: 20, flexGrow: 1,\r\n                minWidth: 0, flexBasis: 0\r\n            }}>\r\n                <Typography variant='h4'>{wikiTitle}</Typography>\r\n                <Divider style={{ margin: 10 }} />\r\n                {wikiContentComponent}\r\n            </div>\r\n\r\n            {!isVerticalMobile && <div style={{\r\n                margin: 0, minWidth: '20vw', maxWidth: '20vw',\r\n                // position: 'sticky', top: 0,\r\n                // maxHeight: '100vh',\r\n                alignSelf: 'stretch', overflowY: 'auto',\r\n            }} className='My-Sticky'>\r\n                <Typography variant='h5' style={{ margin: 10, marginBottom: 0 }}>\r\n                    Contents\r\n                </Typography>\r\n                <Divider style={{ margin: 10 }} />\r\n                {rightBarComponent}\r\n            </div>}\r\n\r\n\r\n        </div>\r\n\r\n    </div>;\r\n}","import React from 'react';\r\nimport {Route, Switch, useLocation} from \"react-router-dom\";\r\nimport {TransitionGroup} from \"react-transition-group\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {IndexPage} from \"./pages/IndexPage\";\r\nimport {IPPage} from \"./pages/IPPage\";\r\nimport './App.css'\r\nimport {IPWikiPage} from \"./pages/wiki/WikiPage\";\r\nimport { Suspense } from 'react';\r\n\r\nexport function AnimatedPages() {\r\n    let location = useLocation();\r\n\r\n    return (\r\n        <div style={{}}>\r\n            <TransitionGroup>\r\n                <CSSTransition\r\n                    key={location.pathname}\r\n                    classNames=\"fade\"\r\n                    timeout={1000}\r\n                    // maybe longer can avoid the blinking issue\r\n                >\r\n                    <Switch location={location}>\r\n                        <Route path='/' exact>\r\n                            <Suspense fallback='loading'>\r\n                                <IndexPage/>\r\n                            </Suspense>\r\n                        </Route>\r\n                        <Route path='/immptl/' exact>\r\n                            <Suspense fallback='loading'>\r\n                                <IPPage/>\r\n                            </Suspense>\r\n\r\n                        </Route>\r\n                        <Route path='/immptl/wiki/'>\r\n                            <Suspense fallback='loading'>\r\n                                <IPWikiPage/>\r\n                            </Suspense>\r\n                        </Route>\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\nimport {AnimatedPages} from \"./AnimatedPages\";\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <AnimatedPages/>\n\n                {/*<Route exact path='/'>*/}\n                {/*    <Redirect to='/main'/>*/}\n                {/*</Route>*/}\n                {/*<Route path='*'>*/}\n                {/*   */}\n                {/*</Route>*/}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import App from './example';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}