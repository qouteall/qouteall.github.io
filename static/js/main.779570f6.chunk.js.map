{"version":3,"sources":["i18n.ts","pages/headerImage.png","pages/immptl.png","Util.tsx","pages/MyBanner.tsx","pages/IndexPage.tsx","pages/IPDownload.tsx","pages/IPPage.tsx","pages/wiki/WikiPage.tsx","MyAnimatedGroup.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","react","useSuspense","MyButton","props","Button","style","textTransform","variant","onClick","children","useEndPoint","url","useState","data","complete","pending","error","res","setRes","useEffect","Axios","then","catch","notEmpty","value","undefined","gfm","require","myMarkdownRenderers","image","a","src","className","alt","heading","level","Typography","fontSize","MyMarkdown","plugins","renderers","MyRemoteMarkdown","resultData","MyBanner","useLocation","history","useHistory","currLanguage","i18next","language","getCurrentLanguage","hyphenIndex","indexOf","substr","AppBar","position","backgroundColor","color","margin","padding","Toolbar","push","text","IndexPage","useTranslation","t","headerImage","Card","maxWidth","square","elevation","CardActionArea","display","flexDirection","justifyContent","background","immptlImage","width","marginLeft","findModVersion","RegExp","findMcVersion","getModVersionFromModJarName","modJarName","found","exec","getMcVersionFromModJarName","DownloadTerm","expandIcon","id","downloadUrl","isPreRelease","modVersion","AccordionDetails","alignItems","upgradeInfo","window","open","publishTime","downloadCount","IPDownload","toDisplay","map","releaseInfo","modJarAssets","assets","filter","asset","name","length","publishDate","published_at","mcVersion","browser_download_url","body","prerelease","download_count","groupedByMcVersion","_","groupBy","r","toPairsIn","pair","termList","firstRelease","findIndex","term","splice","IPFeatures","path","IPPage","downloadSectionRef","useRef","minHeight","marginBottom","flexGrow","marginRight","alignSelf","current","scrollIntoView","behavior","ref","getLocalWikiUrlFromGithubWikiUrl","githubWikiUrl","MySidebarLink","ListItem","button","localUrl","sidebarMarkdownRenderers","link","href","paragraph","MyLinkInWiki","targetLink","console","log","localWikiUrlFromGithubWikiUrl","WikiHeading","myRef","location","e","join","headingHash","toLowerCase","replaceAll","hash","IconButton","wikiMarkdownRenderers","table","Table","tableHead","TableHead","tableRow","TableRow","tableBody","TableBody","tableCell","TableCell","IPWikiPage","sideBarData","head","innerPath","b","i","getStringAfter","getMdUrlFromWikiUrl","pathname","wikiData","wikiResultComplete","height","maxHeight","flexShrink","flexBasis","List","component","minWidth","overflowY","MyAnimatedGroup","TransitionGroup","CSSTransition","classNames","timeout","exact","key","App","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.779570f6.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport {initReactI18next} from \"react-i18next\";\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\n// const detectorOptions = {\r\n//     // order and from where user language should be detected\r\n//     order: ['cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\r\n//\r\n//     // keys or params to lookup language from\r\n//     lookupQuerystring: 'lng',\r\n//     lookupCookie: 'i18next',\r\n//     lookupLocalStorage: 'i18nextLng',\r\n//     lookupSessionStorage: 'i18nextLng',\r\n//     lookupFromPathIndex: 0,\r\n//     lookupFromSubdomainIndex: 0,\r\n//\r\n//     // cache user language on\r\n//     caches: ['localStorage', 'cookie'],\r\n//     excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\r\n//\r\n//     // optional expire and domain for set cookie\r\n//     cookieMinutes: 10,\r\n//     cookieDomain: 'qouteall',\r\n//\r\n//     // optional htmlTag with lang attribute, the default is:\r\n//     htmlTag: document.documentElement,\r\n//\r\n//     // optional set cookie options, reference:[MDN Set-Cookie docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)\r\n//     cookieOptions: {path: '/', sameSite: 'strict'}\r\n// }\r\n\r\ni18n\r\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n    // learn more: https://github.com/i18next/i18next-http-backend\r\n    .use(Backend)\r\n\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector)\r\n\r\n    .use(initReactI18next)\r\n\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        // detection: detectorOptions,\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n\r\n        react: {\r\n            useSuspense: false\r\n        }\r\n    });\r\n\r\n// // catch the event and make changes accordingly\r\n// i18n.on('languageChanged', function(lng) {\r\n//\r\n// });\r\n\r\nexport default i18n;","export default __webpack_public_path__ + \"static/media/headerImage.686221d5.png\";","export default __webpack_public_path__ + \"static/media/immptl.76ab65fd.png\";","import {Button} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Axios from \"axios\";\r\nimport i18next from \"i18next\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport function MyButton(props: { children: any, style?: React.CSSProperties, onClick?: any }) {\r\n    return <Button style={{\r\n        textTransform: 'none', ...props.style\r\n    }} variant={\"contained\"} onClick={props.onClick}>{props.children}</Button>;\r\n}\r\n\r\n\r\nexport function useEndPoint(url: string) {\r\n    const [res, setRes] = useState({\r\n        data: null,\r\n        complete: false,\r\n        pending: false,\r\n        error: false\r\n    });\r\n    useEffect(\r\n        () => {\r\n            setRes({\r\n                data: null,\r\n                pending: true,\r\n                error: false,\r\n                complete: false\r\n            });\r\n            Axios({url: url})\r\n                .then(res =>\r\n                    setRes({\r\n                        data: res.data,\r\n                        pending: false,\r\n                        error: false,\r\n                        complete: true\r\n                    }),\r\n                )\r\n                .catch(() =>\r\n                    setRes({\r\n                        data: null,\r\n                        pending: false,\r\n                        error: true,\r\n                        complete: true\r\n                    }),\r\n                );\r\n        },\r\n        [url]\r\n    );\r\n    return res;\r\n}\r\n\r\nexport function getCurrentLanguage() {\r\n    var currLanguage = i18next.language;\r\n\r\n    if (currLanguage === undefined) {\r\n        currLanguage = 'en';\r\n    }\r\n    return currLanguage;\r\n}\r\n\r\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\r\n    return value !== null && value !== undefined;\r\n}\r\n\r\nexport function swapInArray<TValue>(array: TValue[], i1: number, i2: number) {\r\n    var temp = array[i1];\r\n    array[i1] = array[i2];\r\n    array[i2] = temp;\r\n}\r\n\r\nconst gfm = require('remark-gfm')\r\n\r\nexport const myMarkdownRenderers = {\r\n    image: (a: any) => {\r\n        return <img src={a.src} className='MD-Image' alt={a.alt}/>\r\n    },\r\n    heading: (a: any) => {\r\n        // console.log(a)\r\n        const level: any = a.level;\r\n\r\n        return <Typography style={{fontSize: 40 - level * 5}}>{a.children}</Typography>\r\n    }\r\n}\r\n\r\nexport function MyMarkdown(props: { children: any }) {\r\n    return <ReactMarkdown className='My-MD' plugins={[gfm]} renderers={myMarkdownRenderers}>\r\n        {props.children}\r\n    </ReactMarkdown>\r\n}\r\n\r\nexport function MyRemoteMarkdown(props: { url: string }) {\r\n    const {data: resultData, complete: resultComplete} = useEndPoint(props.url);\r\n\r\n    return resultComplete ? (<MyMarkdown children={resultData || 'loading'}/>)\r\n        : (<CircularProgress/>)\r\n}\r\n\r\nexport function getStringAfter(a: string, b: string) {\r\n    var i = a.indexOf(b);\r\n    if (i === -1) {\r\n        return a;\r\n    }\r\n    return a.substr(i + b.length);\r\n}","import {MenuItem, Select} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport i18next from \"i18next\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport {getCurrentLanguage} from \"../Util\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport function MyBanner(props: { text: string, color: string }) {\r\n    const location = useLocation();\r\n\r\n    let history = useHistory();\r\n    var currLanguage = getCurrentLanguage();\r\n\r\n    var hyphenIndex = currLanguage.indexOf('-');\r\n    if (hyphenIndex !== -1) {\r\n        currLanguage = currLanguage.substr(0, hyphenIndex);\r\n    }\r\n\r\n    // console.log(currLanguage)\r\n\r\n    return <AppBar style={{position: 'relative', backgroundColor: props.color, margin: 0, padding: 0}}>\r\n        <Toolbar>\r\n            <Button onClick={() => {\r\n                history.push('/main')\r\n            }} style={{textTransform: 'none'}}>\r\n                <Typography variant='h6' style={{color: 'white'}}>{props.text}</Typography>\r\n            </Button>\r\n\r\n            {/*<TranslateIcon style={{marginLeft: 'auto', marginRight: '1vw'}}/>*/}\r\n\r\n            {/*<Select id='language-select' style={{*/}\r\n            {/*    color: 'white'*/}\r\n            {/*}} value={currLanguage} onChange={(a) => {*/}\r\n            {/*    var languageStr = a.target.value;*/}\r\n            {/*    i18next.changeLanguage(languageStr as string)*/}\r\n            {/*}}>*/}\r\n            {/*    <MenuItem value={'zh'}>简体中文</MenuItem>*/}\r\n            {/*    <MenuItem value={'en'}>English</MenuItem>*/}\r\n            {/*</Select>*/}\r\n        </Toolbar>\r\n\r\n\r\n    </AppBar>;\r\n}","import React, {Component, useState} from \"react\";\r\nimport headerImage from './headerImage.png'\r\nimport immptlImage from './immptl.png'\r\nimport {createStyles, Grid, Theme} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {MyButton} from \"../Util\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport {TestAnimated} from \"./TestAnimation\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {MyBanner} from \"./MyBanner\";\r\n\r\nimport {useTranslation} from 'react-i18next';\r\nimport {TFunction} from \"i18next\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\n\r\nexport function IndexPage(props: {}) {\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    let {t, i18n} = useTranslation();\r\n\r\n    return <div className=\"My-Page\">\r\n        <MyBanner text='qouteall' color='#ff4569'/>\r\n        <div className=\"App-header\">\r\n            <div className=\"Mask\"/>\r\n            <div className=\"Right-section\">\r\n\r\n                <p className=\"Header-text\">\r\n                    qouteall\r\n                </p>\r\n                <p className=\"Sub-Header\">\r\n                    No description\r\n                </p>\r\n            </div>\r\n\r\n            <img src={headerImage} className=\"Header-image\" alt=\"what\"/>\r\n\r\n\r\n        </div>\r\n\r\n        <div style={{margin: '10vh'}}>\r\n            <Card style={{maxWidth: '80vh'}} square={false} elevation={10}>\r\n                <CardActionArea style={{\r\n                    display: 'flex', flexDirection: 'row', justifyContent: 'flex-start',\r\n                    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n                }} onClick={() => {\r\n                    history.push('/immptl')\r\n                }}>\r\n                    <img src={immptlImage} alt='i am alt' style={{width: 100}}/>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'flex-start',\r\n                        marginLeft: 20\r\n                    }}>\r\n                        <label style={{\r\n                            textTransform: 'none',\r\n                            color: 'black',\r\n                            fontSize: 'calc(8px + 2vmin)'\r\n                        }}>\r\n                            {t(\"immptl\")}\r\n                        </label>\r\n                        <label style={{\r\n                            textTransform: 'none',\r\n                            color: 'black',\r\n                            fontSize: 'calc(5px + 2vmin)',\r\n                        }}>\r\n                            {t(\"immptl_desc\")}\r\n                        </label>\r\n                    </div>\r\n                </CardActionArea>\r\n            </Card>\r\n        </div>\r\n    </div>;\r\n\r\n}\r\n","import Accordion from \"@material-ui/core/Accordion/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary/AccordionSummary\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\r\nimport React from \"react\";\r\nimport {MyButton, notEmpty, useEndPoint} from \"../Util\";\r\nimport {AccordionDetails, Typography} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport _, {Dictionary} from \"lodash\";\r\n\r\ninterface GAsset {\r\n    browser_download_url: string;\r\n    name: string;//filename\r\n    download_count: number;\r\n}\r\n\r\ninterface GReleaseInfo {\r\n    assets: GAsset[];\r\n    tag_name: string;\r\n    body: string;\r\n    prerelease: boolean;\r\n    published_at: string;\r\n}\r\n\r\nvar findModVersion = new RegExp('(?<=immersive\\-portals\\-).+?(?=\\-)');\r\nvar findMcVersion = new RegExp('(?<=mc).+?(?=\\-)');\r\n\r\nfunction getModVersionFromModJarName(modJarName: string) {\r\n    var found = findModVersion.exec(modJarName);\r\n    if (found == null) {\r\n        return null;\r\n    }\r\n    return found[0];\r\n}\r\n\r\nfunction getMcVersionFromModJarName(modJarName: string) {\r\n    var found = findMcVersion.exec(modJarName);\r\n    if (found == null) {\r\n        return null;\r\n    }\r\n    return found[0];\r\n}\r\n\r\ninterface ToDisplay {\r\n    mcVersion: string;\r\n    modVersion: string;\r\n    downloadUrl: string;\r\n    upgradeInfo: string;\r\n    isPreRelease: boolean;\r\n    publishTime: string;\r\n    downloadCount: number;\r\n}\r\n\r\nfunction DownloadTerm(props: { data: ToDisplay }) {\r\n    let {t, i18n} = useTranslation();\r\n\r\n    return <Accordion style={{backgroundColor: '#af52bf', color: 'white'}}>\r\n        <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon/>}\r\n            id={props.data.downloadUrl}\r\n        >\r\n            <Typography>{\r\n                (props.data.isPreRelease ? '[Pre-release] ' : '') + props.data.modVersion\r\n            }</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\r\n            <Typography>{props.data.upgradeInfo}</Typography>\r\n            <div style={{margin: 10}}/>\r\n            <MyButton onClick={() => {\r\n                window.open(props.data.downloadUrl, '_blank')\r\n            }}>{t('Download')}</MyButton>\r\n            <div style={{margin: 10}}/>\r\n            <Typography variant='caption'>\r\n                {'Published at ' + props.data.publishTime}\r\n            </Typography>\r\n            <Typography variant='caption'>\r\n                {'Download count (GitHub): ' + props.data.downloadCount}\r\n            </Typography>\r\n        </AccordionDetails>\r\n    </Accordion>;\r\n}\r\n\r\nexport function IPDownload(props: {}) {\r\n    let {t, i18n} = useTranslation();\r\n\r\n    const {data: resultData, complete: resultComplete} = useEndPoint(\r\n        \"https://api.github.com/repos/qouteall/immersiveportalsmod/releases\"\r\n    );\r\n\r\n    if (!resultComplete) {\r\n        return <CircularProgress/>\r\n    }\r\n\r\n    const releaseInfo = resultData as unknown as GReleaseInfo[];\r\n\r\n    // console.log(releaseInfo)\r\n\r\n    const toDisplay: ToDisplay[] = releaseInfo\r\n        .map((releaseInfo: GReleaseInfo) => {\r\n            var modJarAssets = releaseInfo.assets.filter(asset => asset.name.indexOf('fabric') >= 0);\r\n            if (modJarAssets.length === 0) {\r\n                return null;\r\n            }\r\n            var asset = modJarAssets[0];\r\n\r\n            const publishDate = releaseInfo.published_at.substr(\r\n                0, releaseInfo.published_at.indexOf('T')\r\n            );\r\n\r\n            return {\r\n                mcVersion: getMcVersionFromModJarName(asset.name),\r\n                modVersion: getModVersionFromModJarName(asset.name),\r\n                downloadUrl: asset.browser_download_url,\r\n                upgradeInfo: releaseInfo.body,\r\n                isPreRelease: releaseInfo.prerelease,\r\n                publishTime: publishDate,\r\n                downloadCount: asset.download_count\r\n            } as ToDisplay;\r\n        })\r\n        .filter(notEmpty);\r\n\r\n    const groupedByMcVersion: Dictionary<ToDisplay[]> = _.groupBy(\r\n        toDisplay,\r\n        (r: ToDisplay) => r.mcVersion\r\n    );\r\n\r\n\r\n    return <div>\r\n        {_.toPairsIn(groupedByMcVersion).map((pair) => {\r\n            const [mcVersion, termList] = pair;\r\n\r\n            const firstRelease = termList.findIndex((term) => !term.isPreRelease);\r\n            if (firstRelease !== -1) {\r\n                //remove the first release and insert into the first\r\n                termList.splice(0, 0, ...(termList.splice(firstRelease, 1)))\r\n            }\r\n\r\n            return <Accordion style={{backgroundColor: '#9500ae', color: 'white'}}>\r\n                <AccordionSummary>\r\n                    {mcVersion}\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails>\r\n                    <div style={{width: '100%'}}>\r\n                        {termList.map(r => <DownloadTerm data={r}/>)}\r\n                    </div>\r\n                </AccordionDetails>\r\n            </Accordion>;\r\n        })}\r\n        {/*{toDisplay.map(r => <DownloadTerm data={r}/>)}*/}\r\n    </div>\r\n}","import React, {useRef} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {MyBanner} from \"./MyBanner\";\r\n\r\nimport immptlImage from './immptl.png'\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {MyButton, MyRemoteMarkdown} from \"../Util\";\r\nimport {IPDownload} from \"./IPDownload\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nexport function IPFeatures(props: {}) {\r\n    let {t, i18n} = useTranslation();\r\n\r\n    const path = t('url_ip_features');\r\n\r\n    return <MyRemoteMarkdown url={path}/>\r\n\r\n}\r\n\r\nexport function IPPage(props: {}) {\r\n    let history = useHistory();\r\n\r\n    let {t, i18n} = useTranslation();\r\n\r\n    const path = t('url_ip');\r\n\r\n    // const {data: resultData, complete: resultComplete} = useEndPoint(path);\r\n\r\n    const downloadSectionRef = useRef(null)\r\n\r\n    const executeScroll = () => {\r\n        // @ts-ignore\r\n        downloadSectionRef.current.scrollIntoView({behavior: 'smooth'});\r\n    }\r\n\r\n    return (\r\n        <div className='My-Page'>\r\n            <MyBanner text='Immersive Portals' color='#9500ae'/>\r\n\r\n            <div style={{margin: 30}}>\r\n                <Card style={{\r\n                    display: 'flex', flexDirection: 'row',\r\n                    justifyContent: 'flex-start', alignItems: 'center',\r\n                    minHeight: '40vh',\r\n                    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n                    marginBottom: 30\r\n                }} square={false} elevation={10}>\r\n\r\n                    <img src={immptlImage} alt='i am alt' style={{\r\n                        flexGrow: 0,\r\n                        width: 150,\r\n                        marginLeft: 40,\r\n                        marginRight: 0\r\n                    }}/>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'space-between',\r\n                        alignSelf: 'stretch',\r\n                        margin: 40,\r\n                        marginBottom: 20\r\n                    }}>\r\n\r\n                        <MyRemoteMarkdown url={path}/>\r\n\r\n                        {/*<MyMarkdown>*/}\r\n                        {/*    {'||| \\n|-|-|\\n |![](https://i.ibb.co/3R837kj/2020-07-13-21-38-25.png) f|![](https://i.ibb.co/3R837kj/2020-07-13-21-38-25.png) f|\\n|![](https://i.ibb.co/3R837kj/2020-07-13-21-38-25.png) o|![](https://i.ibb.co/3R837kj/2020-07-13-21-38-25.png) o|'}*/}\r\n                        {/*</MyMarkdown>*/}\r\n\r\n                        <div style={{flexDirection: 'row', justifyContent: 'flex-start'}}>\r\n                            <MyButton style={{backgroundColor: '#35baf6', margin: 10}}\r\n                                      onClick={executeScroll}\r\n                            >\r\n                                {t('ip_download')}\r\n                            </MyButton>\r\n\r\n                            <MyButton style={{backgroundColor: '#35baf6', margin: 10}} onClick={() => {\r\n                                history.push('/immptl/wiki')\r\n                            }}>\r\n                                {t('ip_wiki')}\r\n                            </MyButton>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </Card>\r\n\r\n\r\n                <Card style={{\r\n                    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n                    padding: 20,\r\n                    marginBottom: 30\r\n                }} elevation={10}>\r\n                    <Typography variant='h6'>{t('Features')}</Typography>\r\n                    <IPFeatures/>\r\n                </Card>\r\n\r\n                <Card style={{\r\n                    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n                    padding: 20,\r\n                    marginBottom: 30\r\n                }} elevation={10} ref={downloadSectionRef}>\r\n                    <Typography variant='h5'>{t('Downloads (Fabric version)')}</Typography>\r\n                    <Typography variant='body1'>{t(\r\n                        'Only the latest minecraft version of this mod is being maintained.'\r\n                    )}</Typography>\r\n                    <IPDownload/>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useRef} from \"react\";\r\nimport {MyBanner} from \"../MyBanner\";\r\nimport {CircularProgress, List, ListItem} from \"@material-ui/core\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport {getStringAfter, MyButton, myMarkdownRenderers, useEndPoint} from \"../../Util\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst gfm = require('remark-gfm')\r\n\r\n\r\nfunction processLink(url: string): string {\r\n    return url.substr(url.indexOf('/wiki'))\r\n}\r\n\r\nfunction getLocalWikiUrlFromGithubWikiUrl(githubWikiUrl: string) {\r\n    const processed = processLink(githubWikiUrl);\r\n    return '/immptl' + processed;\r\n}\r\n\r\nfunction MySidebarLink(props: { url: string, children: any }) {\r\n    const history = useHistory();\r\n    // console.log(props.url)\r\n    return <div>\r\n        <ListItem button onClick={() => {\r\n            var githubWikiUrl = props.url;\r\n            var localUrl = getLocalWikiUrlFromGithubWikiUrl(githubWikiUrl);\r\n            history.push(localUrl);\r\n        }}>{props.children}</ListItem>\r\n    </div>;\r\n}\r\n\r\nconst sidebarMarkdownRenderers = {\r\n    link: (a: any) => {\r\n        return <MySidebarLink url={a.href}>{a.children}</MySidebarLink>;\r\n    },\r\n    paragraph: (a: any) => a.children\r\n}\r\n\r\n//both github wiki url and this website url\r\nfunction getMdUrlFromWikiUrl(url: string) {\r\n    const head = 'https://raw.githubusercontent.com/wiki/qouteall/ImmersivePortalsMod'\r\n\r\n    var innerPath = getStringAfter(url, '/wiki');\r\n\r\n    if (innerPath.length === 0) {\r\n        return head + '/Home.md';\r\n    }\r\n\r\n    return head + innerPath + '.md';\r\n}\r\n\r\nfunction MyLinkInWiki(props: { targetLink: string, children: any }) {\r\n    let history = useHistory();\r\n\r\n\r\n    if (props.targetLink.indexOf('github.com/qouteall/ImmersivePortalsMod/wiki') !== -1) {\r\n        //inner link\r\n\r\n        return <MyButton onClick={() => {\r\n            console.log(props.targetLink)\r\n            var localWikiUrlFromGithubWikiUrl = getLocalWikiUrlFromGithubWikiUrl(props.targetLink);\r\n            console.log(localWikiUrlFromGithubWikiUrl)\r\n            history.push(localWikiUrlFromGithubWikiUrl)\r\n        }}>\r\n            {props.children}\r\n        </MyButton>\r\n    } else {\r\n        return <a href={props.targetLink}>{props.children}</a>\r\n    }\r\n}\r\n\r\nfunction headingTextToHash(heading: string) {\r\n    return '#' + heading.toLowerCase()\r\n        .replaceAll(' ', '-')\r\n        .replaceAll(':', '');\r\n}\r\n\r\nfunction WikiHeading(props: { level: number, children: any }) {\r\n    const myRef: React.MutableRefObject<any> = useRef()\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n\r\n    // const text = props.children[0].props.value;\r\n    // @ts-ignore\r\n    const text = props.children.map(e => e.props.value).join('');\r\n\r\n    const headingHash = headingTextToHash(text);\r\n\r\n    useEffect(() => {\r\n        if (location.hash) {\r\n            console.log(headingHash)\r\n            if (location.hash === headingHash) {\r\n                myRef.current.scrollIntoView({behavior: 'smooth'});\r\n            }\r\n        }\r\n    })\r\n\r\n    return <div>\r\n        <Typography ref={myRef} style={{fontSize: 40 - props.level * 5}}>\r\n            {props.children}\r\n            <IconButton onClick={() => {\r\n                history.push(headingHash)\r\n            }}>\r\n                <LinkIcon/>\r\n            </IconButton>\r\n        </Typography>\r\n    </div>;\r\n}\r\n\r\nconst wikiMarkdownRenderers = {\r\n    ...myMarkdownRenderers,\r\n    table: (a: any) => {\r\n        return <Table>{a.children}</Table>\r\n    },\r\n    tableHead: (a: any) => <TableHead>{a.children}</TableHead>,\r\n    tableRow: (a: any) => <TableRow>{a.children}</TableRow>,\r\n    tableBody: (a: any) => <TableBody>{a.children}</TableBody>,\r\n    tableCell: (a: any) => <TableCell>{a.children}</TableCell>,\r\n    link: (a: any) => {\r\n        return <MyLinkInWiki targetLink={a.href}>{a.children}</MyLinkInWiki>\r\n    },\r\n    heading: (a: any) => {\r\n        const level: any = a.level;\r\n\r\n        return <WikiHeading level={level}>{a.children}</WikiHeading>\r\n    }\r\n}\r\n\r\n\r\nexport function IPWikiPage() {\r\n    let {t, i18n} = useTranslation();\r\n\r\n    let location = useLocation();\r\n\r\n    const {data: sideBarData, complete: complete} = useEndPoint(\r\n        t('url_wiki_sidebar')\r\n    );\r\n\r\n    var wikiContentUrl = getMdUrlFromWikiUrl(location.pathname);\r\n\r\n    const {data: wikiData, complete: wikiResultComplete} = useEndPoint(wikiContentUrl);\r\n\r\n    return <div className='My-Page' style={{display: 'flex', flexDirection: 'column'}}>\r\n        <div style={{height: '100vh', maxHeight: '100vh', display: 'flex', flexDirection: 'column'}}>\r\n\r\n            <MyBanner text={'Immersive Portals Wiki'} color='#9500ae'/>\r\n            <div style={{\r\n                display: 'flex', flexDirection: 'row', flexGrow: 1,\r\n                flexShrink: 1,\r\n\r\n                flexBasis: 0, minHeight: 0 //fuck flex\r\n                //https://stackoverflow.com/questions/31867316/how-can-i-force-a-nested-flexbox-element-to-shrink-and-display-a-scrollbar-when\r\n            }}>\r\n                <List component='nav'\r\n                      style={{\r\n                          minWidth: '20vw',\r\n                          maxWidth: '20vw',\r\n                          overflowY: 'auto'\r\n                      }}>\r\n                    {\r\n                        complete ?\r\n                            <ReactMarkdown renderers={sidebarMarkdownRenderers}>\r\n                                {sideBarData || 'error'}\r\n                            </ReactMarkdown>\r\n                            : <CircularProgress/>\r\n                    }\r\n                </List>\r\n\r\n                <div style={{\r\n                    margin: 0, overflowY: 'auto',\r\n                    flexGrow: 1, padding: 20\r\n                }}>\r\n                    {wikiResultComplete ?\r\n                        <ReactMarkdown renderers={wikiMarkdownRenderers} plugins={[gfm]}>\r\n                            {wikiData || 'error'}\r\n                        </ReactMarkdown>\r\n                        : <CircularProgress/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>;\r\n}","import React from 'react';\r\nimport {Route, Switch, useLocation} from \"react-router-dom\";\r\nimport {TransitionGroup} from \"react-transition-group\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {IndexPage} from \"./pages/IndexPage\";\r\nimport {IPPage} from \"./pages/IPPage\";\r\nimport './App.css'\r\nimport {IPWikiPage} from \"./pages/wiki/WikiPage\";\r\n\r\nexport function MyAnimatedGroup() {\r\n    let location = useLocation();\r\n\r\n    return (\r\n        <div style={{}}>\r\n            <TransitionGroup>\r\n                <CSSTransition\r\n                    key={location.key}\r\n                    classNames=\"fade\"\r\n                    timeout={1000}\r\n                    // maybe longer can avoid the blinking issue\r\n                >\r\n                    <Switch location={location}>\r\n                        <Route path='/main/' exact children={<IndexPage/>}/>\r\n                        <Route path='/immptl/' exact children={<IPPage/>}/>\r\n                        <Route path='/immptl/wiki/' children={<IPWikiPage/>}/>\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\nimport {MyAnimatedGroup} from \"./MyAnimatedGroup\";\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path='/'>\n                    <Redirect to='/main'/>\n                </Route>\n                <Route path='*'>\n                    <MyAnimatedGroup/>\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import App from './example';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}