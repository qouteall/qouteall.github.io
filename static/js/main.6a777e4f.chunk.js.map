{"version":3,"sources":["i18n.ts","my_util/Util.tsx","pages/MyBanner.tsx","pages/IndexPage.tsx","pages/IPDownload.tsx","pages/IPPage.tsx","pages/TestAnimation.tsx","pages/wiki/WikiHeading.tsx","pages/wiki/WikiContent.tsx","pages/wiki/WikiSidebar.tsx","pages/wiki/WikiPage.tsx","AnimatedPages.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","react","MyButton","props","Button","style","textTransform","variant","onClick","href","children","useEndPoint","url","useState","data","complete","pending","error","res","setRes","useEffect","unmounted","Axios","then","catch","notEmpty","value","undefined","gfm","require","MyImage","useTranslation","t","loaded","setLoaded","position","src","onLoad","maxWidth","minHeight","alt","onError","baseMarkdownRenderers","image","a","paragraph","marginTop","marginBottom","heading","level","Typography","fontSize","MyMarkdown","className","plugins","renderers","MyRemoteMarkdown","resultData","getIsVerticalMobile","window","innerHeight","innerWidth","getPublicResourcePath","path","process","getStringBetween","str","before","after","i","indexOf","j","length","substr","getCurrentLanguageDistrict","currLanguage","i18next","language","getCurrentLanguage","hyphenIndex","supportedLanguages","languageName","LanguageSelector","currLanguageDistrict","React","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","event","currentTarget","color","marginLeft","find","entry","Menu","id","keepMounted","open","Boolean","onClose","map","MenuItem","changeLanguage","MyBanner","location","useLocation","history","useHistory","document","title","text","getElementById","pageIconPath","AppBar","sticky","backgroundColor","margin","padding","top","Toolbar","currPath","pathname","lastIndexOf","push","flexGrow","IndexPage","cardStyle","Card","square","elevation","CardActionArea","display","flexDirection","justifyContent","background","width","getModVersionFromModJarName","modJarName","DownloadTerm","expandIcon","downloadUrl","isPreRelease","modVersion","AccordionDetails","alignItems","upgradeInfo","publishTime","downloadCount","IPDownload","releaseInfo","toDisplay","modJarAssets","assets","filter","asset","name","publishDate","published_at","mcVersion","browser_download_url","body","prerelease","download_count","groupedByMcVersion","_","groupBy","r","toPairsIn","pair","termList","firstRelease","findIndex","term","splice","IPFeatures","IPPage","downloadSectionRef","useRef","spacing","flexWrap","marginRight","alignSelf","flexBasis","minWidth","current","scrollIntoView","behavior","to","textDecoration","ref","clippingCollapseStyle","entering","clipPath","entered","exiting","exited","MyClippingCollapse","defaultStyle","transition","duration","Transition","in","shown","timeout","state","HeadingContext","createContext","isMatureRef","getHeadingColor","headingSelectedColor","WikiHeading","myRef","headingHash","node","myHeadingHash","useContext","selectedByUrl","hash","scrollFunc","y","getBoundingClientRect","outerHeight","timer","setTimeout","clearTimeout","getHeadingFontSize","e","left","right","bottom","zIndex","flexShrink","Object","keys","defaultRenderers","isHeading","type","isHeadingWithContent","obj","myType","toRemoveFromHash","headingTextToHash","toLowerCase","replace","produceHeadingHash","headingNode","joined","n","join","assignedHash","HeadingHierarchyParser","c","currIndex","headingDiscriminatorNumbers","this","Map","headingIndex","findIndexFrom","result","slice","minDepth","base","parseNonHeadingContents","isEnded","currHeading","currDepth","depth","remaining","parseHierarchy","originalHeadingHash","number","get","discriminatedHeadingHash","set","headingElement","contents","extractHeadingContentGroup","getRendererProps","tree","xtend","definitions","getDefinitions","myParseMarkdownAsync","source","processor","unified","parse","run","wrapTableRows","addListMetadata","naiveHtml","RightBarSection","opened","setOpened","selected","setSelected","item","hasContent","w","domRef","viewed","outerSelectedHash","setOuterSelected","onViewed","s","removeAssignedHash","headingColor","Fragment","ListItem","button","paddingLeft","layer","onTitleClick","ExpandLess","Collapse","List","dense","index","cond","getHeadingRefs","hierarchy","forEach","element","console","FlatWikiSection","Provider","astToReact","root","renderOptions","MemoedFlatWikiSection","memo","MemoedRightBarSection","useWikiContent","contentUrl","scrollDomRef","fallbackUrl","rightBarScrollRef","reactMarkdownProps","setTree","errorLoading","setErrorLoading","isAwaitingTranslation","setIsAwaitingTranslation","rightBarEnabled","setRightBarEnabled","hierarchyRef","renderPropsRef","markdownResult","renderer","parsedMarkdown","doParseWikiContent","rendererProps","viewingSectionHash","setViewingSectionHash","wikiContents","enableSectionUpdate","timerRef","headingRefs","updateScrollMemoed","useCallback","active","scrollTop","scrollHeight","screenHeight","documentElement","clientHeight","scrollPosition","offsetTop","titles","v","termDom","termY","offset","scrollTo","wikiContentComponent","rightBarComponent","updateScrollFunc","WikiToSideBarContext","onTermClicked","getLocalWikiUrlFromGithubWikiUrl","githubWikiUrl","MySidebarLink","localUrl","context","MyLinkInWiki","targetLink","localWikiUrlFromGithubWikiUrl","getMdUrlFromWikiUrl","head","innerPath","b","getStringAfter","wikiMarkdownRenderers","table","Table","tableHead","TableHead","tableRow","TableRow","tableBody","TableBody","tableCell","TableCell","link","parseWikiPageEntries","newEntry","IPWikiPage","wikiContentUrl","fallbackWikiContentUrl","wikiTitle","setWikiTitle","wikiPageEntries","setWikiPageEntries","isDrawerOpen","setIsDrawerOpen","isPageNotFound","setIsPageNotFound","sideBarData","sidebarComplete","newPageEntries","doParseLeftbar","leftBarComponent","Divider","component","leftBarOnMobile","Drawer","anchor","leftBarOnPC","scrollTimerRef","isVerticalMobile","IconButton","overflowY","onScroll","TestPage","AnimatedPages","refMouseX","refMouseY","listener","clientX","clientY","addEventListener","removeEventListener","setProperty","fallback","TransitionGroup","CSSTransition","classNames","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6a777e4f.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport {initReactI18next} from \"react-i18next\";\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\n\r\ni18n\r\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n    // learn more: https://github.com/i18next/i18next-http-backend\r\n    .use(Backend)\r\n\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector)\r\n\r\n    .use(initReactI18next)\r\n\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        // detection: detectorOptions,\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n\r\n        react: {\r\n            // useSuspense: false\r\n        }\r\n    });\r\n\r\n// // catch the event and make changes accordingly\r\n// i18n.on('languageChanged', function(lng) {\r\n//\r\n// });\r\n\r\nexport default i18n;","import {Button, Collapse} from \"@material-ui/core\";\r\nimport React, {DOMElement, useEffect, useRef, useState} from \"react\";\r\nimport Axios from \"axios\";\r\nimport i18next from \"i18next\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport throttle from 'lodash/throttle';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport axiosRetry from \"axios-retry\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nexport function MyButton(props: { children: any, style?: React.CSSProperties, onClick?: any, href?: any }) {\r\n    return <Button style={{\r\n        textTransform: 'none', ...props.style\r\n    }} variant={\"contained\"} onClick={props.onClick} href={props.href}>{props.children}</Button>;\r\n}\r\n\r\nexport function useEndPoint(url: string) {\r\n    const [res, setRes] = useState({\r\n        data: null,\r\n        complete: false,\r\n        pending: false,\r\n        error: false\r\n    });\r\n    useEffect(\r\n        () => {\r\n            let unmounted = false;\r\n            \r\n            setRes({\r\n                data: null,\r\n                pending: true,\r\n                error: false,\r\n                complete: false\r\n            });\r\n            Axios({url: url})\r\n                .then(res => {\r\n                    if (unmounted) return;\r\n                    setRes({\r\n                        data: res.data,\r\n                        pending: false,\r\n                        error: false,\r\n                        complete: true\r\n                    });\r\n                },)\r\n                .catch(() => {\r\n                    if (unmounted) return;\r\n                    setRes({\r\n                        data: null,\r\n                        pending: false,\r\n                        error: true,\r\n                        complete: true\r\n                    });\r\n                });\r\n            \r\n            return () => {\r\n                unmounted = true;\r\n            }\r\n        },\r\n        [url]\r\n    );\r\n    return res;\r\n}\r\n\r\nexport function getCurrentLanguage() {\r\n    var currLanguage = i18next.language;\r\n    \r\n    if (currLanguage === undefined) {\r\n        currLanguage = 'en';\r\n    }\r\n    return currLanguage;\r\n}\r\n\r\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\r\n    return value !== null && value !== undefined;\r\n}\r\n\r\nexport function swapInArray<TValue>(array: TValue[], i1: number, i2: number) {\r\n    var temp = array[i1];\r\n    array[i1] = array[i2];\r\n    array[i2] = temp;\r\n}\r\n\r\nconst gfm = require('remark-gfm')\r\n\r\nexport function MyImage(props: { url: string }) {\r\n    // return <img src={props.url} style={{\r\n    //     maxWidth: '100%'\r\n    // }} alt={'Fails to load ' + props.url}/>\r\n    \r\n    const {t, i18n} = useTranslation();\r\n    \r\n    const [loaded, setLoaded] = useState(false);\r\n    \r\n    return <div style={{position: \"relative\"}}>\r\n        {!loaded && <div style={{position: \"absolute\"}}>\r\n            <CircularProgress/>\r\n            <p>{t('image_loading')}</p>\r\n        </div>}\r\n        \r\n        <img src={props.url} onLoad={() => setLoaded(true)} style={{\r\n            maxWidth: '100%', minHeight: 100\r\n        }} alt={'Fails to load ' + props.url} onError={() => setLoaded(true)}/>\r\n        \r\n        \r\n        {/*<Collapse in={!loaded}>*/}\r\n        {/*    <CircularProgress/>*/}\r\n        {/*</Collapse>*/}\r\n        {/*<Collapse in={loaded}>*/}\r\n        {/*    <img src={props.url} onLoad={() => setLoaded(true)} style={{*/}\r\n        {/*        maxWidth: '100%'*/}\r\n        {/*    }} alt={'Fails to load ' + props.url} onError={() => setLoaded(true)}/>*/}\r\n        {/*</Collapse>*/}\r\n    </div>;\r\n}\r\n\r\nexport const baseMarkdownRenderers = {\r\n    image: (a: any) => {\r\n        return <MyImage url={a.src}/>\r\n    },\r\n    paragraph: (a: any) => {\r\n        return <div style={{marginTop: 10, marginBottom: 10}}>{a.children}</div>\r\n    },\r\n    heading: (a: any) => {\r\n        // console.log(a)\r\n        const level: any = a.level;\r\n        \r\n        return <Typography style={{fontSize: 40 - level * 5}}>{a.children}</Typography>\r\n    }\r\n}\r\n\r\nexport function MyMarkdown(props: { children: any }) {\r\n    return <ReactMarkdown className='My-MD' plugins={[gfm]} renderers={baseMarkdownRenderers}>\r\n        {props.children}\r\n    </ReactMarkdown>\r\n}\r\n\r\nexport function MyRemoteMarkdown(props: { url: string }) {\r\n    const {data: resultData, complete: resultComplete} = useEndPoint(props.url);\r\n    \r\n    return resultComplete ? (<MyMarkdown children={resultData || 'error loading ' + props.url}/>)\r\n        : (<CircularProgress/>)\r\n}\r\n\r\nexport function getStringAfter(a: string, b: string) {\r\n    var i = a.lastIndexOf(b);\r\n    if (i === -1) {\r\n        return a;\r\n    }\r\n    return a.substr(i + b.length);\r\n}\r\n\r\nexport function getIsVerticalMobile() {\r\n    // return true\r\n    return window.innerHeight > window.innerWidth;\r\n}\r\n\r\nexport function BannerHideOnScroll(props: {\r\n    window?: () => Window;\r\n    children: React.ReactElement;\r\n}) {\r\n    const {children, window} = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({target: window ? window() : undefined});\r\n    \r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n\r\nexport function getPublicResourcePath(path: string) {\r\n    return process.env.PUBLIC_URL + path;\r\n}\r\n\r\nexport function getStringBetween(str: string, before: string, after: string) {\r\n    let i = str.indexOf(before);\r\n    \r\n    if (i === -1) {\r\n        return ''\r\n    }\r\n    \r\n    let j = str.indexOf(after, i + before.length);\r\n    \r\n    if (j === -1) {\r\n        return '';\r\n    }\r\n    \r\n    return str.substr(i + before.length, j - i - before.length);\r\n}\r\n\r\n// export function isMostlyInViewport(element: HTMLElement) {\r\n//     const rect = element.getBoundingClientRect();\r\n//     return (\r\n//         rect.top >= 100 &&\r\n//         rect.left >= 100 &&\r\n//         rect.bottom <= ((window.innerHeight || document.documentElement.clientHeight) - 100) &&\r\n//         rect.right <= ((window.innerWidth || document.documentElement.clientWidth) - 100)\r\n//     );\r\n// }","import {Menu, MenuItem, Select} from \"@material-ui/core\";\r\nimport React, {useEffect} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport i18next from \"i18next\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport {getCurrentLanguage, getIsVerticalMobile, getStringAfter} from \"../my_util/Util\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction getCurrentLanguageDistrict() {\r\n    let currLanguage = getCurrentLanguage();\r\n    \r\n    const hyphenIndex = currLanguage.indexOf('-');\r\n    if (hyphenIndex !== -1) {\r\n        currLanguage = currLanguage.substr(0, hyphenIndex);\r\n    }\r\n    return currLanguage;\r\n}\r\n\r\ninterface LanguageEntry {\r\n    language: string,\r\n    languageName: string\r\n}\r\n\r\nconst supportedLanguages: Array<LanguageEntry> = [\r\n    {language: 'en', languageName: 'English'},\r\n    {language: 'zh', languageName: '简体中文'},\r\n]\r\n\r\nfunction LanguageSelector(props: {}) {\r\n    const currLanguageDistrict = getCurrentLanguageDistrict();\r\n    \r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null as null | HTMLElement);\r\n    \r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    \r\n    return <>\r\n        <Button aria-controls=\"language-menu\" aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                style={{color: 'white'}}>\r\n            <TranslateIcon/>\r\n            {getIsVerticalMobile() ? undefined :\r\n                <Typography style={{marginLeft: 5, textTransform: 'none'}}>{\r\n                    supportedLanguages.find(entry => entry.language === currLanguageDistrict)?.languageName\r\n                }</Typography>}\r\n        </Button>\r\n        <Menu\r\n            id=\"language-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n        >\r\n            {supportedLanguages.map(entry =>\r\n                <MenuItem value={entry.language} key={entry.language} onClick={() => {\r\n                    i18next.changeLanguage(entry.language);\r\n                    handleClose();\r\n                }}>{entry.languageName}</MenuItem>)}\r\n        </Menu>\r\n        \r\n        \r\n        {/*<Select id='language-select' style={{*/}\r\n        {/*    color: 'white'*/}\r\n        {/*}} value={currLanguageDistrict} onChange={(a) => {*/}\r\n        {/*    var languageStr = a.target.value;*/}\r\n        {/*    i18next.changeLanguage(languageStr as string)*/}\r\n        {/*}}>*/}\r\n        {/*    <MenuItem value={'zh'}>简体中文</MenuItem>*/}\r\n        {/*    <MenuItem value={'en'}>English</MenuItem>*/}\r\n        {/*</Select>*/}\r\n    </>\r\n}\r\n\r\nexport function MyBanner(props: {\r\n    text: string, color: string, children?: any,\r\n    sticky?: boolean, pageIconPath: string\r\n}) {\r\n    const location = useLocation();\r\n    \r\n    let history = useHistory();\r\n    \r\n    \r\n    // console.log(currLanguage)\r\n    \r\n    useEffect(() => {\r\n        document.title = props.text;\r\n        // @ts-ignore\r\n        document.getElementById('page_icon').href = props.pageIconPath;\r\n    }, []);\r\n    \r\n    return <AppBar style={{\r\n        position: props.sticky ? 'sticky' : 'relative', backgroundColor: props.color,\r\n        margin: 0, padding: 0,\r\n        top: props.sticky ? 0 : undefined\r\n    }}>\r\n        <Toolbar>\r\n            {props.children}\r\n            <Button onClick={() => {\r\n                const currPath = location.pathname;\r\n                const i = currPath.lastIndexOf('/');\r\n                if (i !== -1) {\r\n                    history.push(currPath.substr(0, i));\r\n                }\r\n            }} style={{textTransform: 'none'}}>\r\n                <Typography variant='h6' style={{color: 'white'}}>{props.text}</Typography>\r\n            </Button>\r\n            \r\n            <div style={{\r\n                flexGrow: 1\r\n            }}/>\r\n            \r\n            <LanguageSelector/>\r\n        </Toolbar>\r\n    \r\n    \r\n    </AppBar>;\r\n}","import React, {Component, CSSProperties, useState} from \"react\";\r\nimport {createStyles, Grid, Theme} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {getIsVerticalMobile, getPublicResourcePath, MyButton} from \"../my_util/Util\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport {MyClippingCollapse} from \"./TestAnimation\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {MyBanner} from \"./MyBanner\";\r\n\r\nimport {useTranslation} from 'react-i18next';\r\nimport {TFunction} from \"i18next\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\n\r\nexport function IndexPage(props: {}) {\r\n    \r\n    let history = useHistory();\r\n    \r\n    \r\n    let {t, i18n} = useTranslation();\r\n    \r\n    const cardStyle: CSSProperties = getIsVerticalMobile() ? {margin: 20} : {\r\n        margin: 20, marginLeft: 100, marginTop: 50\r\n    };\r\n    \r\n    return <div className=\"My-Page\">\r\n        <MyBanner text='qouteall' color='#ff4569' pageIconPath='/benzene.jpg'/>\r\n        <div className=\"App-header\">\r\n            <div className=\"Mask\"/>\r\n            <div className=\"Right-section\">\r\n                \r\n                <p className=\"Header-text\">\r\n                    qouteall\r\n                </p>\r\n                <p className=\"Sub-Header\">\r\n                    {t('main_desc')}\r\n                </p>\r\n            </div>\r\n            \r\n            <img src={getPublicResourcePath('/headerImage.png')} className=\"Header-image\" alt=\"what\"/>\r\n        \r\n        \r\n        </div>\r\n        \r\n        <div style={cardStyle}>\r\n            <Card style={{maxWidth: '80vh'}} square={false} elevation={10}>\r\n                <CardActionArea style={{\r\n                    display: 'flex', flexDirection: 'row', justifyContent: 'flex-start',\r\n                    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n                }} onClick={() => {\r\n                    history.push('/immptl')\r\n                }}>\r\n                    <img src={getPublicResourcePath('/immptl.png')} alt='i am alt' style={{width: 100}}/>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'flex-start',\r\n                        marginLeft: 20\r\n                    }}>\r\n                        <label style={{\r\n                            textTransform: 'none',\r\n                            color: 'black',\r\n                            fontSize: 'calc(8px + 2vmin)'\r\n                        }}>\r\n                            {t(\"immptl\")}\r\n                        </label>\r\n                        <label style={{\r\n                            textTransform: 'none',\r\n                            color: 'black',\r\n                            fontSize: 'calc(5px + 2vmin)',\r\n                        }}>\r\n                            {t(\"immptl_desc\")}\r\n                        </label>\r\n                    </div>\r\n                </CardActionArea>\r\n            </Card>\r\n        </div>\r\n    </div>;\r\n    \r\n}\r\n","import Accordion from \"@material-ui/core/Accordion/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary/AccordionSummary\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\r\nimport React from \"react\";\r\nimport { getStringBetween, MyButton, notEmpty, useEndPoint } from \"../my_util/Util\";\r\nimport { AccordionDetails, Typography } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport _, { Dictionary } from \"lodash\";\r\n\r\ninterface GAsset {\r\n    browser_download_url: string;\r\n    name: string;//filename\r\n    download_count: number;\r\n}\r\n\r\ninterface GReleaseInfo {\r\n    assets: GAsset[];\r\n    tag_name: string;\r\n    body: string;\r\n    prerelease: boolean;\r\n    published_at: string;\r\n}\r\n\r\n// deprecated because firefox doesn't support it\r\n// var findModVersion = new RegExp('(?<=immersive\\-portals\\-).+?(?=\\-)');\r\n// var findMcVersion = new RegExp('(?<=mc).+?(?=\\-)');\r\n\r\n\r\n\r\nfunction getModVersionFromModJarName(modJarName: string) {\r\n    const front = 'immersive-portals-';\r\n    const after = '-';\r\n    \r\n    return getStringBetween(modJarName,front,after);\r\n\r\n    // var found = findModVersion.exec(modJarName);\r\n    // if (found == null) {\r\n    //     return null;\r\n    // }\r\n    // return found[0];\r\n}\r\n\r\nfunction getMcVersionFromModJarName(modJarName: string) {\r\n    return getStringBetween(modJarName,'mc','-fabric');\r\n    \r\n    // var found = findMcVersion.exec(modJarName);\r\n    // if (found == null) {\r\n    //     return null;\r\n    // }\r\n    // return found[0];\r\n}\r\n\r\ninterface ToDisplay {\r\n    mcVersion: string;\r\n    modVersion: string;\r\n    downloadUrl: string;\r\n    upgradeInfo: string;\r\n    isPreRelease: boolean;\r\n    publishTime: string;\r\n    downloadCount: number;\r\n}\r\n\r\nfunction DownloadTerm(props: { data: ToDisplay }) {\r\n    let { t, i18n } = useTranslation();\r\n\r\n    return <Accordion key={props.data.downloadUrl} style={{ backgroundColor: '#80cbc4', color: 'black' }}>\r\n        <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={props.data.downloadUrl}\r\n        >\r\n            <Typography>{\r\n                (props.data.isPreRelease ? '[Pre-release] ' : '') + props.data.modVersion\r\n            }</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n            <Typography>{props.data.upgradeInfo}</Typography>\r\n            <div style={{ margin: 10 }} />\r\n            <MyButton onClick={() => {\r\n                window.open(props.data.downloadUrl, '_blank')\r\n            }}>{t('Download')}</MyButton>\r\n            <div style={{ margin: 10 }} />\r\n            <Typography variant='caption'>\r\n                {'Published at ' + props.data.publishTime}\r\n            </Typography>\r\n            <Typography variant='caption'>\r\n                {'Download count (GitHub): ' + props.data.downloadCount}\r\n            </Typography>\r\n        </AccordionDetails>\r\n    </Accordion>;\r\n}\r\n\r\nexport function IPDownload(props: {}) {\r\n    let { t, i18n } = useTranslation();\r\n\r\n    const { data: resultData, complete: resultComplete } = useEndPoint(\r\n        \"https://api.github.com/repos/qouteall/immersiveportalsmod/releases\"\r\n    );\r\n\r\n    if (!resultComplete) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    const releaseInfo = resultData as unknown as GReleaseInfo[];\r\n\r\n    // console.log(releaseInfo)\r\n\r\n    if (!releaseInfo) {\r\n        return <p>error</p>\r\n    }\r\n\r\n    const toDisplay: ToDisplay[] = releaseInfo\r\n        .map((releaseInfo: GReleaseInfo) => {\r\n            var modJarAssets = releaseInfo.assets.filter(asset => asset.name.indexOf('fabric') >= 0);\r\n            if (modJarAssets.length === 0) {\r\n                return null;\r\n            }\r\n            var asset = modJarAssets[0];\r\n\r\n            const publishDate = releaseInfo.published_at.substr(\r\n                0, releaseInfo.published_at.indexOf('T')\r\n            );\r\n\r\n            return {\r\n                mcVersion: getMcVersionFromModJarName(asset.name),\r\n                modVersion: getModVersionFromModJarName(asset.name),\r\n                downloadUrl: asset.browser_download_url,\r\n                upgradeInfo: releaseInfo.body,\r\n                isPreRelease: releaseInfo.prerelease,\r\n                publishTime: publishDate,\r\n                downloadCount: asset.download_count\r\n            } as ToDisplay;\r\n        })\r\n        .filter(notEmpty);\r\n\r\n    const groupedByMcVersion: Dictionary<ToDisplay[]> = _.groupBy(\r\n        toDisplay,\r\n        (r: ToDisplay) => r.mcVersion\r\n    );\r\n\r\n\r\n    return <div>\r\n        {_.toPairsIn(groupedByMcVersion).map((pair) => {\r\n            const [mcVersion, termList] = pair;\r\n\r\n            const firstRelease: number = termList.findIndex((term) => !term.isPreRelease);\r\n            if (firstRelease !== -1) {\r\n                //remove the first release and insert into the first\r\n                termList.splice(0, 0, ...(termList.splice(firstRelease, 1)))\r\n            }\r\n\r\n            return <Accordion key={pair[0]} style={{ backgroundColor: '#ffd699', color: 'black' }}>\r\n                <AccordionSummary>\r\n                    {mcVersion}\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails>\r\n                    <div style={{ width: '100%' }}>\r\n                        {termList.map(r => <DownloadTerm data={r} key={r.downloadUrl} />)}\r\n                    </div>\r\n                </AccordionDetails>\r\n            </Accordion>;\r\n        })}\r\n        {/*{toDisplay.map(r => <DownloadTerm data={r}/>)}*/}\r\n    </div>\r\n}","import React, {useRef} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {MyBanner} from \"./MyBanner\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {getIsVerticalMobile, getPublicResourcePath, MyButton, MyRemoteMarkdown} from \"../my_util/Util\";\r\nimport {IPDownload} from \"./IPDownload\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nexport function IPFeatures(props: {}) {\r\n    let {t, i18n} = useTranslation();\r\n    \r\n    const path = t('url_ip_features');\r\n    \r\n    return <MyRemoteMarkdown url={path}/>\r\n    \r\n}\r\n\r\nexport function IPPage(props: {}) {\r\n    let history = useHistory();\r\n    \r\n    let {t, i18n} = useTranslation();\r\n    \r\n    const path = t('url_ip');\r\n    \r\n    // const {data: resultData, complete: resultComplete} = useEndPoint(path);\r\n    \r\n    const downloadSectionRef = useRef(null)\r\n    \r\n    const executeScroll = () => {\r\n        // @ts-ignore\r\n        downloadSectionRef.current.scrollIntoView({behavior: 'smooth'});\r\n    }\r\n    \r\n    const spacing = getIsVerticalMobile() ? 15 : 30;\r\n    \r\n    // const background = 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)';\r\n    \r\n    const background = '#e8eaf6';\r\n    \r\n    return (\r\n        <div className='My-Page'>\r\n            <MyBanner text={t('Immersive Portals')} color='#9500ae'\r\n                      pageIconPath={getPublicResourcePath('/immptl.png')}/>\r\n            \r\n            <div style={{margin: spacing, display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\r\n                <Card style={{\r\n                    display: 'flex', flexDirection: 'row',\r\n                    justifyContent: 'flex-start', alignItems: 'center',\r\n                    flexWrap: \"wrap\",\r\n                    minHeight: '40vh',\r\n                    background: background,\r\n                    marginBottom: spacing\r\n                }} square={false} elevation={10}>\r\n                    \r\n                    <img src={getPublicResourcePath('/immptl.png')} alt='i am alt' style={{\r\n                        flexGrow: 0,\r\n                        width: 150,\r\n                        margin: 40,\r\n                        marginRight: 0,\r\n                        marginBottom: getIsVerticalMobile() ? 0 : 40\r\n                    }}/>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'space-between',\r\n                        alignSelf: 'stretch',\r\n                        margin: 40,\r\n                        // marginLeft: 0,\r\n                        marginBottom: 20,\r\n                        flexGrow: 1, flexBasis: 0, minWidth: '50vw'\r\n                    }}>\r\n                        \r\n                        <MyRemoteMarkdown url={path}/>\r\n                        \r\n                        <div style={{flexDirection: 'row', justifyContent: 'flex-start'}}>\r\n                            <MyButton style={{backgroundColor: '#35baf6', margin: 10}}\r\n                                      onClick={executeScroll}\r\n                            >\r\n                                {t('ip_download')}\r\n                            </MyButton>\r\n                            \r\n                            <Link to='/immptl/wiki' style={{textDecoration: 'none', color: 'black'}}>\r\n                                <MyButton style={{backgroundColor: '#35baf6', margin: 10}}>\r\n                                    {t('ip_wiki')}\r\n                                </MyButton>\r\n                            </Link>\r\n                            \r\n                            <MyButton style={{backgroundColor: '#35baf6', margin: 10}}\r\n                                      href='https://github.com/qouteall/ImmersivePortalsMod'\r\n                            >\r\n                                {t('Source')}\r\n                            </MyButton>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                </Card>\r\n                \r\n                \r\n                <Card style={{\r\n                    background: background,\r\n                    padding: 20,\r\n                    marginBottom: spacing\r\n                }} elevation={10}>\r\n                    <Typography variant='h6'>{t('Features')}</Typography>\r\n                    <IPFeatures/>\r\n                </Card>\r\n                \r\n                <Card style={{\r\n                    background: background,\r\n                    padding: 20,\r\n                    marginBottom: spacing\r\n                }} elevation={10} ref={downloadSectionRef}>\r\n                    <Typography variant='h5'>{t('ip_downloads')}</Typography>\r\n                    <p>{t('requires')}<a href=\"https://github.com/FabricMC/fabric/releases\">Fabric API</a></p>\r\n                    <Typography variant='body1'>{t('ip_download_desc')}</Typography>\r\n                    <IPDownload/>\r\n                    <a href='https://www.curseforge.com/minecraft/mc-mods/immersive-portals-mod'>\r\n                        <p>{t('ip_or_curseforge')}</p>\r\n                    </a>\r\n                </Card>\r\n            \r\n            </div>\r\n        \r\n        \r\n        </div>\r\n    );\r\n}","import React, {CSSProperties} from \"react\";\r\n\r\nimport {Transition} from 'react-transition-group';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst clippingCollapseStyle = {\r\n    // entering: {clipPath: 'circle(100%)',},\r\n    // entered: {clipPath: 'circle(100%)',},\r\n    // exiting: {clipPath: 'circle(0%)',},\r\n    // exited: {clipPath: 'circle(0%)',},\r\n    \r\n    entering: {clipPath: 'inset(0%)',},\r\n    entered: {clipPath: '',},\r\n    exiting: {clipPath: 'inset(0% 0% 100% 0%)',},\r\n    exited: {clipPath: 'inset(0% 0% 100% 0%)',},\r\n};\r\n\r\nexport const MyClippingCollapse = (props: { shown: boolean, children: any, duration: number }) => {\r\n    const defaultStyle = {\r\n        transition: `clip-path ${props.duration}ms ease-in`,\r\n    }\r\n    \r\n    return (\r\n        <Transition in={props.shown} timeout={props.duration}>\r\n            {state => {\r\n                // console.log(state)\r\n                return (\r\n                    <div style={{\r\n                        ...defaultStyle,\r\n                        // @ts-ignore\r\n                        ...clippingCollapseStyle[state]\r\n                    }}>\r\n                        {props.children}\r\n                    </div>\r\n                );\r\n            }}\r\n        </Transition>\r\n    );\r\n};\r\n\r\nconst roundStyle = {\r\n    entering: {clipPath: 'circle(100%)',},\r\n    entered: {clipPath: 'circle(100%)',},\r\n    exiting: {clipPath: 'circle(0%)',},\r\n    exited: {clipPath: 'circle(0%)',},\r\n};\r\n\r\nexport const MyRoundAnimation = (props: { shown: boolean, children: any, duration: number }) => {\r\n    const defaultStyle = {\r\n        transition: `clip-path ${props.duration}ms ease-in`,\r\n    }\r\n    \r\n    return (\r\n        <Transition in={props.shown} timeout={props.duration}>\r\n            {state => {\r\n                // console.log(state)\r\n                return (\r\n                    <div style={{\r\n                        ...defaultStyle,\r\n                        // @ts-ignore\r\n                        ...roundStyle[state]\r\n                    }}>\r\n                        {props.children}\r\n                    </div>\r\n                );\r\n            }}\r\n        </Transition>\r\n    );\r\n};","import React, {MutableRefObject, useContext, useEffect, useRef} from \"react\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nexport const HeadingContext = React.createContext({\r\n    isMatureRef: {current: true}\r\n})\r\n\r\nexport function getHeadingFontSize(level: number) {\r\n    let fontSize = 55;\r\n    \r\n    switch (level) {\r\n        case 1:\r\n            fontSize = 36\r\n            break\r\n        case 2:\r\n            fontSize = 32\r\n            break\r\n        case 3:\r\n            fontSize = 27\r\n            break\r\n        case 4:\r\n            fontSize = 22\r\n            break\r\n        case 5:\r\n            fontSize = 20\r\n            break\r\n    }\r\n    return fontSize;\r\n}\r\n\r\nexport function getHeadingColor(level: number) {\r\n    let background = \"#ed4b82\";\r\n    switch (level) {\r\n        case 1:\r\n            background = \"#4dabf5\"\r\n            break\r\n        case 2:\r\n            background = \"#00a152\"\r\n            break\r\n        case 3:\r\n            background = \"#ffac33\"\r\n            break\r\n        case 4:\r\n            background = \"#ed4b82\"\r\n            break\r\n        case 5:\r\n            background = \"#4dabf5\"\r\n            break\r\n    }\r\n    return background;\r\n}\r\n\r\nexport const headingSelectedColor = '#9c27b020';\r\n\r\nexport function WikiHeading(props: { level: number, children: any, node: any }) {\r\n    const myRef: React.MutableRefObject<any> = useRef()\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    \r\n    const headingHash = props.node.myHeadingHash;\r\n    \r\n    const context = useContext(HeadingContext);\r\n    \r\n    const isMatureRef = context.isMatureRef;\r\n    \r\n    const selectedByUrl = location.hash === headingHash;\r\n    \r\n    useEffect(() => {\r\n        if (location.hash) {\r\n            const scrollFunc = () => {\r\n                if (myRef.current) {\r\n                    const y = myRef.current.getBoundingClientRect().y;\r\n                    if (y < 100 || y > (window.innerHeight || window.outerHeight)) {\r\n                        myRef.current.scrollIntoView({behavior: 'smooth'});\r\n                    }\r\n                }\r\n            };\r\n            \r\n            // console.log(headingHash)\r\n            if (selectedByUrl) {\r\n                if (isMatureRef.current) {\r\n                    scrollFunc()\r\n                } else {\r\n                    let timer = setTimeout(() => {\r\n                        scrollFunc();\r\n                    }, 1000);\r\n                    \r\n                    return () => {\r\n                        clearTimeout(timer);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [headingHash, location.hash])\r\n    \r\n    const level = props.level;\r\n    const fontSize = getHeadingFontSize(level);\r\n    const background = getHeadingColor(level);\r\n    \r\n    // console.log('what');\r\n    \r\n    return <div id={headingHash} style={{\r\n        display: \"flex\", flexDirection: \"row\", alignItems: \"stretch\",\r\n        position: 'relative'\r\n    }} onClick={(e) => {\r\n        history.push(headingHash);\r\n    }}>\r\n        <div style={{\r\n            position: 'absolute',\r\n            left: selectedByUrl ? 0 : '100%', right: 0, top: 0, bottom: 0,\r\n            transition: \"left 1000ms\",\r\n            background: headingSelectedColor,\r\n            zIndex: -1\r\n        }}/>\r\n        \r\n        <div style={{\r\n            display: \"inline-flex\", width: 5, background: background,\r\n            marginTop: 4, marginBottom: 4, marginRight: 10,\r\n            flexShrink: 0\r\n        }}/>\r\n        <Typography ref={myRef} style={{fontSize: fontSize}}>\r\n            {props.children}\r\n            {/*<IconButton onClick={() => {*/}\r\n            {/*    history.push(headingHash)*/}\r\n            {/*}}>*/}\r\n            {/*    <LinkIcon/>*/}\r\n            {/*</IconButton>*/}\r\n        </Typography>\r\n    \r\n    \r\n    </div>;\r\n}","import React, {\r\n    DOMElement,\r\n    MutableRefObject,\r\n    ReactElement,\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState\r\n} from \"react\";\r\nimport ReactMarkdown, {ReactMarkdownProps} from \"react-markdown\";\r\n\r\nimport xtend from \"xtend\";\r\n\r\nimport unified from \"unified\";\r\n\r\nimport parse from \"remark-parse\";\r\n\r\n// @ts-ignore\r\nimport naiveHtml from \"react-markdown/lib/plugins/naive-html\"\r\n\r\n// @ts-ignore\r\nimport addListMetadata from \"mdast-add-list-metadata\";\r\n\r\n// @ts-ignore\r\nimport astToReact from \"react-markdown/lib/ast-to-react\";\r\n\r\n// @ts-ignore\r\nimport wrapTableRows from \"react-markdown/lib/wrap-table-rows\";\r\n\r\n// @ts-ignore\r\nimport getDefinitions from \"react-markdown/lib/get-definitions\";\r\n\r\n// @ts-ignore\r\nimport defaultRenderers from \"react-markdown/lib/renderers\";\r\nimport _ from \"lodash/fp\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {CircularProgress, List} from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\r\nimport {getIsVerticalMobile, getStringBetween} from \"../../my_util/Util\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport Axios, {AxiosResponse} from \"axios\";\r\nimport AnimateHeight from \"react-animate-height\";\r\nimport {MyClippingCollapse} from \"../TestAnimation\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {getHeadingColor, HeadingContext, headingSelectedColor} from \"./WikiHeading\";\r\nimport {removeAssignedHash} from \"./WikiPage\";\r\n\r\n// @ts-ignore\r\n\r\nvar allTypes = Object.keys(defaultRenderers);\r\n\r\ntype Content = Array<HeadingWithContent | Array<Content>>\r\n\r\ninterface HeadingWithContent {\r\n    myType: 'heading_with_content',\r\n    headingElement: any | null,//only the root has null heading\r\n    contents: Array<HeadingWithContent | any>\r\n}\r\n\r\nfunction isHeading(node: any) {\r\n    return node.type === 'heading';\r\n}\r\n\r\nfunction isHeadingWithContent(obj: any): obj is HeadingWithContent {\r\n    return obj.myType === 'heading_with_content';\r\n}\r\n\r\nconst toRemoveFromHash: RegExp = /[!\"#$%&'()*+,./:;<=>?@\\^`{|}~]/g\r\n\r\nfunction headingTextToHash(heading: string) {\r\n    return '#' + heading.toLowerCase().replace(/ /g, '-')\r\n        .replace(toRemoveFromHash, '');\r\n}\r\n\r\nfunction produceHeadingHash(headingNode: any): string {\r\n    // @ts-ignore\r\n    const joined: string = headingNode.children.map(n => n.value).join('');\r\n    \r\n    const assignedHash = getStringBetween(joined, '{#', '}');\r\n    if (assignedHash.length !== 0) {\r\n        return headingTextToHash(assignedHash);\r\n    }\r\n    \r\n    return headingTextToHash(joined);\r\n}\r\n\r\nclass HeadingHierarchyParser {\r\n    children: Array<any>;\r\n    currIndex: number;\r\n    headingDiscriminatorNumbers: Map<string, number>;\r\n    \r\n    constructor(c: Array<any>) {\r\n        this.children = c;\r\n        this.currIndex = 0;\r\n        this.headingDiscriminatorNumbers = new Map();\r\n    }\r\n    \r\n    isEnded(): boolean {\r\n        return this.currIndex >= this.children.length;\r\n    }\r\n    \r\n    parseNonHeadingContents(): Array<any> {\r\n        const headingIndex = _.findIndexFrom(isHeading, this.currIndex, this.children);\r\n        if (headingIndex === -1) {\r\n            const result = this.children.slice(this.currIndex);\r\n            this.currIndex = this.children.length;\r\n            return result;\r\n        }\r\n        const result = this.children.slice(this.currIndex, headingIndex);\r\n        this.currIndex = headingIndex;\r\n        return result;\r\n    }\r\n    \r\n    parseHierarchy(minDepth: number): Array<HeadingWithContent | any> {\r\n        const base: Array<HeadingWithContent | any> = this.parseNonHeadingContents();\r\n        \r\n        while (!this.isEnded()) {\r\n            const currHeading = this.children[this.currIndex];\r\n            const currDepth = currHeading.depth;\r\n            if (currDepth < minDepth) {\r\n                return base;\r\n            }\r\n            this.currIndex += 1;//swallow the header\r\n            \r\n            const remaining = this.parseHierarchy(currDepth + 1);\r\n            \r\n            const originalHeadingHash = produceHeadingHash(currHeading);\r\n            const number = this.headingDiscriminatorNumbers.get(originalHeadingHash);\r\n            let discriminatedHeadingHash;\r\n            if (number !== undefined) {\r\n                this.headingDiscriminatorNumbers.set(originalHeadingHash, number + 1);\r\n                discriminatedHeadingHash = originalHeadingHash + '-' + number;\r\n            } else {\r\n                this.headingDiscriminatorNumbers.set(originalHeadingHash, 1);\r\n                discriminatedHeadingHash = originalHeadingHash;\r\n            }\r\n            currHeading.myHeadingHash = discriminatedHeadingHash;\r\n            \r\n            base.push({myType: 'heading_with_content', headingElement: currHeading, contents: remaining});\r\n        }\r\n        \r\n        return base;\r\n    }\r\n    \r\n    parseDocument(): HeadingWithContent {\r\n        const contents = this.parseHierarchy(0);\r\n        \r\n        return {\r\n            myType: 'heading_with_content',\r\n            headingElement: null,//only the root has null heading\r\n            contents: contents\r\n        };\r\n    }\r\n}\r\n\r\nfunction extractHeadingContentGroup(children: Array<any>): Array<HeadingWithContent | any> {\r\n    \r\n    var result = new HeadingHierarchyParser(children).parseHierarchy(0);\r\n    \r\n    \r\n    return result;\r\n}\r\n\r\nfunction getRendererProps(props: ReactMarkdown.ReactMarkdownProps, tree: any): any {\r\n    var renderers = xtend(defaultRenderers, props.renderers);\r\n    \r\n    var renderProps = xtend(props, {\r\n        renderers: renderers,\r\n        definitions: getDefinitions(tree)\r\n    });\r\n    return renderProps;\r\n}\r\n\r\nexport async function myParseMarkdownAsync(props: ReactMarkdownProps) {\r\n    var src = props.source || props.children || '';\r\n    \r\n    var processor = unified().use(parse).use(props.plugins || []); // eslint-disable-next-line no-sync\r\n    \r\n    var tree = await processor.run(processor.parse(src));\r\n    \r\n    tree = wrapTableRows(tree);\r\n    \r\n    tree = addListMetadata()(tree);\r\n    \r\n    tree = naiveHtml(tree);\r\n    \r\n    // console.log(tree)\r\n    \r\n    return tree;\r\n}\r\n\r\nfunction WikiSection(props: { index: number, data: Array<any>, renderOptions: any }) {\r\n    // const scrollNotifier = useContext(ScrollNotifierContext);\r\n    const myRef = useRef(null);\r\n    \r\n    // console.log(\"woops\")\r\n    \r\n    return <div ref={myRef}>{\r\n        props.data.map((item: any, index: number) => {\r\n            if (isHeadingWithContent(item)) {\r\n                const childIndex: number = item.headingElement.position.start.line;\r\n                return <React.Fragment key={index}>\r\n                    {astToReact(item.headingElement, props.renderOptions)}\r\n                    <WikiSection index={childIndex} key={childIndex} data={item.contents}\r\n                                 renderOptions={props.renderOptions}/>\r\n                </React.Fragment>\r\n            } else {\r\n                return astToReact(item, props.renderOptions);\r\n            }\r\n        })\r\n    }</div>;\r\n}\r\n\r\nfunction RightBarSection(props: {\r\n    outerSelectedHash: string, item: HeadingWithContent, layer: number,\r\n    setOuterSelected: null | ((cond: boolean) => void),\r\n    onTitleClick: () => void,\r\n    onViewed: (termDom: HTMLDivElement) => void\r\n}) {\r\n    let [opened, setOpened] = useState(false);\r\n    let [selected, setSelected] = useState(false);\r\n    \r\n    const location = useLocation();\r\n    const history = useHistory()\r\n    \r\n    const item = props.item;\r\n    \r\n    const headingHash = item.headingElement.myHeadingHash;\r\n    \r\n    // console.log(headingHash);\r\n    \r\n    const hasContent = item.contents.findIndex(w => isHeadingWithContent(w)) !== -1;\r\n    \r\n    const domRef = useRef(null as (null | HTMLDivElement));\r\n    \r\n    useEffect(() => {\r\n        const viewed = props.outerSelectedHash === headingHash;\r\n        \r\n        setSelected(viewed);\r\n        \r\n        if (props.setOuterSelected) {\r\n            props.setOuterSelected(viewed);\r\n        }\r\n        \r\n        if (viewed) {\r\n            if (domRef.current) {\r\n                props.onViewed(domRef.current);\r\n            }\r\n        }\r\n    }, [headingHash, props.outerSelectedHash]);\r\n    \r\n    // @ts-ignore\r\n    let toDisplay: string = item.headingElement.children.map(s => s.value).join(' ');\r\n    \r\n    // remove for example {#hash}\r\n    toDisplay = removeAssignedHash(toDisplay);\r\n    \r\n    // cut if too long\r\n    if (toDisplay.length > 60) {\r\n        toDisplay = toDisplay.substr(0, 60) + '...';\r\n    }\r\n    \r\n    const headingColor = getHeadingColor(item.headingElement.depth);\r\n    \r\n    return <React.Fragment key={headingHash}>\r\n        <ListItem ref={domRef} button style={{\r\n            padding: 3, paddingLeft: props.layer * 10 + 10,\r\n            display: \"flex\", flexDirection: \"row\", alignItems: \"stretch\",\r\n            backgroundColor: (location.hash === headingHash) ? headingSelectedColor : undefined\r\n        }} selected={\r\n            selected\r\n        } onClick={() => {\r\n            if (!(opened && hasContent)) {\r\n                history.push(headingHash);\r\n                \r\n                props.onTitleClick();\r\n            }\r\n            \r\n            setOpened(!opened);\r\n        }}>\r\n            <div style={{\r\n                display: \"inline-flex\", width: 5, background: headingColor,\r\n                marginTop: 1, marginBottom: 0, marginRight: 5,\r\n                flexShrink: 0\r\n            }}/>\r\n            {toDisplay}\r\n            {hasContent && (opened ? <ExpandMore/> : <ExpandLess/>)}\r\n        </ListItem>\r\n        {hasContent && <Collapse in={opened} timeout={200}>\r\n            <List dense={true} style={{padding: 0}}>\r\n                {item.contents.map((w, index) => {\r\n                    if (!isHeadingWithContent(w)) {\r\n                        return undefined;\r\n                    }\r\n                    return <RightBarSection\r\n                        key={index}\r\n                        outerSelectedHash={props.outerSelectedHash}\r\n                        item={w}\r\n                        layer={props.layer + 1}\r\n                        setOuterSelected={(cond) => {\r\n                            setSelected(cond);\r\n                            \r\n                            if (cond) {\r\n                                setOpened(true);\r\n                            }\r\n                            \r\n                            if (props.setOuterSelected) {\r\n                                props.setOuterSelected(cond);\r\n                            }\r\n                        }}\r\n                        onTitleClick={props.onTitleClick}\r\n                        onViewed={props.onViewed}\r\n                    />;\r\n                })}\r\n            </List>\r\n        </Collapse>}\r\n    </React.Fragment>;\r\n}\r\n\r\ninterface HeadingRef {\r\n    headingHash: string,// has '#'\r\n    element: HTMLElement\r\n}\r\n\r\nfunction getHeadingRefs(result: Array<HeadingRef>, hierarchy: Array<any>) {\r\n    // console.log(hierarchy);\r\n    hierarchy.forEach((item) => {\r\n        if (isHeadingWithContent(item)) {\r\n            const headingHash = item.headingElement.myHeadingHash;\r\n            const element = document.getElementById(headingHash);\r\n            if (element !== null) {\r\n                result.push({\r\n                    headingHash: headingHash,\r\n                    element: element\r\n                });\r\n            } else {\r\n                console.error('cannot find ' + headingHash)\r\n            }\r\n            \r\n            getHeadingRefs(result, item.contents)\r\n        }\r\n    })\r\n}\r\n\r\nconst MemoedWikiSection = React.memo(WikiSection);\r\n\r\nfunction FlatWikiSection(props: { root: any, renderOptions: any }) {\r\n    const isMatureRef = useRef(false);\r\n    \r\n    // console.log(\"flat\")\r\n    \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            isMatureRef.current = true;\r\n        }, 1000);\r\n    }, []);\r\n    \r\n    return <HeadingContext.Provider value={{isMatureRef: isMatureRef}}>\r\n        {astToReact(props.root, props.renderOptions)}\r\n    </HeadingContext.Provider>;\r\n}\r\n\r\nconst MemoedFlatWikiSection = React.memo(FlatWikiSection);\r\n\r\nconst MemoedRightBarSection = React.memo(RightBarSection);\r\n\r\nexport function useWikiContent(\r\n    contentUrl: string,\r\n    renderers: any, plugins: any,\r\n    scrollDomRef: MutableRefObject<DOMElement<any, any>>,\r\n    fallbackUrl: string,\r\n    rightBarScrollRef: MutableRefObject<null | HTMLDivElement>\r\n): {\r\n    wikiContentComponent: ReactElement,\r\n    rightBarComponent: ReactElement,\r\n    updateScrollFunc: () => void,\r\n} {\r\n    let reactMarkdownProps: ReactMarkdownProps = {\r\n        renderers: renderers, plugins: plugins,\r\n        children: 'loading markdown'\r\n    };\r\n    \r\n    const [tree, setTree] = useState(null);\r\n    \r\n    const [errorLoading, setErrorLoading] = useState(false);\r\n    \r\n    const [isAwaitingTranslation, setIsAwaitingTranslation] = useState(false);\r\n    \r\n    const [rightBarEnabled, setRightBarEnabled] = useState(false);\r\n    \r\n    const hierarchyRef: MutableRefObject<null | Array<HeadingWithContent | any>> =\r\n        useRef(null);\r\n    \r\n    const renderPropsRef = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        async function doParseWikiContent() {\r\n            let markdownResult: AxiosResponse<any>;\r\n            try {\r\n                markdownResult = await Axios({\r\n                    url: isAwaitingTranslation ? fallbackUrl : contentUrl\r\n                });\r\n            } catch (e) {\r\n                setErrorLoading(true);\r\n                return;\r\n            }\r\n            \r\n            if (!isAwaitingTranslation) {\r\n                if (markdownResult.data === \"awaiting translation\") {\r\n                    setIsAwaitingTranslation(true);\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            let parsedMarkdown = await myParseMarkdownAsync({\r\n                // @ts-ignore\r\n                renderer: renderers, plugins: plugins,\r\n                children: markdownResult.data\r\n            });\r\n            \r\n            // @ts-ignore\r\n            hierarchyRef.current = extractHeadingContentGroup(parsedMarkdown.children);\r\n            \r\n            renderPropsRef.current = getRendererProps(reactMarkdownProps, parsedMarkdown);\r\n            \r\n            // @ts-ignore\r\n            setTree(parsedMarkdown);\r\n            setErrorLoading(false);\r\n            \r\n            // console.log(parsedMarkdown)\r\n        }\r\n        \r\n        doParseWikiContent()\r\n        \r\n        setTimeout(() => setRightBarEnabled(true), 1200);\r\n    }, [contentUrl, isAwaitingTranslation]);\r\n    \r\n    const rendererProps: any = renderPropsRef.current;\r\n    \r\n    // @ts-ignore\r\n    const hierarchy = hierarchyRef.current;\r\n    \r\n    const [viewingSectionHash, setViewingSectionHash] = useState('');\r\n    \r\n    const wikiContents = hierarchy === null ? undefined :\r\n        <MemoedFlatWikiSection root={tree} renderOptions={rendererProps}/>;\r\n    \r\n    const enableSectionUpdate = useRef(true);\r\n    const timerRef = useRef(null);\r\n    \r\n    useEffect(() => () => {\r\n        // @ts-ignore\r\n        clearTimeout(timerRef.current);\r\n    }, []);\r\n    \r\n    const headingRefs = useRef([]);\r\n    \r\n    useEffect(() => {\r\n        if (hierarchy !== null) {\r\n            const result: HeadingRef[] = [];\r\n            getHeadingRefs(result, hierarchy);\r\n            // @ts-ignore\r\n            headingRefs.current = result;\r\n            \r\n            // console.log(result);\r\n        }\r\n    }, [hierarchy]);\r\n    \r\n    \r\n    const doUpdateScroll = () => {\r\n        if (getIsVerticalMobile()) {\r\n            setViewingSectionHash('');\r\n            return;\r\n        }\r\n        \r\n        if (!scrollDomRef.current) {\r\n            return;\r\n        }\r\n        \r\n        if (!enableSectionUpdate.current) {\r\n            return;\r\n        }\r\n        \r\n        // console.log(\"scroll updating\")\r\n        \r\n        let active: HeadingRef | null = null;\r\n        \r\n        // @ts-ignore\r\n        const scrollTop: number = scrollDomRef.current.scrollTop;\r\n        // @ts-ignore\r\n        const scrollHeight: number = scrollDomRef.current.scrollHeight;\r\n        \r\n        var screenHeight = document.documentElement.clientHeight;\r\n        \r\n        const scrollPosition = ((scrollTop / (scrollHeight - screenHeight) * scrollHeight))\r\n        \r\n        for (let i = headingRefs.current.length - 1; i >= 0; i -= 1) {\r\n            \r\n            const item: HeadingRef = headingRefs.current[i];\r\n            \r\n            if (item.element &&\r\n                item.element.offsetTop <\r\n                scrollPosition + screenHeight / 4\r\n            ) {\r\n                active = item;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if (active !== null && viewingSectionHash !== active.headingHash) {\r\n            setViewingSectionHash(active.headingHash);\r\n        }\r\n    };\r\n    \r\n    const updateScrollMemoed = useCallback(doUpdateScroll, [viewingSectionHash]);\r\n    \r\n    const titles = (hierarchy !== null && rightBarEnabled) ? <List dense={true} style={{\r\n        fontSize: 16\r\n    }}>\r\n        {hierarchy.map((v, index) => {\r\n            if (!isHeadingWithContent(v)) {\r\n                return undefined;\r\n            }\r\n            \r\n            return <MemoedRightBarSection\r\n                outerSelectedHash={viewingSectionHash}\r\n                item={v}\r\n                layer={0}\r\n                key={index}\r\n                setOuterSelected={null}\r\n                onTitleClick={() => {\r\n                    enableSectionUpdate.current = false;\r\n                    // @ts-ignore\r\n                    timerRef.current = setTimeout(() => {\r\n                        enableSectionUpdate.current = true;\r\n                        updateScrollMemoed();\r\n                    }, 2000);\r\n                }}\r\n                onViewed={(termDom) => {\r\n                    if (rightBarScrollRef.current) {\r\n                        const termY = termDom.getBoundingClientRect().y;\r\n                        \r\n                        if (termY > 100 && ((termY + 100) < window.outerHeight)) {\r\n                            //visible\r\n                        } else {\r\n                            //invisible\r\n                            const scrollClientTop = rightBarScrollRef.current?.getBoundingClientRect().y;\r\n                            const scrollTop = rightBarScrollRef.current?.scrollTop || 0;\r\n                            const offset = termY - scrollClientTop + scrollTop;\r\n                            \r\n                            rightBarScrollRef.current?.scrollTo({top: offset - 200, behavior: 'smooth'});\r\n                        }\r\n                    }\r\n                }}\r\n            />;\r\n        })}\r\n    </List> : <></>;\r\n    \r\n    let location = useLocation();\r\n    \r\n    // @ts-ignore\r\n    const duration: number = location.hash !== '' ? 0 : tree ? tree.children.length * 70 : 1000;\r\n    \r\n    return {\r\n        wikiContentComponent: <div>\r\n            {/*<Collapse in={tree!==null} timeout={duration}>*/}\r\n            {/*    {wikiContents}*/}\r\n            {/*</Collapse>*/}\r\n            <MyClippingCollapse shown={tree !== null} duration={duration}>\r\n                {wikiContents}\r\n            </MyClippingCollapse>\r\n            {errorLoading && <Typography>\r\n                {'error loading ' + contentUrl}\r\n            </Typography>}\r\n            {(tree === null && !errorLoading) &&\r\n            <CircularProgress/>\r\n            }\r\n        </div>,\r\n        rightBarComponent: titles,\r\n        updateScrollFunc: updateScrollMemoed\r\n    };\r\n}\r\n\r\n","import { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport { MyButton } from \"../../my_util/Util\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const WikiToSideBarContext = React.createContext({\r\n    onTermClicked: () => {\r\n    }\r\n});\r\n\r\nfunction processLink(url: string): string {\r\n    return url.substr(url.indexOf('/wiki'))\r\n}\r\n\r\nexport function getLocalWikiUrlFromGithubWikiUrl(githubWikiUrl: string) {\r\n    const processed = processLink(githubWikiUrl);\r\n    return '/immptl' + processed;\r\n}\r\n\r\nexport function MySidebarLink(props: { url: string, children: any }) {\r\n    // const history = useHistory();\r\n\r\n    const location = useLocation();\r\n\r\n    var githubWikiUrl = props.url;\r\n    var localUrl = getLocalWikiUrlFromGithubWikiUrl(githubWikiUrl);\r\n\r\n    var context = useContext(WikiToSideBarContext);\r\n\r\n    const selected = location.pathname === localUrl;\r\n\r\n    // useEffect(() => {\r\n    //     if (selected) {\r\n    //         context.setTitle(props.children[0].props.value)\r\n    //     }\r\n    // });\r\n\r\n    return <Link to={localUrl} style={{ textDecoration: 'none', color: 'black' }}>\r\n        <ListItem selected={selected} button onClick={(e) => {\r\n            context.onTermClicked()\r\n            // history.push(localUrl);\r\n        }}>\r\n            {props.children}\r\n        </ListItem>\r\n    </Link>;\r\n}\r\n\r\n// export const sidebarMarkdownRenderers = {\r\n//     link: (a: any) => {\r\n//         return <MySidebarLink url={a.href}>{a.children}</MySidebarLink>;\r\n//     },\r\n//     paragraph: (a: any) => a.children\r\n// }\r\n\r\nexport function MyLinkInWiki(props: { targetLink: string, children: any }) {\r\n    let history = useHistory();\r\n\r\n    let { t, i18n } = useTranslation();\r\n\r\n    if (props.targetLink.indexOf('github.com/qouteall/ImmersivePortalsMod/wiki') !== -1) {\r\n        //inner link\r\n\r\n        const localWikiUrlFromGithubWikiUrl = getLocalWikiUrlFromGithubWikiUrl(props.targetLink);\r\n\r\n        return <Link to={localWikiUrlFromGithubWikiUrl}>\r\n            <MyButton style={{\r\n                padding: 0, margin: 0\r\n            }}>\r\n                {props.children}\r\n            </MyButton>\r\n        </Link>\r\n    } else {\r\n        //outer link\r\n        return <a href={props.targetLink}>{props.children}</a>\r\n    }\r\n}","import React, {DOMElement, useEffect, useRef, useState} from \"react\";\r\nimport {MyBanner} from \"../MyBanner\";\r\nimport {CircularProgress, List} from \"@material-ui/core\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport {\r\n    getIsVerticalMobile,\r\n    getPublicResourcePath,\r\n    getStringAfter,\r\n    baseMarkdownRenderers,\r\n    useEndPoint\r\n} from \"../../my_util/Util\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport {myParseMarkdownAsync, useWikiContent} from \"./WikiContent\";\r\nimport {\r\n    getLocalWikiUrlFromGithubWikiUrl,\r\n    MyLinkInWiki, MySidebarLink,\r\n    WikiToSideBarContext\r\n} from \"./WikiSidebar\";\r\nimport {WikiHeading} from \"./WikiHeading\";\r\n\r\nconst gfm = require('remark-gfm')\r\n\r\n//both github wiki url and this website url\r\nfunction getMdUrlFromWikiUrl(url: string, head: string) {\r\n    var innerPath = getStringAfter(url, '/wiki');\r\n    \r\n    if (innerPath.length === 0) {\r\n        return head + '/Home.md';\r\n    }\r\n    \r\n    return head + innerPath + '.md';\r\n}\r\n\r\nexport function removeAssignedHash(text: string) {\r\n    let i = text.indexOf('{#');\r\n    if (i !== -1) {\r\n        return text.slice(0, i);\r\n    }\r\n    \r\n    return text;\r\n}\r\n\r\nconst wikiMarkdownRenderers = {\r\n    ...baseMarkdownRenderers,\r\n    text: (a: any) => {\r\n        let text: string = a.value;\r\n        return removeAssignedHash(text);\r\n    },\r\n    table: (a: any) => {\r\n        return <Table>{a.children}</Table>\r\n    },\r\n    tableHead: (a: any) => <TableHead>{a.children}</TableHead>,\r\n    tableRow: (a: any) => <TableRow>{a.children}</TableRow>,\r\n    tableBody: (a: any) => <TableBody>{a.children}</TableBody>,\r\n    tableCell: (a: any) => <TableCell>{a.children}</TableCell>,\r\n    link: (a: any) => {\r\n        return <MyLinkInWiki targetLink={a.href}>{a.children}</MyLinkInWiki>\r\n    },\r\n    heading: (a: any) => {\r\n        return <WikiHeading level={a.level} node={a.node}>{a.children}</WikiHeading>\r\n    }\r\n}\r\n\r\ninterface WikiPageEntry {\r\n    title: string,\r\n    url: string\r\n}\r\n\r\nfunction parseWikiPageEntries(result: Array<WikiPageEntry>, node: any) {\r\n    if (node.type === 'link') {\r\n        let newEntry: WikiPageEntry = {\r\n            title: node.children[0].value,\r\n            url: node.url\r\n        };\r\n        \r\n        result.push(newEntry);\r\n    }\r\n    \r\n    if (node.children) {\r\n        for (let c of node.children) {\r\n            parseWikiPageEntries(result, c);\r\n        }\r\n    }\r\n    \r\n    return null;\r\n}\r\n\r\nexport function IPWikiPage() {\r\n    let {t, i18n} = useTranslation();\r\n    \r\n    let location = useLocation();\r\n    \r\n    const wikiContentUrl = getMdUrlFromWikiUrl(location.pathname, t('url_wiki_content_prefix'));\r\n    const fallbackWikiContentUrl = getMdUrlFromWikiUrl(location.pathname, \"https://qouteall.fun/imm_ptl_wiki_copy\");\r\n    \r\n    const [wikiTitle, setWikiTitle] = useState('Loading...');\r\n    \r\n    const [wikiPageEntries, setWikiPageEntries] = useState([] as WikiPageEntry[]);\r\n    \r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    \r\n    const [isPageNotFound, setIsPageNotFound] = useState(false);\r\n    \r\n    const sidebarUrl = t('url_wiki_sidebar');\r\n    const {data: sideBarData, complete: sidebarComplete} = useEndPoint(sidebarUrl);\r\n    \r\n    useEffect(() => {\r\n        async function doParseLeftbar() {\r\n            if (sideBarData === null) {\r\n                return;\r\n            }\r\n            \r\n            const node = await myParseMarkdownAsync({children: sideBarData as unknown as string});\r\n            \r\n            let newPageEntries: Array<WikiPageEntry> = [];\r\n            parseWikiPageEntries(newPageEntries, node);\r\n            \r\n            setWikiPageEntries(newPageEntries);\r\n            \r\n            let result = newPageEntries.find(entry =>\r\n                getLocalWikiUrlFromGithubWikiUrl(entry.url) === location.pathname\r\n            );\r\n            \r\n            if (result) {\r\n                setIsPageNotFound(false);\r\n                setWikiTitle(result.title);\r\n            } else {\r\n                setIsPageNotFound(true);\r\n            }\r\n        }\r\n        \r\n        doParseLeftbar();\r\n    }, [location.pathname, sidebarComplete]);\r\n    \r\n    const leftBarComponent = <WikiToSideBarContext.Provider value={{\r\n        onTermClicked: () => setIsDrawerOpen(false)\r\n    }}>\r\n        <Typography variant='h5' style={{margin: 10, marginBottom: 0, marginLeft: 15}}>\r\n            {t('Pages')}\r\n        </Typography>\r\n        <Divider style={{margin: 10}}/>\r\n        \r\n        <List component='nav' style={{maxWidth: '80vw'}}>\r\n            {\r\n                sidebarComplete ?\r\n                    wikiPageEntries.map(entry =>\r\n                        <MySidebarLink url={entry.url} children={entry.title} key={entry.url}/>\r\n                    )\r\n                    : <CircularProgress/>\r\n            }\r\n        </List>\r\n    </WikiToSideBarContext.Provider>;\r\n    \r\n    const leftBarOnMobile = <>\r\n        <Drawer anchor='left' open={isDrawerOpen} onClose={\r\n            () => setIsDrawerOpen(false)\r\n        } style={{}}>\r\n            {leftBarComponent}\r\n        </Drawer>\r\n        \r\n        {/*render to make the effect trigger and set the wiki title.\r\n         It's a workaround and will be refactored*/}\r\n        {!isDrawerOpen && <div style={{display: \"none\"}}>\r\n            {leftBarComponent}\r\n        </div>}\r\n    </>;\r\n    \r\n    const leftBarOnPC = <div style={{\r\n        // position: 'sticky', top: 0,\r\n        minWidth: '20vw', maxWidth: '20vw'\r\n    }} className='My-Sticky'>{leftBarComponent}</div>;\r\n    \r\n    const scrollDomRef = useRef(null);\r\n    \r\n    const rightBarScrollRef = useRef(null as (null | HTMLDivElement));\r\n    \r\n    const {\r\n        wikiContentComponent: wikiContentComponent,\r\n        rightBarComponent: rightBarComponent,\r\n        updateScrollFunc: updateScrollFunc\r\n    } = useWikiContent(\r\n        // @ts-ignore\r\n        wikiContentUrl, wikiMarkdownRenderers, [gfm], scrollDomRef,\r\n        fallbackWikiContentUrl,\r\n        rightBarScrollRef\r\n    );\r\n    \r\n    const scrollTimerRef = useRef(null as any);\r\n    \r\n    const isVerticalMobile = getIsVerticalMobile();\r\n    return <div className='My-Page' style={{\r\n        display: 'flex', flexDirection: 'column'\r\n    }}>\r\n        <MyBanner text={t('Immersive Portals Wiki')} color='#9500ae'\r\n                  pageIconPath={getPublicResourcePath('/immptl.png')}>\r\n            {isVerticalMobile &&\r\n            <IconButton onClick={() => setIsDrawerOpen(!isDrawerOpen)}>\r\n                <MenuIcon style={{color: 'white'}}/>\r\n            </IconButton>}\r\n        </MyBanner>\r\n        \r\n        <div style={{\r\n            display: 'flex', flexDirection: 'row', alignItems: \"flex-start\",\r\n            overflowY: 'auto',\r\n            minHeight: 0, flexBasis: 0, flexGrow: 1\r\n        }} onScroll={() => {\r\n            if (scrollTimerRef.current) {\r\n                clearTimeout(scrollTimerRef.current);\r\n            }\r\n            \r\n            scrollTimerRef.current = setTimeout(updateScrollFunc, 300);\r\n        }} ref={scrollDomRef}>\r\n            {isVerticalMobile ? leftBarOnMobile : leftBarOnPC}\r\n            \r\n            <div style={{\r\n                margin: 0, padding: 20, flexGrow: 1,\r\n                minWidth: 0, flexBasis: 0\r\n            }} ref={rightBarScrollRef}>\r\n                <Typography variant='h4'>{wikiTitle}</Typography>\r\n                <Divider style={{margin: 10}}/>\r\n                {isPageNotFound ? 'Page Not Found' : wikiContentComponent}\r\n            </div>\r\n            \r\n            {!isVerticalMobile && <div ref={rightBarScrollRef} style={{\r\n                margin: 0, minWidth: '20vw', maxWidth: '20vw',\r\n                alignSelf: 'stretch', overflowY: 'auto',\r\n            }} className='My-Sticky'>\r\n                <Typography variant='h5' style={{margin: 10, marginBottom: 0}}>\r\n                    {t('Contents')}\r\n                </Typography>\r\n                <Divider style={{margin: 10}}/>\r\n                {rightBarComponent}\r\n            </div>}\r\n        \r\n        \r\n        </div>\r\n    \r\n    </div>;\r\n}","import React, {Suspense, useEffect, useRef, useState} from 'react';\r\nimport {Route, Switch, useLocation} from \"react-router-dom\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport {IndexPage} from \"./pages/IndexPage\";\r\nimport {IPPage} from \"./pages/IPPage\";\r\nimport './App.css'\r\nimport {IPWikiPage} from \"./pages/wiki/WikiPage\";\r\nimport {MyBanner} from \"./pages/MyBanner\";\r\nimport {Collapse} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport function TestPage() {\r\n    const [opened, setOpened] = useState(false);\r\n    \r\n    return <div className='My-Page'>\r\n        <MyBanner text={\"test\"} color={'black'} pageIconPath={''}/>\r\n        \r\n        <Collapse in={true}>\r\n            <p>aaa</p>\r\n            {opened&&<p>bbb</p>}\r\n        </Collapse>\r\n        \r\n        <Button onClick={()=>setOpened(!opened)}>h</Button>\r\n    </div>\r\n}\r\n\r\nexport function AnimatedPages() {\r\n    let location = useLocation();\r\n    \r\n    let refMouseX = useRef(0);\r\n    let refMouseY = useRef(0);\r\n    \r\n    useEffect(() => {\r\n        let root = document.documentElement;\r\n        \r\n        let listener = (e: any) => {\r\n            refMouseX.current = e.clientX;\r\n            refMouseY.current = e.clientY;\r\n            // root.style.setProperty('--mouse-x', e.clientX + \"px\");\r\n            // root.style.setProperty('--mouse-y', e.clientY + \"px\");\r\n        };\r\n        root.addEventListener(\"mousemove\", listener);\r\n        \r\n        return () => {\r\n            root.removeEventListener(\"mousemove\", listener);\r\n        }\r\n    }, []);\r\n    \r\n    document.documentElement.style.setProperty('--mouse-x', refMouseX.current + 'px');\r\n    document.documentElement.style.setProperty('--mouse-y', refMouseY.current + 'px');\r\n    \r\n    return (\r\n        <Suspense fallback={'loading'}>\r\n            <TransitionGroup>\r\n                <CSSTransition\r\n                    key={location.pathname}\r\n                    classNames=\"fade\"\r\n                    timeout={1000}\r\n                >\r\n                    <Switch location={location}>\r\n                        <Route path='/' exact>\r\n                            <IndexPage/>\r\n                        </Route>\r\n                        <Route path='/immptl/' exact>\r\n                            <IPPage/>\r\n                        </Route>\r\n                        <Route path='/immptl/wiki/'>\r\n                            <IPWikiPage/>\r\n                        </Route>\r\n                        <Route path='/test'>\r\n                            <TestPage/>\r\n                        </Route>\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </Suspense>\r\n    \r\n    \r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {AnimatedPages} from \"./AnimatedPages\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <AnimatedPages/>\r\n\r\n                {/*<Route exact path='/'>*/}\r\n                {/*    <Redirect to='/main'/>*/}\r\n                {/*</Route>*/}\r\n                {/*<Route path='*'>*/}\r\n                {/*   */}\r\n                {/*</Route>*/}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './i18n'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}