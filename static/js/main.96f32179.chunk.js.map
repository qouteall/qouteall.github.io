{"version":3,"sources":["i18n.ts","my_util/Util.tsx","pages/MyBanner.tsx","pages/IndexPage.tsx","pages/IPDownload.tsx","pages/IPPage.tsx","pages/TestAnimation.tsx","pages/wiki/WikiHeading.tsx","pages/wiki/WikiContent.tsx","pages/wiki/WikiSidebar.tsx","pages/wiki/WikiSearching.tsx","pages/wiki/WikiPage.tsx","AnimatedPages.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","react","gfm","require","MyButton","props","Button","style","textTransform","variant","onClick","href","children","useEndPoint","url","useState","data","complete","pending","error","res","setRes","useEffect","unmounted","Axios","then","catch","getCurrentLanguage","currLanguage","i18next","language","undefined","notEmpty","value","MyImage","useTranslation","t","loaded","setLoaded","position","src","onLoad","maxWidth","minHeight","alt","onError","baseMarkdownRenderers","image","a","paragraph","marginTop","marginBottom","heading","level","Typography","fontSize","MyMarkdown","className","plugins","renderers","MyRemoteMarkdown","resultData","getIsVerticalMobile","window","innerHeight","innerWidth","getPublicResourcePath","path","process","getStringBetween","str","before","after","i","indexOf","j","length","substr","supportedLanguages","languageName","LanguageSelector","currLanguageDistrict","hyphenIndex","getCurrentLanguageDistrict","React","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","event","currentTarget","color","marginLeft","find","entry","Menu","id","keepMounted","open","Boolean","onClose","map","MenuItem","changeLanguage","MyBanner","location","useLocation","history","useHistory","document","title","text","getElementById","pageIconPath","AppBar","sticky","backgroundColor","margin","padding","top","Toolbar","currPath","pathname","lastIndexOf","push","flexGrow","IndexPage","cardStyle","Card","square","elevation","CardActionArea","display","flexDirection","justifyContent","background","width","getModVersionFromModJarName","modJarName","DownloadTerm","expandIcon","downloadUrl","isPreRelease","modVersion","AccordionDetails","alignItems","upgradeInfo","publishTime","IPDownload","loading","setLoading","totalReleaseInfo","setTotalReleaseInfo","pageIndex","currentInfos","infos","console","log","concat","Promise","resolve","setTimeout","doDownloadTotalReleaseInfo","toDisplay","releaseInfo","modJarAssets","assets","filter","asset","name","publishDate","published_at","mcVersion","browser_download_url","body","prerelease","downloadCount","download_count","groupedByMcVersion","_","groupBy","r","toPairsIn","pair","termList","firstRelease","findIndex","term","splice","IPFeatures","IPPage","downloadSectionRef","useRef","spacing","flexWrap","marginRight","alignSelf","flexBasis","minWidth","current","scrollIntoView","behavior","to","textDecoration","ref","MyClippingCollapse","state","setState","domRef","clipPath","contentHeight","clientHeight","num","shown","duration","transition","WikiContextForHeading","createContext","isMatureRef","getHeadingColor","headingSelectedColor","WikiHeading","myRef","headingHash","node","myHeadingHash","useContext","selectedByUrl","hash","scrollFunc","y","getBoundingClientRect","outerHeight","timer","clearTimeout","getHeadingFontSize","e","left","right","bottom","zIndex","flexShrink","Object","keys","defaultRenderers","isHeading","type","isHeadingWithContent","obj","myType","toRemoveFromHash","headingTextToHash","toLowerCase","replace","produceHeadingHash","headingNode","joined","n","join","assignedHash","HeadingHierarchyParser","c","currIndex","headingDiscriminatorNumbers","this","Map","headingIndex","findIndexFrom","result","slice","minDepth","base","parseNonHeadingContents","isEnded","currHeading","currDepth","depth","remaining","parseHierarchy","originalHeadingHash","number","get","discriminatedHeadingHash","set","headingElement","contents","extractHeadingContentGroup","getRendererProps","tree","xtend","definitions","getDefinitions","myParseMarkdownAsync","source","processor","unified","parse","run","wrapTableRows","addListMetadata","naiveHtml","RightBarSection","opened","setOpened","selected","setSelected","item","hasContent","w","viewed","outerSelectedHash","setOuterSelected","onViewed","s","removeAssignedHash","headingColor","Fragment","ListItem","button","paddingLeft","layer","onTitleClick","ExpandLess","Collapse","in","timeout","List","dense","index","cond","getHeadingRefs","hierarchy","forEach","element","FlatWikiSection","Provider","astToReact","root","renderOptions","MemoedFlatWikiSection","memo","MemoedRightBarSection","useWikiContent","contentUrl","scrollDomRef","fallbackUrl","rightBarScrollRef","reactMarkdownProps","setTree","errorLoading","setErrorLoading","isAwaitingTranslation","setIsAwaitingTranslation","rightBarEnabled","setRightBarEnabled","hierarchyRef","renderPropsRef","markdownResult","renderer","parsedMarkdown","doParseWikiContent","rendererProps","viewingSectionHash","setViewingSectionHash","wikiContents","enableSectionUpdate","timerRef","headingRefs","updateScrollMemoed","useCallback","active","scrollTop","scrollHeight","screenHeight","documentElement","scrollPosition","offsetTop","titles","v","termDom","termY","offset","scrollTo","wikiContentComponent","rightBarComponent","updateScrollFunc","WikiToSideBarContext","onTermClicked","getLocalWikiUrlFromGithubWikiUrl","githubWikiUrl","MySidebarLink","localUrl","context","MyLinkInWiki","targetLink","localWikiUrlFromGithubWikiUrl","octokit","Octokit","searchAndFindCorrelatedFiles","keyword","githubRepo","request","q","status","Error","items","paths","SearchingContext","onClicked","isFileIncludedInSearch","filePathInRepo","fileLanguage","startsWith","SearchingResultSection","link","filePath","slashIndex","dotIndex","filePathToPagePath","wikiMarkdownRenderers","previewText","SearchingResultFileEntry","sectionDatas","setSectionDatas","fileContent","occurences","caseSensitive","keywordLen","startIndex","indices","getIndicesOf","lastLineBreakIndex","lineBreakIndexBehind","lineBreakIndexFront","poundIndex","headingEndIndex","coerceHashMarkIndex","trimStart","extractSearchingSectionDatas","SearchingDialogComponent","setKeyword","currState","setCurrState","filePaths","setFilePaths","filteredPaths","doSearch","doSearchAsync","Dialog","enabled","close","fullWidth","DialogTitle","TextField","autoFocus","onChange","target","onKeyUp","key","getMdUrlFromWikiUrl","head","innerPath","b","getStringAfter","table","Table","tableHead","TableHead","tableRow","TableRow","tableBody","TableBody","tableCell","TableCell","code","overflowX","inlineCode","parseWikiPageEntries","newEntry","IPWikiPage","wikiContentUrl","fallbackWikiContentUrl","wikiTitle","setWikiTitle","wikiPageEntries","setWikiPageEntries","isDrawerOpen","setIsDrawerOpen","isPageNotFound","setIsPageNotFound","sideBarData","sidebarComplete","isSearchingDialogShown","setSearchingDialogShown","newPageEntries","doParseLeftbar","leftBarComponent","Divider","component","leftBarOnMobile","Drawer","anchor","leftBarOnPC","overflowY","scrollTimerRef","isVerticalMobile","IconButton","onScroll","TestPage","doIt","AnimatedPages","refMouseX","refMouseY","listener","clientX","clientY","addEventListener","removeEventListener","setProperty","fallback","TransitionGroup","CSSTransition","classNames","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.96f32179.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport {initReactI18next} from \"react-i18next\";\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\n\r\ni18n\r\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n    // learn more: https://github.com/i18next/i18next-http-backend\r\n    .use(Backend)\r\n\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector)\r\n\r\n    .use(initReactI18next)\r\n\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        // detection: detectorOptions,\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n\r\n        react: {\r\n            // useSuspense: false\r\n        }\r\n    });\r\n\r\n// // catch the event and make changes accordingly\r\n// i18n.on('languageChanged', function(lng) {\r\n//\r\n// });\r\n\r\nexport default i18n;","import React, {DOMElement, useEffect, useRef, useState} from \"react\";\r\nimport {Button, Collapse} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport i18next from \"i18next\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport {useTranslation} from \"react-i18next\";\r\nconst gfm = require('remark-gfm')\r\n\r\nexport function MyButton(props: { children: any, style?: React.CSSProperties, onClick?: any, href?: any }) {\r\n    return <Button style={{\r\n        textTransform: 'none', ...props.style\r\n    }} variant={\"contained\"} onClick={props.onClick} href={props.href}>{props.children}</Button>;\r\n}\r\n\r\nexport function useEndPoint(url: string) {\r\n    const [res, setRes] = useState({\r\n        data: null,\r\n        complete: false,\r\n        pending: false,\r\n        error: false\r\n    });\r\n    useEffect(\r\n        () => {\r\n            let unmounted = false;\r\n            \r\n            setRes({\r\n                data: null,\r\n                pending: true,\r\n                error: false,\r\n                complete: false\r\n            });\r\n            Axios({url: url})\r\n                .then(res => {\r\n                    if (unmounted) return;\r\n                    setRes({\r\n                        data: res.data,\r\n                        pending: false,\r\n                        error: false,\r\n                        complete: true\r\n                    });\r\n                },)\r\n                .catch(() => {\r\n                    if (unmounted) return;\r\n                    setRes({\r\n                        data: null,\r\n                        pending: false,\r\n                        error: true,\r\n                        complete: true\r\n                    });\r\n                });\r\n            \r\n            return () => {\r\n                unmounted = true;\r\n            }\r\n        },\r\n        [url]\r\n    );\r\n    return res;\r\n}\r\n\r\nexport function getCurrentLanguage() {\r\n    var currLanguage = i18next.language;\r\n    \r\n    if (currLanguage === undefined) {\r\n        currLanguage = 'en';\r\n    }\r\n    return currLanguage;\r\n}\r\n\r\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\r\n    return value !== null && value !== undefined;\r\n}\r\n\r\nexport function swapInArray<TValue>(array: TValue[], i1: number, i2: number) {\r\n    var temp = array[i1];\r\n    array[i1] = array[i2];\r\n    array[i2] = temp;\r\n}\r\n\r\n\r\n\r\nexport function MyImage(props: { url: string }) {\r\n    \r\n    const {t, i18n} = useTranslation();\r\n    \r\n    const [loaded, setLoaded] = useState(false);\r\n    \r\n    return <div style={{position: \"relative\"}}>\r\n        {!loaded && <div style={{position: \"absolute\"}}>\r\n            <CircularProgress/>\r\n            <p>{t('image_loading')}</p>\r\n        </div>}\r\n        \r\n        <img src={props.url} onLoad={() => setLoaded(true)} style={{\r\n            maxWidth: '100%', minHeight: 100\r\n        }} alt={'Fails to load ' + props.url} onError={() => setLoaded(true)}/>\r\n        \r\n    </div>;\r\n}\r\n\r\nexport const baseMarkdownRenderers = {\r\n    image: (a: any) => {\r\n        return <MyImage url={a.src}/>\r\n    },\r\n    paragraph: (a: any) => {\r\n        return <div style={{marginTop: 10, marginBottom: 10}}>{a.children}</div>\r\n    },\r\n    heading: (a: any) => {\r\n        // console.log(a)\r\n        const level: any = a.level;\r\n        \r\n        return <Typography style={{fontSize: 40 - level * 5}}>{a.children}</Typography>\r\n    }\r\n}\r\n\r\nexport function MyMarkdown(props: { children: any }) {\r\n    return <ReactMarkdown className='My-MD' plugins={[gfm]} renderers={baseMarkdownRenderers}>\r\n        {props.children}\r\n    </ReactMarkdown>\r\n}\r\n\r\nexport function MyRemoteMarkdown(props: { url: string }) {\r\n    const {data: resultData, complete: resultComplete} = useEndPoint(props.url);\r\n    \r\n    return resultComplete ? (<MyMarkdown children={resultData || 'error loading ' + props.url}/>)\r\n        : (<CircularProgress/>)\r\n}\r\n\r\nexport function getStringAfter(a: string, b: string) {\r\n    var i = a.lastIndexOf(b);\r\n    if (i === -1) {\r\n        return a;\r\n    }\r\n    return a.substr(i + b.length);\r\n}\r\n\r\nexport function getIsVerticalMobile() {\r\n    // return true\r\n    return window.innerHeight > window.innerWidth;\r\n}\r\n\r\nexport function getPublicResourcePath(path: string) {\r\n    return process.env.PUBLIC_URL + path;\r\n}\r\n\r\nexport function getStringBetween(str: string, before: string, after: string) {\r\n    let i = str.indexOf(before);\r\n    \r\n    if (i === -1) {\r\n        return ''\r\n    }\r\n    \r\n    let j = str.indexOf(after, i + before.length);\r\n    \r\n    if (j === -1) {\r\n        return '';\r\n    }\r\n    \r\n    return str.substr(i + before.length, j - i - before.length);\r\n}\r\n","import {Menu, MenuItem, Select} from \"@material-ui/core\";\r\nimport React, {useEffect} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport i18next from \"i18next\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport {getCurrentLanguage, getIsVerticalMobile, getStringAfter} from \"../my_util/Util\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction getCurrentLanguageDistrict() {\r\n    let currLanguage = getCurrentLanguage();\r\n    \r\n    const hyphenIndex = currLanguage.indexOf('-');\r\n    if (hyphenIndex !== -1) {\r\n        currLanguage = currLanguage.substr(0, hyphenIndex);\r\n    }\r\n    return currLanguage;\r\n}\r\n\r\ninterface LanguageEntry {\r\n    language: string,\r\n    languageName: string\r\n}\r\n\r\nconst supportedLanguages: Array<LanguageEntry> = [\r\n    {language: 'en', languageName: 'English'},\r\n    {language: 'zh', languageName: '简体中文'},\r\n]\r\n\r\nfunction LanguageSelector(props: {}) {\r\n    const currLanguageDistrict = getCurrentLanguageDistrict();\r\n    \r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null as null | HTMLElement);\r\n    \r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    \r\n    return <>\r\n        <Button aria-controls=\"language-menu\" aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                style={{color: 'white'}}>\r\n            <TranslateIcon/>\r\n            {getIsVerticalMobile() ? undefined :\r\n                <Typography style={{marginLeft: 5, textTransform: 'none'}}>{\r\n                    supportedLanguages.find(entry => entry.language === currLanguageDistrict)?.languageName\r\n                }</Typography>}\r\n        </Button>\r\n        <Menu\r\n            id=\"language-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n        >\r\n            {supportedLanguages.map(entry =>\r\n                <MenuItem value={entry.language} key={entry.language} onClick={() => {\r\n                    i18next.changeLanguage(entry.language);\r\n                    handleClose();\r\n                }}>{entry.languageName}</MenuItem>)}\r\n        </Menu>\r\n    </>\r\n}\r\n\r\nexport function MyBanner(props: {\r\n    text: string, color: string, children?: any,\r\n    sticky?: boolean, pageIconPath: string\r\n}) {\r\n    const location = useLocation();\r\n    \r\n    let history = useHistory();\r\n    \r\n    \r\n    // console.log(currLanguage)\r\n    \r\n    useEffect(() => {\r\n        document.title = props.text;\r\n        // @ts-ignore\r\n        document.getElementById('page_icon').href = props.pageIconPath;\r\n    }, [props.text]);\r\n    \r\n    return <AppBar style={{\r\n        position: props.sticky ? 'sticky' : 'relative', backgroundColor: props.color,\r\n        margin: 0, padding: 0,\r\n        top: props.sticky ? 0 : undefined\r\n    }}>\r\n        <Toolbar>\r\n            {props.children}\r\n            <Button onClick={() => {\r\n                const currPath = location.pathname;\r\n                const i = currPath.lastIndexOf('/');\r\n                if (i !== -1) {\r\n                    history.push(currPath.substr(0, i));\r\n                }\r\n            }} style={{textTransform: 'none'}}>\r\n                <Typography variant='h6' style={{color: 'white'}}>{props.text}</Typography>\r\n            </Button>\r\n            \r\n            <div style={{\r\n                flexGrow: 1\r\n            }}/>\r\n            \r\n            <LanguageSelector/>\r\n        </Toolbar>\r\n    \r\n    \r\n    </AppBar>;\r\n}","import React, {Component, CSSProperties, useState} from \"react\";\r\nimport {createStyles, Grid, Theme} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {getIsVerticalMobile, getPublicResourcePath, MyButton} from \"../my_util/Util\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport {MyClippingCollapse} from \"./TestAnimation\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {MyBanner} from \"./MyBanner\";\r\n\r\nimport {useTranslation} from 'react-i18next';\r\nimport {TFunction} from \"i18next\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\n\r\nexport function IndexPage(props: {}) {\r\n    \r\n    let history = useHistory();\r\n    \r\n    \r\n    let {t, i18n} = useTranslation();\r\n    \r\n    const cardStyle: CSSProperties = getIsVerticalMobile() ? {margin: 20} : {\r\n        margin: 20, marginLeft: 100, marginTop: 50\r\n    };\r\n    \r\n    return <div className=\"My-Page\">\r\n        <MyBanner text='qouteall' color='#ff4569' pageIconPath='/benzene.jpg'/>\r\n        <div className=\"App-header\">\r\n            <div className=\"Mask\"/>\r\n            <div className=\"Right-section\">\r\n                \r\n                <p className=\"Header-text\">\r\n                    qouteall\r\n                </p>\r\n                <p className=\"Sub-Header\">\r\n                    {t('main_desc')}\r\n                </p>\r\n            </div>\r\n            \r\n            <img src={getPublicResourcePath('/headerImage.png')} className=\"Header-image\" alt=\"what\"/>\r\n        \r\n        \r\n        </div>\r\n        \r\n        <div style={cardStyle}>\r\n            <Card style={{maxWidth: '80vh'}} square={false} elevation={10}>\r\n                <CardActionArea style={{\r\n                    display: 'flex', flexDirection: 'row', justifyContent: 'flex-start',\r\n                    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n                }} onClick={() => {\r\n                    history.push('/immptl')\r\n                }}>\r\n                    <img src={getPublicResourcePath('/immptl.png')} alt='i am alt' style={{width: 100}}/>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'flex-start',\r\n                        marginLeft: 20\r\n                    }}>\r\n                        <label style={{\r\n                            textTransform: 'none',\r\n                            color: 'black',\r\n                            fontSize: 'calc(8px + 2vmin)'\r\n                        }}>\r\n                            {t(\"immptl\")}\r\n                        </label>\r\n                        <label style={{\r\n                            textTransform: 'none',\r\n                            color: 'black',\r\n                            fontSize: 'calc(5px + 2vmin)',\r\n                        }}>\r\n                            {t(\"immptl_desc\")}\r\n                        </label>\r\n                    </div>\r\n                </CardActionArea>\r\n            </Card>\r\n        </div>\r\n    </div>;\r\n    \r\n}\r\n","import Accordion from \"@material-ui/core/Accordion/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary/AccordionSummary\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {getStringBetween, MyButton, notEmpty, useEndPoint} from \"../my_util/Util\";\r\nimport {AccordionDetails, Typography} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport _, {Dictionary} from \"lodash\";\r\nimport Axios from \"axios\";\r\n\r\ninterface GAsset {\r\n    browser_download_url: string;\r\n    name: string;//filename\r\n    download_count: number;\r\n}\r\n\r\ninterface GReleaseInfo {\r\n    assets: GAsset[];\r\n    tag_name: string;\r\n    body: string;\r\n    prerelease: boolean;\r\n    published_at: string;\r\n}\r\n\r\n// deprecated because firefox doesn't support it\r\n// var findModVersion = new RegExp('(?<=immersive\\-portals\\-).+?(?=\\-)');\r\n// var findMcVersion = new RegExp('(?<=mc).+?(?=\\-)');\r\n\r\n\r\nfunction getModVersionFromModJarName(modJarName: string) {\r\n    const front = 'immersive-portals-';\r\n    const after = '-';\r\n    \r\n    return getStringBetween(modJarName, front, after);\r\n    \r\n}\r\n\r\nfunction getMcVersionFromModJarName(modJarName: string) {\r\n    return getStringBetween(modJarName, 'mc', '-fabric');\r\n    \r\n}\r\n\r\ninterface ToDisplay {\r\n    mcVersion: string;\r\n    modVersion: string;\r\n    downloadUrl: string;\r\n    upgradeInfo: string;\r\n    isPreRelease: boolean;\r\n    publishTime: string;\r\n    downloadCount: number;\r\n}\r\n\r\nfunction DownloadTerm(props: { data: ToDisplay }) {\r\n    let {t, i18n} = useTranslation();\r\n    \r\n    return <Accordion key={props.data.downloadUrl} style={{backgroundColor: '#80cbc4', color: 'black'}}>\r\n        <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon/>}\r\n            id={props.data.downloadUrl}\r\n        >\r\n            <Typography>{\r\n                (props.data.isPreRelease ? '[Pre-release] ' : '') + props.data.modVersion\r\n            }</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\r\n            <Typography>{props.data.upgradeInfo}</Typography>\r\n            <div style={{margin: 10}}/>\r\n            <MyButton onClick={() => {\r\n                window.open(props.data.downloadUrl, '_blank')\r\n            }}>{t('Download')}</MyButton>\r\n            <div style={{margin: 10}}/>\r\n            <Typography variant='caption'>\r\n                {'Published at ' + props.data.publishTime}\r\n            </Typography>\r\n            {/*<Typography variant='caption'>*/}\r\n            {/*    {'Download count (GitHub): ' + props.data.downloadCount}*/}\r\n            {/*</Typography>*/}\r\n        </AccordionDetails>\r\n    </Accordion>;\r\n}\r\n\r\nexport function IPDownload(props: {}) {\r\n    let {t, i18n} = useTranslation();\r\n    \r\n    const [loading, setLoading]=useState(true)\r\n    const [totalReleaseInfo, setTotalReleaseInfo] = useState([] as GReleaseInfo[])\r\n    \r\n    useEffect(() => {\r\n        async function doDownloadTotalReleaseInfo() {\r\n            var pageIndex = 1\r\n            var currentInfos = [] as GReleaseInfo[]\r\n            while (true) {\r\n                let url = \"https://api.github.com/repos/qouteall/immersiveportalsmod/releases?page=\" + pageIndex\r\n                const res = await Axios({url: url})\r\n                \r\n                const infos = res.data as unknown as GReleaseInfo[]\r\n    \r\n                console.log(pageIndex)\r\n                console.log(infos)\r\n                \r\n                setLoading(false)\r\n                \r\n                if (infos.length === 0) {\r\n                    break\r\n                }\r\n                \r\n                currentInfos = currentInfos.concat(infos)\r\n                setTotalReleaseInfo(currentInfos)\r\n                \r\n                pageIndex++\r\n    \r\n                // wait for 0.5 seconds\r\n                await new Promise(resolve => setTimeout(resolve, 1000))\r\n            }\r\n        }\r\n        \r\n        doDownloadTotalReleaseInfo();\r\n    }, [])\r\n    \r\n    if (loading) {\r\n        return <CircularProgress/>\r\n    }\r\n    \r\n    const toDisplay: ToDisplay[] = totalReleaseInfo\r\n        .map((releaseInfo: GReleaseInfo) => {\r\n            var modJarAssets = releaseInfo.assets.filter(asset => asset.name.indexOf('fabric') >= 0);\r\n            if (modJarAssets.length === 0) {\r\n                return null;\r\n            }\r\n            var asset = modJarAssets[0];\r\n            \r\n            const publishDate = releaseInfo.published_at.substr(\r\n                0, releaseInfo.published_at.indexOf('T')\r\n            );\r\n            \r\n            return {\r\n                mcVersion: getMcVersionFromModJarName(asset.name),\r\n                modVersion: getModVersionFromModJarName(asset.name),\r\n                downloadUrl: asset.browser_download_url,\r\n                upgradeInfo: releaseInfo.body,\r\n                isPreRelease: releaseInfo.prerelease,\r\n                publishTime: publishDate,\r\n                downloadCount: asset.download_count\r\n            } as ToDisplay;\r\n        })\r\n        .filter(notEmpty);\r\n    \r\n    const groupedByMcVersion: Dictionary<ToDisplay[]> = _.groupBy(\r\n        toDisplay,\r\n        (r: ToDisplay) => r.mcVersion\r\n    );\r\n    \r\n    \r\n    return <div>\r\n        {_.toPairsIn(groupedByMcVersion).map((pair) => {\r\n            const [mcVersion, termList] = pair;\r\n            \r\n            const firstRelease: number = termList.findIndex((term) => !term.isPreRelease);\r\n            if (firstRelease !== -1) {\r\n                //remove the first release and insert into the first\r\n                termList.splice(0, 0, ...(termList.splice(firstRelease, 1)))\r\n            }\r\n            \r\n            return <Accordion key={pair[0]} style={{backgroundColor: '#ffd699', color: 'black'}}>\r\n                <AccordionSummary>\r\n                    {mcVersion}\r\n                </AccordionSummary>\r\n                \r\n                <AccordionDetails>\r\n                    <div style={{width: '100%'}}>\r\n                        {termList.map(r => <DownloadTerm data={r} key={r.downloadUrl}/>)}\r\n                    </div>\r\n                </AccordionDetails>\r\n            </Accordion>;\r\n        })}\r\n    </div>\r\n}","import React, {useRef} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {MyBanner} from \"./MyBanner\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {getIsVerticalMobile, getPublicResourcePath, MyButton, MyRemoteMarkdown} from \"../my_util/Util\";\r\nimport {IPDownload} from \"./IPDownload\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nexport function IPFeatures(props: {}) {\r\n    let {t, i18n} = useTranslation();\r\n    \r\n    const path = t('url_ip_features');\r\n    \r\n    return <MyRemoteMarkdown url={path}/>\r\n    \r\n}\r\n\r\nexport function IPPage(props: {}) {\r\n    let history = useHistory();\r\n    \r\n    let {t, i18n} = useTranslation();\r\n    \r\n    const path = t('url_ip');\r\n    \r\n    // const {data: resultData, complete: resultComplete} = useEndPoint(path);\r\n    \r\n    const downloadSectionRef = useRef(null)\r\n    \r\n    const executeScroll = () => {\r\n        // @ts-ignore\r\n        downloadSectionRef.current.scrollIntoView({behavior: 'smooth'});\r\n    }\r\n    \r\n    const spacing = getIsVerticalMobile() ? 15 : 30;\r\n    \r\n    // const background = 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)';\r\n    \r\n    const background = '#e8eaf6';\r\n    \r\n    return (\r\n        <div className='My-Page'>\r\n            <MyBanner text={t('Immersive Portals')} color='#9500ae'\r\n                      pageIconPath={getPublicResourcePath('/immptl.png')}/>\r\n            \r\n            <div style={{margin: spacing, display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\r\n                <Card style={{\r\n                    display: 'flex', flexDirection: 'row',\r\n                    justifyContent: 'flex-start', alignItems: 'center',\r\n                    flexWrap: \"wrap\",\r\n                    minHeight: '40vh',\r\n                    background: background,\r\n                    marginBottom: spacing\r\n                }} square={false} elevation={10}>\r\n                    \r\n                    <img src={getPublicResourcePath('/immptl.png')} alt='i am alt' style={{\r\n                        flexGrow: 0,\r\n                        width: 150,\r\n                        margin: 40,\r\n                        marginRight: 0,\r\n                        marginBottom: getIsVerticalMobile() ? 0 : 40\r\n                    }}/>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'space-between',\r\n                        alignSelf: 'stretch',\r\n                        margin: 40,\r\n                        // marginLeft: 0,\r\n                        marginBottom: 20,\r\n                        flexGrow: 1, flexBasis: 0, minWidth: '50vw'\r\n                    }}>\r\n                        \r\n                        <MyRemoteMarkdown url={path}/>\r\n                        \r\n                        <div style={{flexDirection: 'row', justifyContent: 'flex-start'}}>\r\n                            <MyButton style={{backgroundColor: '#35baf6', margin: 10}}\r\n                                      onClick={executeScroll}\r\n                            >\r\n                                {t('ip_download')}\r\n                            </MyButton>\r\n                            \r\n                            <Link to='/immptl/wiki' style={{textDecoration: 'none', color: 'black'}}>\r\n                                <MyButton style={{backgroundColor: '#35baf6', margin: 10}}>\r\n                                    {t('ip_wiki')}\r\n                                </MyButton>\r\n                            </Link>\r\n                            \r\n                            <MyButton style={{backgroundColor: '#35baf6', margin: 10}}\r\n                                      href='https://github.com/qouteall/ImmersivePortalsMod'\r\n                            >\r\n                                {t('Source')}\r\n                            </MyButton>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                </Card>\r\n                \r\n                \r\n                <Card style={{\r\n                    background: background,\r\n                    padding: 20,\r\n                    marginBottom: spacing\r\n                }} elevation={10}>\r\n                    <Typography variant='h6'>{t('Features')}</Typography>\r\n                    <IPFeatures/>\r\n                </Card>\r\n                \r\n                <Card style={{\r\n                    background: background,\r\n                    padding: 20,\r\n                    marginBottom: spacing\r\n                }} elevation={10} ref={downloadSectionRef}>\r\n                    <Typography variant='h5'>{t('ip_downloads')}</Typography>\r\n                    <Link to='immptl/wiki#how-to-install-immersive-portals-mod-fabric-version'>\r\n                        <p>{t('how_to_install')}</p>\r\n                    </Link>\r\n                    <Typography variant='body1'>{t('ip_download_desc')}</Typography>\r\n                    <IPDownload/>\r\n                    <a href='https://www.curseforge.com/minecraft/mc-mods/immersive-portals-mod'>\r\n                        <p>{t('ip_or_curseforge')}</p>\r\n                    </a>\r\n                </Card>\r\n            \r\n            </div>\r\n        \r\n        \r\n        </div>\r\n    );\r\n}","import React, {CSSProperties, useEffect, useRef, useState} from \"react\";\r\n\r\nimport {Transition} from 'react-transition-group';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport const MyClippingCollapse = (props: { shown: boolean, children: any, duration: number }) => {\r\n    const [state, setState] = useState(0);\r\n    \r\n    const domRef = useRef(null as null | HTMLDivElement);\r\n    \r\n    let clipPath: string = '';\r\n    if (state === 0) {\r\n        clipPath = `inset(0% 0% 100% 0%)`;\r\n    } else if (state === 1) {\r\n        let contentHeight = domRef.current?.clientHeight;\r\n        \r\n        if (!contentHeight) {\r\n            contentHeight = 100;\r\n        }\r\n        \r\n        let num = contentHeight - window.innerHeight;\r\n        \r\n        // console.log(num);\r\n        \r\n        if (num < 0) {\r\n            num = 0;\r\n        }\r\n        \r\n        clipPath = `inset(0px 0px ${num}px 0px)`;\r\n    } else if (state === 2) {\r\n        clipPath = 'unset';\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (props.shown) {\r\n            setState(1);\r\n            setTimeout(() => {\r\n                setState(2);\r\n            }, props.duration);\r\n        }\r\n    }, [props.shown]);\r\n    \r\n    return <div ref={domRef} style={{\r\n        transition: `clip-path ${props.duration}ms ease-in`,\r\n        clipPath: clipPath\r\n    }}>\r\n        {props.children}\r\n    </div>;\r\n};\r\n\r\nconst roundStyle = {\r\n    entering: {clipPath: 'circle(100%)',},\r\n    entered: {clipPath: 'circle(100%)',},\r\n    exiting: {clipPath: 'circle(0%)',},\r\n    exited: {clipPath: 'circle(0%)',},\r\n};\r\n\r\nexport const MyRoundAnimation = (props: { shown: boolean, children: any, duration: number }) => {\r\n    const defaultStyle = {\r\n        transition: `clip-path ${props.duration}ms ease-in`,\r\n    }\r\n    \r\n    return (\r\n        <Transition in={props.shown} timeout={props.duration}>\r\n            {state => {\r\n                // console.log(state)\r\n                return (\r\n                    <div style={{\r\n                        ...defaultStyle,\r\n                        // @ts-ignore\r\n                        ...roundStyle[state]\r\n                    }}>\r\n                        {props.children}\r\n                    </div>\r\n                );\r\n            }}\r\n        </Transition>\r\n    );\r\n};","import React, {MutableRefObject, useContext, useEffect, useRef} from \"react\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nexport const WikiContextForHeading = React.createContext({\r\n    isMatureRef: {current: true}\r\n})\r\n\r\nexport function getHeadingFontSize(level: number) {\r\n    let fontSize = 55;\r\n    \r\n    switch (level) {\r\n        case 1:\r\n            fontSize = 36\r\n            break\r\n        case 2:\r\n            fontSize = 32\r\n            break\r\n        case 3:\r\n            fontSize = 27\r\n            break\r\n        case 4:\r\n            fontSize = 22\r\n            break\r\n        case 5:\r\n            fontSize = 20\r\n            break\r\n    }\r\n    return fontSize;\r\n}\r\n\r\nexport function getHeadingColor(level: number) {\r\n    let background = \"#ed4b82\";\r\n    switch (level) {\r\n        case 1:\r\n            background = \"#4dabf5\"\r\n            break\r\n        case 2:\r\n            background = \"#00a152\"\r\n            break\r\n        case 3:\r\n            background = \"#ffac33\"\r\n            break\r\n        case 4:\r\n            background = \"#ed4b82\"\r\n            break\r\n        case 5:\r\n            background = \"#4dabf5\"\r\n            break\r\n    }\r\n    return background;\r\n}\r\n\r\nexport const headingSelectedColor = '#9c27b020';\r\n\r\nexport function WikiHeading(props: { level: number, children: any, node: any }) {\r\n    const myRef: React.MutableRefObject<any> = useRef()\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    \r\n    const headingHash = props.node.myHeadingHash;\r\n    \r\n    const context = useContext(WikiContextForHeading);\r\n    \r\n    const isMatureRef = context.isMatureRef;\r\n    \r\n    const selectedByUrl = location.hash === headingHash;\r\n    \r\n    useEffect(() => {\r\n        if (location.hash) {\r\n            const scrollFunc = () => {\r\n                if (myRef.current) {\r\n                    const y = myRef.current.getBoundingClientRect().y;\r\n                    if (y < 100 || y > (window.innerHeight || window.outerHeight)) {\r\n                        myRef.current.scrollIntoView({behavior: 'smooth'});\r\n                    }\r\n                }\r\n            };\r\n            \r\n            // console.log(headingHash)\r\n            if (selectedByUrl) {\r\n                if (isMatureRef.current) {\r\n                    scrollFunc()\r\n                } else {\r\n                    let timer = setTimeout(() => {\r\n                        scrollFunc();\r\n                    }, 1000);\r\n                    \r\n                    return () => {\r\n                        clearTimeout(timer);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [headingHash, location.hash])\r\n    \r\n    const level = props.level;\r\n    const fontSize = getHeadingFontSize(level);\r\n    const background = getHeadingColor(level);\r\n    \r\n    // console.log('what');\r\n    \r\n    return <div id={headingHash} style={{\r\n        display: \"flex\", flexDirection: \"row\", alignItems: \"stretch\",\r\n        position: 'relative'\r\n    }} onClick={(e) => {\r\n        history.push(headingHash);\r\n    }}>\r\n        <div style={{\r\n            position: 'absolute',\r\n            left: selectedByUrl ? 0 : '100%', right: 0, top: 0, bottom: 0,\r\n            transition: \"left 1000ms\",\r\n            background: headingSelectedColor,\r\n            zIndex: -1\r\n        }}/>\r\n        \r\n        <div style={{\r\n            display: \"inline-flex\", width: 5, background: background,\r\n            marginTop: 4, marginBottom: 4, marginRight: 10,\r\n            flexShrink: 0\r\n        }}/>\r\n        <Typography ref={myRef} style={{fontSize: fontSize}}>\r\n            {props.children}\r\n        </Typography>\r\n    \r\n    \r\n    </div>;\r\n}","import React, {\r\n    DOMElement,\r\n    MutableRefObject,\r\n    ReactElement,\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState\r\n} from \"react\";\r\nimport ReactMarkdown, {ReactMarkdownProps} from \"react-markdown\";\r\n\r\nimport xtend from \"xtend\";\r\n\r\nimport unified from \"unified\";\r\n\r\nimport parse from \"remark-parse\";\r\n\r\n// @ts-ignore\r\nimport naiveHtml from \"react-markdown/lib/plugins/naive-html\"\r\n\r\n// @ts-ignore\r\nimport addListMetadata from \"mdast-add-list-metadata\";\r\n\r\n// @ts-ignore\r\nimport astToReact from \"react-markdown/lib/ast-to-react\";\r\n\r\n// @ts-ignore\r\nimport wrapTableRows from \"react-markdown/lib/wrap-table-rows\";\r\n\r\n// @ts-ignore\r\nimport getDefinitions from \"react-markdown/lib/get-definitions\";\r\n\r\n// @ts-ignore\r\nimport defaultRenderers from \"react-markdown/lib/renderers\";\r\nimport _ from \"lodash/fp\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {CircularProgress, List} from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\r\nimport {getIsVerticalMobile, getStringBetween} from \"../../my_util/Util\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport Axios, {AxiosResponse} from \"axios\";\r\nimport AnimateHeight from \"react-animate-height\";\r\nimport {MyClippingCollapse} from \"../TestAnimation\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {getHeadingColor, WikiContextForHeading, headingSelectedColor} from \"./WikiHeading\";\r\nimport {removeAssignedHash} from \"./WikiPage\";\r\n\r\n// @ts-ignore\r\n\r\nvar allTypes = Object.keys(defaultRenderers);\r\n\r\ntype Content = Array<HeadingWithContent | Array<Content>>\r\n\r\ninterface HeadingWithContent {\r\n    myType: 'heading_with_content',\r\n    headingElement: any | null,//only the root has null heading\r\n    contents: Array<HeadingWithContent | any>\r\n}\r\n\r\nfunction isHeading(node: any) {\r\n    return node.type === 'heading';\r\n}\r\n\r\nfunction isHeadingWithContent(obj: any): obj is HeadingWithContent {\r\n    return obj.myType === 'heading_with_content';\r\n}\r\n\r\nconst toRemoveFromHash: RegExp = /[!\"#$%&'()*+,./:;<=>?@\\^`{|}~]/g\r\n\r\nexport function headingTextToHash(heading: string) {\r\n    return '#' + heading.toLowerCase().replace(/ /g, '-')\r\n        .replace(toRemoveFromHash, '');\r\n}\r\n\r\nfunction produceHeadingHash(headingNode: any): string {\r\n    // @ts-ignore\r\n    const joined: string = headingNode.children.map(n => n.value).join('');\r\n    \r\n    const assignedHash = getStringBetween(joined, '{#', '}');\r\n    if (assignedHash.length !== 0) {\r\n        return headingTextToHash(assignedHash);\r\n    }\r\n    \r\n    return headingTextToHash(joined);\r\n}\r\n\r\nclass HeadingHierarchyParser {\r\n    children: Array<any>;\r\n    currIndex: number;\r\n    headingDiscriminatorNumbers: Map<string, number>;\r\n    \r\n    constructor(c: Array<any>) {\r\n        this.children = c;\r\n        this.currIndex = 0;\r\n        this.headingDiscriminatorNumbers = new Map();\r\n    }\r\n    \r\n    isEnded(): boolean {\r\n        return this.currIndex >= this.children.length;\r\n    }\r\n    \r\n    parseNonHeadingContents(): Array<any> {\r\n        const headingIndex = _.findIndexFrom(isHeading, this.currIndex, this.children);\r\n        if (headingIndex === -1) {\r\n            const result = this.children.slice(this.currIndex);\r\n            this.currIndex = this.children.length;\r\n            return result;\r\n        }\r\n        const result = this.children.slice(this.currIndex, headingIndex);\r\n        this.currIndex = headingIndex;\r\n        return result;\r\n    }\r\n    \r\n    parseHierarchy(minDepth: number): Array<HeadingWithContent | any> {\r\n        const base: Array<HeadingWithContent | any> = this.parseNonHeadingContents();\r\n        \r\n        while (!this.isEnded()) {\r\n            const currHeading = this.children[this.currIndex];\r\n            const currDepth = currHeading.depth;\r\n            if (currDepth < minDepth) {\r\n                return base;\r\n            }\r\n            this.currIndex += 1;//swallow the header\r\n            \r\n            const remaining = this.parseHierarchy(currDepth + 1);\r\n            \r\n            const originalHeadingHash = produceHeadingHash(currHeading);\r\n            const number = this.headingDiscriminatorNumbers.get(originalHeadingHash);\r\n            let discriminatedHeadingHash;\r\n            if (number !== undefined) {\r\n                this.headingDiscriminatorNumbers.set(originalHeadingHash, number + 1);\r\n                discriminatedHeadingHash = originalHeadingHash + '-' + number;\r\n            } else {\r\n                this.headingDiscriminatorNumbers.set(originalHeadingHash, 1);\r\n                discriminatedHeadingHash = originalHeadingHash;\r\n            }\r\n            currHeading.myHeadingHash = discriminatedHeadingHash;\r\n            \r\n            base.push({myType: 'heading_with_content', headingElement: currHeading, contents: remaining});\r\n        }\r\n        \r\n        return base;\r\n    }\r\n    \r\n    parseDocument(): HeadingWithContent {\r\n        const contents = this.parseHierarchy(0);\r\n        \r\n        return {\r\n            myType: 'heading_with_content',\r\n            headingElement: null,//only the root has null heading\r\n            contents: contents\r\n        };\r\n    }\r\n}\r\n\r\nfunction extractHeadingContentGroup(children: Array<any>): Array<HeadingWithContent | any> {\r\n    \r\n    var result = new HeadingHierarchyParser(children).parseHierarchy(0);\r\n    \r\n    \r\n    return result;\r\n}\r\n\r\nfunction getRendererProps(props: ReactMarkdown.ReactMarkdownProps, tree: any): any {\r\n    var renderers = xtend(defaultRenderers, props.renderers);\r\n    \r\n    var renderProps = xtend(props, {\r\n        renderers: renderers,\r\n        definitions: getDefinitions(tree)\r\n    });\r\n    return renderProps;\r\n}\r\n\r\nexport async function myParseMarkdownAsync(props: ReactMarkdownProps) {\r\n    var src = props.source || props.children || '';\r\n    \r\n    var processor = unified().use(parse).use(props.plugins || []); // eslint-disable-next-line no-sync\r\n    \r\n    var tree = await processor.run(processor.parse(src));\r\n    \r\n    tree = wrapTableRows(tree);\r\n    \r\n    tree = addListMetadata()(tree);\r\n    \r\n    tree = naiveHtml(tree);\r\n    \r\n    // console.log(tree)\r\n    \r\n    return tree;\r\n}\r\n\r\nfunction RightBarSection(props: {\r\n    outerSelectedHash: string, item: HeadingWithContent, layer: number,\r\n    setOuterSelected: null | ((cond: boolean) => void),\r\n    onTitleClick: () => void,\r\n    onViewed: (termDom: HTMLDivElement) => void\r\n}) {\r\n    let [opened, setOpened] = useState(false);\r\n    let [selected, setSelected] = useState(false);\r\n    \r\n    const location = useLocation();\r\n    const history = useHistory()\r\n    \r\n    const item = props.item;\r\n    \r\n    const headingHash = item.headingElement.myHeadingHash;\r\n    \r\n    // console.log(headingHash);\r\n    \r\n    const hasContent = item.contents.findIndex(w => isHeadingWithContent(w)) !== -1;\r\n    \r\n    const domRef = useRef(null as (null | HTMLDivElement));\r\n    \r\n    useEffect(() => {\r\n        const viewed = props.outerSelectedHash === headingHash;\r\n        \r\n        setSelected(viewed);\r\n        \r\n        if (props.setOuterSelected) {\r\n            props.setOuterSelected(viewed);\r\n        }\r\n        \r\n        if (viewed) {\r\n            if (domRef.current) {\r\n                props.onViewed(domRef.current);\r\n            }\r\n        }\r\n    }, [headingHash, props.outerSelectedHash]);\r\n    \r\n    // @ts-ignore\r\n    let toDisplay: string = item.headingElement.children.map(s => s.value).join(' ');\r\n    \r\n    // remove for example {#hash}\r\n    toDisplay = removeAssignedHash(toDisplay);\r\n    \r\n    // cut if too long\r\n    if (toDisplay.length > 60) {\r\n        toDisplay = toDisplay.substr(0, 60) + '...';\r\n    }\r\n    \r\n    const headingColor = getHeadingColor(item.headingElement.depth);\r\n    \r\n    return <React.Fragment key={headingHash}>\r\n        <ListItem ref={domRef} button style={{\r\n            padding: 3, paddingLeft: props.layer * 10 + 10,\r\n            display: \"flex\", flexDirection: \"row\", alignItems: \"stretch\",\r\n            backgroundColor: (location.hash === headingHash) ? headingSelectedColor : undefined\r\n        }} selected={selected} onClick={() => {\r\n            if (!(opened && hasContent)) {\r\n                history.push(headingHash);\r\n                \r\n                props.onTitleClick();\r\n            }\r\n            \r\n            setOpened(!opened);\r\n        }}>\r\n            <div style={{\r\n                display: \"inline-flex\", width: 5, background: headingColor,\r\n                marginTop: 1, marginBottom: 0, marginRight: 5,\r\n                flexShrink: 0\r\n            }}/>\r\n            {toDisplay}\r\n            {hasContent && (opened ? <ExpandMore/> : <ExpandLess/>)}\r\n        </ListItem>\r\n        {hasContent && <Collapse in={opened} timeout={200}>\r\n            <List dense={true} style={{padding: 0}}>\r\n                {item.contents.map((w, index) => {\r\n                    if (!isHeadingWithContent(w)) {\r\n                        return undefined;\r\n                    }\r\n                    return <RightBarSection\r\n                        key={index}\r\n                        outerSelectedHash={props.outerSelectedHash}\r\n                        item={w}\r\n                        layer={props.layer + 1}\r\n                        setOuterSelected={(cond) => {\r\n                            setSelected(cond);\r\n                            \r\n                            if (cond) {\r\n                                setOpened(true);\r\n                            }\r\n                            \r\n                            if (props.setOuterSelected) {\r\n                                props.setOuterSelected(cond);\r\n                            }\r\n                        }}\r\n                        onTitleClick={props.onTitleClick}\r\n                        onViewed={props.onViewed}\r\n                    />;\r\n                })}\r\n            </List>\r\n        </Collapse>}\r\n    </React.Fragment>;\r\n}\r\n\r\ninterface HeadingRef {\r\n    headingHash: string,// has '#'\r\n    element: HTMLElement\r\n}\r\n\r\nfunction getHeadingRefs(result: Array<HeadingRef>, hierarchy: Array<any>) {\r\n    // console.log(hierarchy);\r\n    hierarchy.forEach((item) => {\r\n        if (isHeadingWithContent(item)) {\r\n            const headingHash = item.headingElement.myHeadingHash;\r\n            const element = document.getElementById(headingHash);\r\n            if (element !== null) {\r\n                result.push({\r\n                    headingHash: headingHash,\r\n                    element: element\r\n                });\r\n            } else {\r\n                console.error('cannot find ' + headingHash)\r\n            }\r\n            \r\n            getHeadingRefs(result, item.contents)\r\n        }\r\n    })\r\n}\r\n\r\n// const MemoedWikiSection = React.memo(WikiSection);\r\n\r\nfunction FlatWikiSection(props: { root: any, renderOptions: any }) {\r\n    const isMatureRef = useRef(false);\r\n    \r\n    // console.log(\"flat\")\r\n    \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            isMatureRef.current = true;\r\n        }, 1000);\r\n    }, []);\r\n    \r\n    return <WikiContextForHeading.Provider value={{isMatureRef: isMatureRef}}>\r\n        {astToReact(props.root, props.renderOptions)}\r\n    </WikiContextForHeading.Provider>;\r\n}\r\n\r\nconst MemoedFlatWikiSection = React.memo(FlatWikiSection);\r\n\r\nconst MemoedRightBarSection = React.memo(RightBarSection);\r\n\r\nexport function useWikiContent(\r\n    contentUrl: string,\r\n    renderers: any, plugins: any,\r\n    scrollDomRef: MutableRefObject<DOMElement<any, any>>,\r\n    fallbackUrl: string,\r\n    rightBarScrollRef: MutableRefObject<null | HTMLDivElement>\r\n): {\r\n    wikiContentComponent: ReactElement,\r\n    rightBarComponent: ReactElement,\r\n    updateScrollFunc: () => void,\r\n} {\r\n    let reactMarkdownProps: ReactMarkdownProps = {\r\n        renderers: renderers, plugins: plugins,\r\n        children: 'loading markdown'\r\n    };\r\n    \r\n    const [tree, setTree] = useState(null);\r\n    \r\n    const [errorLoading, setErrorLoading] = useState(false);\r\n    \r\n    const [isAwaitingTranslation, setIsAwaitingTranslation] = useState(false);\r\n    \r\n    const [rightBarEnabled, setRightBarEnabled] = useState(false);\r\n    \r\n    const hierarchyRef: MutableRefObject<null | Array<HeadingWithContent | any>> =\r\n        useRef(null);\r\n    \r\n    const renderPropsRef = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        async function doParseWikiContent() {\r\n            let markdownResult: AxiosResponse<any>;\r\n            try {\r\n                markdownResult = await Axios({\r\n                    url: isAwaitingTranslation ? fallbackUrl : contentUrl\r\n                });\r\n            } catch (e) {\r\n                setErrorLoading(true);\r\n                return;\r\n            }\r\n            \r\n            if (!isAwaitingTranslation) {\r\n                if (markdownResult.data === \"awaiting translation\") {\r\n                    setIsAwaitingTranslation(true);\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            let parsedMarkdown = await myParseMarkdownAsync({\r\n                // @ts-ignore\r\n                renderer: renderers, plugins: plugins,\r\n                children: markdownResult.data\r\n            });\r\n            \r\n            // @ts-ignore\r\n            hierarchyRef.current = extractHeadingContentGroup(parsedMarkdown.children);\r\n            \r\n            renderPropsRef.current = getRendererProps(reactMarkdownProps, parsedMarkdown);\r\n            \r\n            // @ts-ignore\r\n            setTree(parsedMarkdown);\r\n            setErrorLoading(false);\r\n            \r\n            // console.log(parsedMarkdown)\r\n        }\r\n        \r\n        doParseWikiContent()\r\n        \r\n        setTimeout(() => setRightBarEnabled(true), 1200);\r\n    }, [contentUrl, isAwaitingTranslation]);\r\n    \r\n    const rendererProps: any = renderPropsRef.current;\r\n    \r\n    // @ts-ignore\r\n    const hierarchy = hierarchyRef.current;\r\n    \r\n    const [viewingSectionHash, setViewingSectionHash] = useState('');\r\n    \r\n    const wikiContents = hierarchy === null ? undefined :\r\n        <MemoedFlatWikiSection root={tree} renderOptions={rendererProps}/>;\r\n    \r\n    const enableSectionUpdate = useRef(true);\r\n    const timerRef = useRef(null);\r\n    \r\n    useEffect(() => () => {\r\n        // @ts-ignore\r\n        clearTimeout(timerRef.current);\r\n    }, []);\r\n    \r\n    const headingRefs = useRef([]);\r\n    \r\n    useEffect(() => {\r\n        if (hierarchy !== null) {\r\n            const result: HeadingRef[] = [];\r\n            getHeadingRefs(result, hierarchy);\r\n            // @ts-ignore\r\n            headingRefs.current = result;\r\n            \r\n            // console.log(result);\r\n        }\r\n    }, [hierarchy]);\r\n    \r\n    \r\n    const doUpdateScroll = () => {\r\n        if (getIsVerticalMobile()) {\r\n            setViewingSectionHash('');\r\n            return;\r\n        }\r\n        \r\n        if (!scrollDomRef.current) {\r\n            return;\r\n        }\r\n        \r\n        if (!enableSectionUpdate.current) {\r\n            return;\r\n        }\r\n        \r\n        // console.log(\"scroll updating\")\r\n        \r\n        let active: HeadingRef | null = null;\r\n        \r\n        // @ts-ignore\r\n        const scrollTop: number = scrollDomRef.current.scrollTop;\r\n        // @ts-ignore\r\n        const scrollHeight: number = scrollDomRef.current.scrollHeight;\r\n        \r\n        var screenHeight = document.documentElement.clientHeight;\r\n        \r\n        const scrollPosition = ((scrollTop / (scrollHeight - screenHeight) * scrollHeight))\r\n        \r\n        for (let i = headingRefs.current.length - 1; i >= 0; i -= 1) {\r\n            \r\n            const item: HeadingRef = headingRefs.current[i];\r\n            \r\n            if (item.element &&\r\n                item.element.offsetTop <\r\n                scrollPosition + screenHeight / 4\r\n            ) {\r\n                active = item;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if (active !== null && viewingSectionHash !== active.headingHash) {\r\n            setViewingSectionHash(active.headingHash);\r\n        }\r\n    };\r\n    \r\n    const updateScrollMemoed = useCallback(doUpdateScroll, [viewingSectionHash]);\r\n    \r\n    const titles = (hierarchy !== null && rightBarEnabled) ? <List dense={true} style={{\r\n        fontSize: 16\r\n    }}>\r\n        {hierarchy.map((v, index) => {\r\n            if (!isHeadingWithContent(v)) {\r\n                return undefined;\r\n            }\r\n            \r\n            return <MemoedRightBarSection\r\n                outerSelectedHash={viewingSectionHash}\r\n                item={v}\r\n                layer={0}\r\n                key={index}\r\n                setOuterSelected={null}\r\n                onTitleClick={() => {\r\n                    enableSectionUpdate.current = false;\r\n                    // @ts-ignore\r\n                    timerRef.current = setTimeout(() => {\r\n                        enableSectionUpdate.current = true;\r\n                        updateScrollMemoed();\r\n                    }, 2000);\r\n                }}\r\n                onViewed={(termDom) => {\r\n                    if (rightBarScrollRef.current) {\r\n                        const termY = termDom.getBoundingClientRect().y;\r\n                        \r\n                        if (termY > 100 && ((termY + 200) < window.outerHeight)) {\r\n                            //visible\r\n                        } else {\r\n                            //invisible\r\n                            const scrollClientTop = rightBarScrollRef.current?.getBoundingClientRect().y;\r\n                            const scrollTop = rightBarScrollRef.current?.scrollTop || 0;\r\n                            const offset = termY - scrollClientTop + scrollTop;\r\n                            \r\n                            rightBarScrollRef.current?.scrollTo({top: offset - 200, behavior: 'smooth'});\r\n                        }\r\n                    }\r\n                }}\r\n            />;\r\n        })}\r\n    </List> : <></>;\r\n    \r\n    let location = useLocation();\r\n    \r\n    return {\r\n        wikiContentComponent: <div>\r\n            {/*<Collapse in={tree!==null} timeout={duration}>*/}\r\n            {/*    {wikiContents}*/}\r\n            {/*</Collapse>*/}\r\n            <MyClippingCollapse shown={tree !== null} duration={1000}>\r\n                {wikiContents}\r\n            </MyClippingCollapse>\r\n            {errorLoading && <Typography>\r\n                {'error loading ' + contentUrl}\r\n            </Typography>}\r\n            {(tree === null && !errorLoading) &&\r\n            <CircularProgress/>\r\n            }\r\n        </div>,\r\n        rightBarComponent: titles,\r\n        updateScrollFunc: updateScrollMemoed\r\n    };\r\n}\r\n\r\n","import {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {ListItem} from \"@material-ui/core\";\r\nimport {MyButton} from \"../../my_util/Util\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport DetailsIcon from \"@material-ui/icons/Details\";\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport BookIcon from '@material-ui/icons/Book';\r\n\r\nexport const WikiToSideBarContext = React.createContext({\r\n    onTermClicked: () => {\r\n    }\r\n});\r\n\r\nfunction processLink(url: string): string {\r\n    return url.substr(url.indexOf('/wiki'))\r\n}\r\n\r\nexport function getLocalWikiUrlFromGithubWikiUrl(githubWikiUrl: string) {\r\n    const processed = processLink(githubWikiUrl);\r\n    return '/immptl' + processed;\r\n}\r\n\r\n\r\nexport function MySidebarLink(props: { url: string, children: any }) {\r\n    // const history = useHistory();\r\n    \r\n    const location = useLocation();\r\n    \r\n    var githubWikiUrl = props.url;\r\n    var localUrl = getLocalWikiUrlFromGithubWikiUrl(githubWikiUrl);\r\n    \r\n    var context = useContext(WikiToSideBarContext);\r\n    \r\n    // const [iconColor, setIconColor] = useState(getRandomColor());\r\n    \r\n    const selected = location.pathname === localUrl;\r\n    \r\n    return <Link to={localUrl} style={{textDecoration: 'none', color: 'black'}}>\r\n        <ListItem selected={selected} button onClick={(e) => {\r\n            context.onTermClicked()\r\n            // history.push(localUrl);\r\n        }} style={{paddingLeft: 5}}>\r\n            <DescriptionIcon style={{marginRight: 5, color: selected?'#e64a19':'#3f51b5'}}/>\r\n            {props.children}\r\n        </ListItem>\r\n    </Link>;\r\n}\r\n\r\nexport function MyLinkInWiki(props: { targetLink: string, children: any }) {\r\n    let history = useHistory();\r\n    \r\n    let {t, i18n} = useTranslation();\r\n    \r\n    if (props.targetLink.indexOf('github.com/qouteall/ImmersivePortalsMod/wiki') !== -1) {\r\n        //inner link\r\n        \r\n        const localWikiUrlFromGithubWikiUrl = getLocalWikiUrlFromGithubWikiUrl(props.targetLink);\r\n        \r\n        return <Link to={localWikiUrlFromGithubWikiUrl} style={{color:\"#205723\"}}>\r\n                {props.children}\r\n        </Link>\r\n    } else {\r\n        //outer link\r\n        return <a href={props.targetLink}>{props.children}</a>\r\n    }\r\n}","import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {Octokit} from \"@octokit/core\";\r\nimport {\r\n    Button, Card, CardActionArea,\r\n    CircularProgress, Collapse,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle, List, ListItem,\r\n    TextField, Typography\r\n} from \"@material-ui/core\";\r\nimport {getCurrentLanguage, MyButton, useEndPoint} from \"../../my_util/Util\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport {headingTextToHash} from \"./WikiContent\";\r\nimport {wikiMarkdownRenderers} from \"./WikiPage\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nconst gfm = require('remark-gfm')\r\n\r\nconst octokit = new Octokit({});\r\n\r\n\r\nexport async function searchAndFindCorrelatedFiles(keyword: string, githubRepo: string): Promise<Array<string>> {\r\n    console.log(\"triggered\")\r\n    const result = await octokit.request('GET /search/code', {\r\n        q: `${keyword} repo:${githubRepo}`\r\n    })\r\n    \r\n    console.log(result);\r\n    \r\n    if (result.status !== 200) {\r\n        console.log(\"searching failed\");\r\n        throw Error(\"searching failed\");\r\n    }\r\n    \r\n    const items = result.data.items;\r\n    let paths: Array<string> = items.map((term) => term.path);\r\n    \r\n    return paths;\r\n    \r\n}\r\n\r\nexport interface SearchingContextType {\r\n    onClicked: () => void\r\n}\r\n\r\nexport const SearchingContext = React.createContext({\r\n    onClicked: () => {\r\n    }\r\n} as SearchingContextType);\r\n\r\nfunction isFileIncludedInSearch(filePathInRepo: string, language: string): boolean {\r\n    if (filePathInRepo.indexOf('LeftBar') !== -1) {\r\n        return false;\r\n    }\r\n    if (filePathInRepo.indexOf('Sidebar') !== -1) {\r\n        return false;\r\n    }\r\n    \r\n    const index = filePathInRepo.indexOf('/');\r\n    let fileLanguage;\r\n    if (index === -1) {\r\n        fileLanguage = 'en';\r\n    } else {\r\n        fileLanguage = filePathInRepo.substr(0, index);\r\n    }\r\n    \r\n    return language.startsWith(fileLanguage) || fileLanguage.startsWith(language);\r\n}\r\n\r\ntype SearchingState = 'ready' | 'loading' | 'finished' | 'error';\r\n\r\nconst contentPrefix = 'https://qouteall.fun/imm_ptl_wiki_copy/';\r\n\r\n\r\nfunction getIndicesOf(keyword: string, str: string, caseSensitive: boolean): Array<number> {\r\n    const keywordLen = keyword.length;\r\n    if (keywordLen === 0) {\r\n        return [];\r\n    }\r\n    let startIndex = 0;\r\n    let index;\r\n    let indices = [];\r\n    if (!caseSensitive) {\r\n        str = str.toLowerCase();\r\n        keyword = keyword.toLowerCase();\r\n    }\r\n    while ((index = str.indexOf(keyword, startIndex)) > -1) {\r\n        indices.push(index);\r\n        startIndex = index + keywordLen;\r\n    }\r\n    return indices;\r\n}\r\n\r\ninterface SearchingSectionData {\r\n    filePath: string,\r\n    previewText: string,\r\n    headingHash: string\r\n}\r\n\r\nfunction filePathToPagePath(filePath: string): string {\r\n    let result = filePath;\r\n    const slashIndex = result.indexOf('/');\r\n    if (slashIndex !== -1) {\r\n        result = result.substr(slashIndex + 1);\r\n    }\r\n    \r\n    const dotIndex = result.lastIndexOf('.');\r\n    if (dotIndex !== -1) {\r\n        result = result.substr(0, dotIndex);\r\n    }\r\n    \r\n    if (result.toLowerCase() === 'home') {\r\n        return '';\r\n    }\r\n    \r\n    return '/' + result;\r\n}\r\n\r\nfunction extractSearchingSectionDatas(\r\n    fileContent: string,\r\n    filePath: string,\r\n    keyword: string\r\n): Array<SearchingSectionData> {\r\n    \r\n    let occurences: Array<number> = getIndicesOf(keyword, fileContent, false);\r\n    \r\n    let result = [] as Array<SearchingSectionData>;\r\n    \r\n    let lastLineBreakIndex = -2;// avoid duplication\r\n    \r\n    for (const index of occurences) {\r\n        let lineBreakIndexBehind = fileContent.indexOf('\\n', index);\r\n        if (lineBreakIndexBehind === -1) {\r\n            lineBreakIndexBehind = fileContent.length;\r\n        }\r\n        \r\n        let lineBreakIndexFront = fileContent.lastIndexOf('\\n', index);\r\n        if (lineBreakIndexFront === -1) {\r\n            lineBreakIndexFront = -1;\r\n        }\r\n        \r\n        if (lastLineBreakIndex === lineBreakIndexFront) {\r\n            lastLineBreakIndex = lineBreakIndexFront;\r\n            continue;\r\n        }\r\n        lastLineBreakIndex = lineBreakIndexFront;\r\n        \r\n        const previewText = fileContent.substr(\r\n            lineBreakIndexFront + 1, lineBreakIndexBehind - lineBreakIndexFront - 1\r\n        );\r\n        \r\n        const poundIndex = fileContent.lastIndexOf('#', index);\r\n        let headingHash = '';\r\n        if (poundIndex !== -1) {\r\n            let headingEndIndex = fileContent.indexOf('\\n', poundIndex);\r\n            if (headingEndIndex === -1) {\r\n                headingEndIndex = fileContent.length;\r\n            }\r\n            headingHash = fileContent.substr(poundIndex + 1, headingEndIndex - poundIndex - 1);\r\n            headingHash = headingHash.trimStart();\r\n            var coerceHashMarkIndex = headingHash.indexOf('{#');\r\n            if (coerceHashMarkIndex !== -1) {\r\n                headingHash = headingHash.substr(\r\n                    coerceHashMarkIndex + 1,\r\n                    headingHash.lastIndexOf('}') - coerceHashMarkIndex - 1\r\n                );\r\n            } else {\r\n                headingHash = headingTextToHash(headingHash);\r\n            }\r\n        }\r\n        \r\n        result.push({\r\n            filePath: filePath,\r\n            previewText: previewText,\r\n            headingHash: headingHash\r\n        });\r\n    }\r\n    \r\n    return result;\r\n    \r\n}\r\n\r\nconst pathStart = '/immptl/wiki'\r\n\r\nfunction SearchingResultSection(props: {\r\n    data: SearchingSectionData,\r\n    keyword: string\r\n}) {\r\n    let history = useHistory();\r\n    let context = useContext(SearchingContext);\r\n    \r\n    const pagePath = filePathToPagePath(props.data.filePath);\r\n    const link = pathStart + pagePath + props.data.headingHash;\r\n    \r\n    return <Card elevation={5} style={{margin: 5, width: '100%'}}>\r\n        \r\n        <Link to={link} style={{textDecoration: 'none', color: 'black'}} onClick={context.onClicked}>\r\n            <CardActionArea style={{fontSize: 'unset'}}>\r\n                \r\n                {/*@ts-ignore*/}\r\n                <ReactMarkdown plugins={[gfm]} renderers={wikiMarkdownRenderers}>\r\n                    {props.data.previewText}\r\n                </ReactMarkdown>\r\n            \r\n            </CardActionArea>\r\n        </Link>\r\n    \r\n    </Card>\r\n}\r\n\r\nfunction SearchingResultFileEntry(props: {\r\n    keyword: string, filePath: string\r\n}) {\r\n    const filePath = contentPrefix + props.filePath;\r\n    const {complete, data, error, pending} = useEndPoint(filePath);\r\n    let [sectionDatas, setSectionDatas] = useState([] as Array<SearchingSectionData>);\r\n    let [opened, setOpened] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        if (complete) {\r\n            setSectionDatas(extractSearchingSectionDatas(\r\n                data as unknown as string, props.filePath, props.keyword\r\n            ));\r\n        } else {\r\n            setSectionDatas([]);\r\n        }\r\n    }, [complete])\r\n    \r\n    return <div style={{display: 'flex', flexDirection: 'column'}}>\r\n        <ListItem style={{alignSelf: 'stretch', display: 'flex', flexDirection: 'row'}}\r\n                  button onClick={() => setOpened(!opened)}\r\n        >\r\n            <DescriptionIcon style={{color: '#3f51b5'}}/>\r\n            <Typography>{props.filePath}</Typography>\r\n            {opened ? <ExpandMore/> : <ExpandLess/>}\r\n        </ListItem>\r\n        {error && 'error loading ' + filePath}\r\n        {pending && <CircularProgress/>}\r\n        <Collapse in={opened}>\r\n            <div style={{\r\n                display: 'flex', flexDirection: 'column', alignItems: 'stretch', alignSelf: 'stretch',\r\n                padding: 10\r\n            }}>\r\n                {sectionDatas.map((data, index) =>\r\n                    <SearchingResultSection data={data} keyword={props.keyword} key={index}/>\r\n                )}\r\n            </div>\r\n        </Collapse>\r\n    \r\n    </div>;\r\n}\r\n\r\nexport function SearchingDialogComponent(props: {\r\n    enabled: boolean, close: () => void\r\n}) {\r\n    let [keyword, setKeyword] = useState('');\r\n    let [currState, setCurrState] = useState('ready' as SearchingState);\r\n    let [filePaths, setFilePaths] = useState([] as Array<string>);\r\n    \r\n    async function doSearchAsync() {\r\n        console.log(\"started searching\" + keyword);\r\n        \r\n        let paths: Array<string>;\r\n        try {\r\n            paths = await searchAndFindCorrelatedFiles(keyword, 'qouteall/imm_ptl_wiki_copy');\r\n        } catch (e) {\r\n            setCurrState('error');\r\n            return;\r\n        }\r\n        \r\n        const filteredPaths = paths.filter(value => isFileIncludedInSearch(value, getCurrentLanguage()))\r\n        \r\n        setCurrState('finished');\r\n        setFilePaths(filteredPaths);\r\n    }\r\n    \r\n    let doSearch = () => {\r\n        if (keyword.length === 0) {\r\n            return;\r\n        }\r\n        \r\n        setCurrState('loading');\r\n        setFilePaths([]);\r\n        \r\n        doSearchAsync();\r\n    }\r\n    \r\n    doSearch = useCallback(doSearch, [keyword, setCurrState, setFilePaths]);\r\n    \r\n    return <Dialog\r\n        open={props.enabled}\r\n        onClose={props.close}\r\n        maxWidth='md'\r\n        fullWidth={true}\r\n    >\r\n        <DialogTitle>{\"Search\"}</DialogTitle>\r\n        <div style={{display: 'flex', flexDirection: 'row', margin: 20}}>\r\n            <TextField autoFocus fullWidth onChange={event => setKeyword(event.target.value)} onKeyUp={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                    doSearch();\r\n                }\r\n            }}/>\r\n            <Button onClick={doSearch}>\r\n                <SearchIcon/>\r\n            </Button>\r\n        </div>\r\n        \r\n        {currState === 'finished' && <div style={{margin: 20}}>\r\n            <div style={{display: 'flex', alignItems: 'stretch', flexDirection: 'column'}}>\r\n                {filePaths.map(filePath => <SearchingResultFileEntry\r\n                    key={filePath} keyword={keyword} filePath={filePath}\r\n                />)}\r\n            </div>\r\n            {filePaths.length === 0 && 'No Result'}\r\n        </div>}\r\n        \r\n        {currState === 'loading' && <CircularProgress style={{margin: 20}}/>}\r\n        {currState === 'error' && 'error'}\r\n    \r\n    \r\n    </Dialog>;\r\n}","import React, {DOMElement, useEffect, useRef, useState} from \"react\";\r\nimport {MyBanner} from \"../MyBanner\";\r\nimport {CircularProgress, List, ListItem} from \"@material-ui/core\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport {\r\n    getIsVerticalMobile,\r\n    getPublicResourcePath,\r\n    getStringAfter,\r\n    baseMarkdownRenderers,\r\n    useEndPoint\r\n} from \"../../my_util/Util\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Route, Switch, useLocation} from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport {myParseMarkdownAsync, useWikiContent} from \"./WikiContent\";\r\nimport {\r\n    getLocalWikiUrlFromGithubWikiUrl,\r\n    MyLinkInWiki, MySidebarLink,\r\n    WikiToSideBarContext\r\n} from \"./WikiSidebar\";\r\nimport {WikiHeading} from \"./WikiHeading\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {SearchingContext, SearchingDialogComponent} from \"./WikiSearching\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport {IndexPage} from \"../IndexPage\";\r\nimport {IPPage} from \"../IPPage\";\r\nimport {TestPage} from \"../../AnimatedPages\";\r\n\r\nconst gfm = require('remark-gfm')\r\n\r\n//both github wiki url and this website url\r\nfunction getMdUrlFromWikiUrl(url: string, head: string) {\r\n    var innerPath = getStringAfter(url, '/wiki');\r\n    \r\n    if (innerPath.length === 0) {\r\n        return head + '/Home.md';\r\n    }\r\n    \r\n    return head + innerPath + '.md';\r\n}\r\n\r\nexport function removeAssignedHash(text: string) {\r\n    let i = text.indexOf('{#');\r\n    if (i !== -1) {\r\n        return text.slice(0, i);\r\n    }\r\n    \r\n    return text;\r\n}\r\n\r\nexport const wikiMarkdownRenderers = {\r\n    ...baseMarkdownRenderers,\r\n    text: (a: any) => {\r\n        let text: string = a.value;\r\n        return removeAssignedHash(text);\r\n    },\r\n    table: (a: any) => {\r\n        return <Table>{a.children}</Table>\r\n    },\r\n    tableHead: (a: any) => <TableHead>{a.children}</TableHead>,\r\n    tableRow: (a: any) => <TableRow>{a.children}</TableRow>,\r\n    tableBody: (a: any) => <TableBody>{a.children}</TableBody>,\r\n    tableCell: (a: any) => <TableCell>{a.children}</TableCell>,\r\n    link: (a: any) => {\r\n        return <MyLinkInWiki targetLink={a.href}>{a.children}</MyLinkInWiki>\r\n    },\r\n    heading: (a: any) => {\r\n        return <WikiHeading level={a.level} node={a.node}>{a.children}</WikiHeading>\r\n    },\r\n    code: (a: any) => {\r\n        return <pre style={{\r\n            margin: 5, padding: 5,\r\n            overflowX: 'auto',\r\n            background: '#eaeaea'\r\n        }}>\r\n            <code>{a.value}</code>\r\n        </pre>\r\n    },\r\n    inlineCode: (a: any) => {\r\n        return <code style={{\r\n            background: '#eaeaea'\r\n        }}>{a.value}</code>\r\n    }\r\n}\r\n\r\ninterface WikiPageEntry {\r\n    title: string,\r\n    url: string\r\n}\r\n\r\nfunction parseWikiPageEntries(result: Array<WikiPageEntry>, node: any) {\r\n    if (node.type === 'link') {\r\n        let newEntry: WikiPageEntry = {\r\n            title: node.children[0].value,\r\n            url: node.url\r\n        };\r\n        \r\n        result.push(newEntry);\r\n    }\r\n    \r\n    if (node.children) {\r\n        for (let c of node.children) {\r\n            parseWikiPageEntries(result, c);\r\n        }\r\n    }\r\n    \r\n    return null;\r\n}\r\n\r\nexport function IPWikiPage() {\r\n    let {t, i18n} = useTranslation();\r\n    \r\n    let location = useLocation();\r\n    \r\n    const wikiContentUrl = getMdUrlFromWikiUrl(location.pathname, t('url_wiki_content_prefix'));\r\n    const fallbackWikiContentUrl = getMdUrlFromWikiUrl(location.pathname, \"https://qouteall.fun/imm_ptl_wiki_copy\");\r\n    \r\n    const [wikiTitle, setWikiTitle] = useState('Loading...');\r\n    \r\n    const [wikiPageEntries, setWikiPageEntries] = useState([] as WikiPageEntry[]);\r\n    \r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    \r\n    const [isPageNotFound, setIsPageNotFound] = useState(false);\r\n    \r\n    const sidebarUrl = t('url_wiki_sidebar');\r\n    const {data: sideBarData, complete: sidebarComplete} = useEndPoint(sidebarUrl);\r\n    \r\n    const [isSearchingDialogShown, setSearchingDialogShown] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        async function doParseLeftbar() {\r\n            if (sideBarData === null) {\r\n                return;\r\n            }\r\n            \r\n            const node = await myParseMarkdownAsync({children: sideBarData as unknown as string});\r\n            \r\n            let newPageEntries: Array<WikiPageEntry> = [];\r\n            parseWikiPageEntries(newPageEntries, node);\r\n            \r\n            setWikiPageEntries(newPageEntries);\r\n            \r\n            let result = newPageEntries.find(entry =>\r\n                getLocalWikiUrlFromGithubWikiUrl(entry.url) === location.pathname\r\n            );\r\n            \r\n            if (result) {\r\n                setIsPageNotFound(false);\r\n                setWikiTitle(result.title);\r\n            } else {\r\n                setIsPageNotFound(true);\r\n            }\r\n        }\r\n        \r\n        doParseLeftbar();\r\n    }, [location.pathname, sidebarComplete]);\r\n    \r\n    const leftBarComponent = <WikiToSideBarContext.Provider value={{\r\n        onTermClicked: () => setIsDrawerOpen(false)\r\n    }}>\r\n        <Typography variant='h5' style={{margin: 10, marginBottom: 0, marginLeft: 15}}>\r\n            {t('Pages')}\r\n        </Typography>\r\n        <Divider style={{margin: 10}}/>\r\n        \r\n        <List component='nav' style={{maxWidth: '80vw', display: 'flex', flexDirection: 'column', flexGrow: 1}}>\r\n            {\r\n                sidebarComplete ?\r\n                    wikiPageEntries.map(entry =>\r\n                        <MySidebarLink url={entry.url} children={entry.title} key={entry.url}/>\r\n                    )\r\n                    : <CircularProgress/>\r\n            }\r\n            \r\n            <div style={{flexGrow: 1}}/>\r\n            \r\n            <ListItem key='search' button style={{paddingLeft: 5}}\r\n                      onClick={() => {\r\n                          setSearchingDialogShown(true);\r\n                      }}\r\n            >\r\n                <SearchIcon style={{marginRight: 5, marginLeft: 0, color: '#e64a19'}}/>\r\n                Search\r\n            </ListItem>\r\n        </List>\r\n    </WikiToSideBarContext.Provider>;\r\n    \r\n    const leftBarOnMobile = <>\r\n        <Drawer anchor='left' open={isDrawerOpen} onClose={\r\n            () => setIsDrawerOpen(false)\r\n        } style={{}}>\r\n            {leftBarComponent}\r\n        </Drawer>\r\n        \r\n        {/*render to make the effect trigger and set the wiki title.\r\n         It's a workaround and will be refactored*/}\r\n        {!isDrawerOpen && <div style={{display: \"none\"}}>\r\n            {leftBarComponent}\r\n        </div>}\r\n    </>;\r\n    \r\n    const leftBarOnPC = <div style={{\r\n        minWidth: '20vw', maxWidth: '20vw',\r\n        alignSelf: 'stretch', overflowY: 'auto',\r\n        display: 'flex', flexDirection: 'column'\r\n    }} className='My-Sticky'>{leftBarComponent}</div>;\r\n    \r\n    const scrollDomRef = useRef(null);\r\n    \r\n    const rightBarScrollRef = useRef(null as (null | HTMLDivElement));\r\n    \r\n    const {\r\n        wikiContentComponent: wikiContentComponent,\r\n        rightBarComponent: rightBarComponent,\r\n        updateScrollFunc: updateScrollFunc\r\n    } = useWikiContent(\r\n        // @ts-ignore\r\n        wikiContentUrl, wikiMarkdownRenderers, [gfm], scrollDomRef,\r\n        fallbackWikiContentUrl,\r\n        rightBarScrollRef\r\n    );\r\n    \r\n    const scrollTimerRef = useRef(null as any);\r\n    \r\n    const isVerticalMobile = getIsVerticalMobile();\r\n    return <div className='My-Page' style={{\r\n        display: 'flex', flexDirection: 'column'\r\n    }}>\r\n        <MyBanner text={t('Immersive Portals Wiki')} color='#9500ae'\r\n                  pageIconPath={getPublicResourcePath('/immptl.png')}>\r\n            {isVerticalMobile &&\r\n            <IconButton onClick={() => setIsDrawerOpen(!isDrawerOpen)}>\r\n                <MenuIcon style={{color: 'white'}}/>\r\n            </IconButton>}\r\n        </MyBanner>\r\n        \r\n        <div style={{\r\n            display: 'flex', flexDirection: 'row', alignItems: \"flex-start\",\r\n            overflowY: 'auto',\r\n            minHeight: 0, flexBasis: 0, flexGrow: 1\r\n        }} onScroll={() => {\r\n            if (scrollTimerRef.current) {\r\n                clearTimeout(scrollTimerRef.current);\r\n            }\r\n            \r\n            scrollTimerRef.current = setTimeout(updateScrollFunc, 300);\r\n        }} ref={scrollDomRef}>\r\n            {isVerticalMobile ? leftBarOnMobile : leftBarOnPC}\r\n            \r\n            <div style={{\r\n                margin: 0, padding: 20, flexGrow: 1,\r\n                minWidth: 0, flexBasis: 0\r\n            }} ref={rightBarScrollRef}>\r\n                <Typography variant='h4'>\r\n                    {wikiTitle}\r\n                </Typography>\r\n                <Divider style={{margin: 10}}/>\r\n                {isPageNotFound ? 'Page Not Found' : wikiContentComponent}\r\n            </div>\r\n            \r\n            {!isVerticalMobile && <div ref={rightBarScrollRef} style={{\r\n                margin: 0, minWidth: '20vw', maxWidth: '20vw',\r\n                alignSelf: 'stretch', overflowY: 'auto',\r\n            }} className='My-Sticky'>\r\n                <Typography variant='h5' style={{margin: 10, marginBottom: 0}}>\r\n                    {t('Contents')}\r\n                </Typography>\r\n                <Divider style={{margin: 10}}/>\r\n                {rightBarComponent}\r\n            </div>}\r\n        </div>\r\n        <SearchingContext.Provider value={{onClicked: () => setSearchingDialogShown(false)}}>\r\n            <SearchingDialogComponent\r\n                enabled={isSearchingDialogShown}\r\n                close={() => setSearchingDialogShown(false)}\r\n            />\r\n        </SearchingContext.Provider>\r\n    \r\n    \r\n    </div>;\r\n}","import React, {Suspense, useEffect, useRef, useState} from 'react';\r\nimport {Route, Switch, useLocation} from \"react-router-dom\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport {IndexPage} from \"./pages/IndexPage\";\r\nimport {IPPage} from \"./pages/IPPage\";\r\nimport './App.css'\r\nimport {IPWikiPage} from \"./pages/wiki/WikiPage\";\r\nimport {MyBanner} from \"./pages/MyBanner\";\r\nimport {Collapse} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Axios from \"axios\";\r\nimport {Octokit} from \"@octokit/core\";\r\n\r\n\r\nexport function TestPage() {\r\n    \r\n    \r\n    return <div className='My-Page'>\r\n        <MyBanner text={\"test\"} color={'black'} pageIconPath={''}/>\r\n        \r\n        <Button onClick={() => {\r\n            async function doIt() {\r\n                // testSearch();\r\n            }\r\n            \r\n            doIt();\r\n        }}>h</Button>\r\n    </div>\r\n}\r\n\r\nfunction getAnimationRouterKey(pathname: string) {\r\n    if (pathname.startsWith(\"/immptl/wiki\")) {\r\n        return \"/immptl/wiki/\"\r\n    } else {\r\n        return pathname\r\n    }\r\n}\r\n\r\nexport function AnimatedPages() {\r\n    let location = useLocation();\r\n    \r\n    let refMouseX = useRef(0);\r\n    let refMouseY = useRef(0);\r\n    \r\n    useEffect(() => {\r\n        let root = document.documentElement;\r\n        \r\n        let listener = (e: any) => {\r\n            refMouseX.current = e.clientX;\r\n            refMouseY.current = e.clientY;\r\n            // root.style.setProperty('--mouse-x', e.clientX + \"px\");\r\n            // root.style.setProperty('--mouse-y', e.clientY + \"px\");\r\n        };\r\n        root.addEventListener(\"mousemove\", listener);\r\n        \r\n        return () => {\r\n            root.removeEventListener(\"mousemove\", listener);\r\n        }\r\n    }, []);\r\n    \r\n    document.documentElement.style.setProperty('--mouse-x', refMouseX.current + 'px');\r\n    document.documentElement.style.setProperty('--mouse-y', refMouseY.current + 'px');\r\n    \r\n    return (\r\n        <Suspense fallback={'loading'}>\r\n            <TransitionGroup>\r\n                <CSSTransition\r\n                    key={getAnimationRouterKey(location.pathname)}\r\n                    classNames=\"circle-fade\"\r\n                    timeout={1000}\r\n                >\r\n                    <Switch location={location}>\r\n                        <Route path='/' exact>\r\n                            <IndexPage/>\r\n                        </Route>\r\n                        <Route path='/immptl/' exact>\r\n                            <IPPage/>\r\n                        </Route>\r\n                        <Route path='/immptl/wiki/'>\r\n                            <IPWikiPage/>\r\n                        </Route>\r\n                        <Route path='/test'>\r\n                            <TestPage/>\r\n                        </Route>\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </Suspense>\r\n    \r\n    \r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {AnimatedPages} from \"./AnimatedPages\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <AnimatedPages/>\r\n\r\n                {/*<Route exact path='/'>*/}\r\n                {/*    <Redirect to='/main'/>*/}\r\n                {/*</Route>*/}\r\n                {/*<Route path='*'>*/}\r\n                {/*   */}\r\n                {/*</Route>*/}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './i18n'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}